

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
    public sealed partial class OpportunityClose : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the OpportunityClose entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public OpportunityClose()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public OpportunityClose(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.OpportunityClose> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.OpportunityClose.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OpportunityClose_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OpportunityClose_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Subject
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.Subject);
            }
            set
            {
                global::LightSwitchApplication.OpportunityClose.DetailsClass.SetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.Subject, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Subject_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Subject_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Subject_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Guid ActivityId
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ActivityId);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ModifiedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.CreatedOn);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ActualStart
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ActualStart);
            }
            set
            {
                global::LightSwitchApplication.OpportunityClose.DetailsClass.SetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ActualStart, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualStart_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualStart_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualStart_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ActualDurationMinutes
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ActualDurationMinutes);
            }
            set
            {
                global::LightSwitchApplication.OpportunityClose.DetailsClass.SetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ActualDurationMinutes, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualDurationMinutes_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualDurationMinutes_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualDurationMinutes_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.CreatedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> ActualRevenue
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ActualRevenue);
            }
            set
            {
                global::LightSwitchApplication.OpportunityClose.DetailsClass.SetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ActualRevenue, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualRevenue_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualRevenue_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualRevenue_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ScheduledStart
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ScheduledStart);
            }
            set
            {
                global::LightSwitchApplication.OpportunityClose.DetailsClass.SetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ScheduledStart, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduledStart_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduledStart_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduledStart_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> IsWorkflowCreated
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.IsWorkflowCreated);
            }
            set
            {
                global::LightSwitchApplication.OpportunityClose.DetailsClass.SetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.IsWorkflowCreated, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsWorkflowCreated_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsWorkflowCreated_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsWorkflowCreated_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> StateCode
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.StateCode);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StateCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StateCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StateCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> StatusCode
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.StatusCode);
            }
            set
            {
                global::LightSwitchApplication.OpportunityClose.DetailsClass.SetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.StatusCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> ServiceId
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ServiceId);
            }
            set
            {
                global::LightSwitchApplication.OpportunityClose.DetailsClass.SetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ServiceId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> IsBilled
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.IsBilled);
            }
            set
            {
                global::LightSwitchApplication.OpportunityClose.DetailsClass.SetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.IsBilled, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsBilled_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsBilled_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsBilled_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> OwningBusinessUnit
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.OwningBusinessUnit);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OwningBusinessUnit_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OwningBusinessUnit_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OwningBusinessUnit_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Description
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.Description);
            }
            set
            {
                global::LightSwitchApplication.OpportunityClose.DetailsClass.SetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.Description, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ActualEnd
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ActualEnd);
            }
            set
            {
                global::LightSwitchApplication.OpportunityClose.DetailsClass.SetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ActualEnd, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualEnd_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualEnd_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualEnd_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ScheduledEnd
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ScheduledEnd);
            }
            set
            {
                global::LightSwitchApplication.OpportunityClose.DetailsClass.SetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ScheduledEnd, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduledEnd_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduledEnd_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduledEnd_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Category
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.Category);
            }
            set
            {
                global::LightSwitchApplication.OpportunityClose.DetailsClass.SetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.Category, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Category_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Category_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Category_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ScheduledDurationMinutes
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ScheduledDurationMinutes);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduledDurationMinutes_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduledDurationMinutes_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduledDurationMinutes_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> OwnerId
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.OwnerId);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OwnerId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OwnerId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OwnerId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Subcategory
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.Subcategory);
            }
            set
            {
                global::LightSwitchApplication.OpportunityClose.DetailsClass.SetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.Subcategory, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Subcategory_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Subcategory_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Subcategory_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<long> VersionNumber
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.VersionNumber);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ModifiedOn);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> OwningUser
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.OwningUser);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OwningUser_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OwningUser_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OwningUser_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> TransactionCurrencyId
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.TransactionCurrencyId);
            }
            set
            {
                global::LightSwitchApplication.OpportunityClose.DetailsClass.SetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.TransactionCurrencyId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransactionCurrencyId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransactionCurrencyId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransactionCurrencyId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> UTCConversionTimeZoneCode
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.UTCConversionTimeZoneCode);
            }
            set
            {
                global::LightSwitchApplication.OpportunityClose.DetailsClass.SetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.UTCConversionTimeZoneCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UTCConversionTimeZoneCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UTCConversionTimeZoneCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UTCConversionTimeZoneCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ImportSequenceNumber
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ImportSequenceNumber);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ImportSequenceNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ImportSequenceNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ImportSequenceNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> TimeZoneRuleVersionNumber
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.TimeZoneRuleVersionNumber);
            }
            set
            {
                global::LightSwitchApplication.OpportunityClose.DetailsClass.SetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.TimeZoneRuleVersionNumber, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeZoneRuleVersionNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeZoneRuleVersionNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeZoneRuleVersionNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> ExchangeRate
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ExchangeRate);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExchangeRate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExchangeRate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExchangeRate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> OverriddenCreatedOn
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.OverriddenCreatedOn);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OverriddenCreatedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OverriddenCreatedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OverriddenCreatedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> ActualRevenue_Base
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ActualRevenue_Base);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualRevenue_Base_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualRevenue_Base_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualRevenue_Base_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> CreatedOnBehalfBy
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.CreatedOnBehalfBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOnBehalfBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOnBehalfBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOnBehalfBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> ModifiedOnBehalfBy
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ModifiedOnBehalfBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedOnBehalfBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedOnBehalfBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedOnBehalfBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ActivityTypeCode
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ActivityTypeCode);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityTypeCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityTypeCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityTypeCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> IsRegularActivity
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.IsRegularActivity);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsRegularActivity_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsRegularActivity_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsRegularActivity_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Team team_opportunityclose
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.team_opportunityclose);
            }
            set
            {
                global::LightSwitchApplication.OpportunityClose.DetailsClass.SetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.team_opportunityclose, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void team_opportunityclose_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void team_opportunityclose_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void team_opportunityclose_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Opportunity Opportunity_OpportunityClose
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.Opportunity_OpportunityClose);
            }
            set
            {
                global::LightSwitchApplication.OpportunityClose.DetailsClass.SetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.Opportunity_OpportunityClose, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Opportunity_OpportunityClose_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Opportunity_OpportunityClose_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Opportunity_OpportunityClose_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Competitor competitor_opportunity_activities
        {
            get
            {
                return global::LightSwitchApplication.OpportunityClose.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.competitor_opportunity_activities);
            }
            set
            {
                global::LightSwitchApplication.OpportunityClose.DetailsClass.SetValue(this, global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.competitor_opportunity_activities, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void competitor_opportunity_activities_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void competitor_opportunity_activities_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void competitor_opportunity_activities_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.OpportunityClose,
                global::LightSwitchApplication.OpportunityClose.DetailsClass,
                global::LightSwitchApplication.OpportunityClose.DetailsClass.IImplementation,
                global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.Subject;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass>.Entry
                __OpportunityCloseEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass>.Entry(
                    global::LightSwitchApplication.OpportunityClose.DetailsClass.__OpportunityClose_CreateNew,
                    global::LightSwitchApplication.OpportunityClose.DetailsClass.__OpportunityClose_Created,
                    global::LightSwitchApplication.OpportunityClose.DetailsClass.__OpportunityClose_AllowSaveWithErrors);
            private static global::LightSwitchApplication.OpportunityClose __OpportunityClose_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.OpportunityClose> es)
            {
                return new global::LightSwitchApplication.OpportunityClose(es);
            }
            private static void __OpportunityClose_Created(global::LightSwitchApplication.OpportunityClose e)
            {
                e.OpportunityClose_Created();
            }
            private static bool __OpportunityClose_AllowSaveWithErrors(global::LightSwitchApplication.OpportunityClose e)
            {
                bool result = false;
                e.OpportunityClose_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, string> Subject
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.Subject) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Guid> ActivityId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ActivityId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Guid>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>> ModifiedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ModifiedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>> CreatedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.CreatedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>> ActualStart
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ActualStart) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>> ActualDurationMinutes
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ActualDurationMinutes) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>> CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<decimal>> ActualRevenue
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ActualRevenue) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>> ScheduledStart
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ScheduledStart) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<bool>> IsWorkflowCreated
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.IsWorkflowCreated) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>> StateCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.StateCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>> StatusCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.StatusCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>> ServiceId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ServiceId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<bool>> IsBilled
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.IsBilled) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>> OwningBusinessUnit
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.OwningBusinessUnit) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, string> Description
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.Description) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>> ActualEnd
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ActualEnd) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>> ScheduledEnd
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ScheduledEnd) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, string> Category
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.Category) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>> ScheduledDurationMinutes
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ScheduledDurationMinutes) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>> OwnerId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.OwnerId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, string> Subcategory
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.Subcategory) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<long>> VersionNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.VersionNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<long>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>> ModifiedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ModifiedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>> OwningUser
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.OwningUser) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>> TransactionCurrencyId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.TransactionCurrencyId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>> UTCConversionTimeZoneCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.UTCConversionTimeZoneCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>> ImportSequenceNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ImportSequenceNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>> TimeZoneRuleVersionNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.TimeZoneRuleVersionNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<decimal>> ExchangeRate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ExchangeRate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>> OverriddenCreatedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.OverriddenCreatedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<decimal>> ActualRevenue_Base
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ActualRevenue_Base) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>> CreatedOnBehalfBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.CreatedOnBehalfBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>> ModifiedOnBehalfBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ModifiedOnBehalfBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, string> ActivityTypeCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.ActivityTypeCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<bool>> IsRegularActivity
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.IsRegularActivity) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::LightSwitchApplication.Team> team_opportunityclose
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.team_opportunityclose) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::LightSwitchApplication.Team>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::LightSwitchApplication.Opportunity> Opportunity_OpportunityClose
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.Opportunity_OpportunityClose) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::LightSwitchApplication.Opportunity>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::LightSwitchApplication.Competitor> competitor_opportunity_activities
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.competitor_opportunity_activities) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::LightSwitchApplication.Competitor>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new string Subject { get; set; }
                new global::System.Guid ActivityId { get; }
                new global::System.Nullable<global::System.Guid> ModifiedBy { get; }
                new global::System.Nullable<global::System.DateTime> CreatedOn { get; }
                new global::System.Nullable<global::System.DateTime> ActualStart { get; set; }
                new global::System.Nullable<int> ActualDurationMinutes { get; set; }
                new global::System.Nullable<global::System.Guid> CreatedBy { get; }
                new global::System.Nullable<decimal> ActualRevenue { get; set; }
                new global::System.Nullable<global::System.DateTime> ScheduledStart { get; set; }
                new global::System.Nullable<bool> IsWorkflowCreated { get; set; }
                new global::System.Nullable<int> StateCode { get; }
                new global::System.Nullable<int> StatusCode { get; set; }
                new global::System.Nullable<global::System.Guid> ServiceId { get; set; }
                new global::System.Nullable<bool> IsBilled { get; set; }
                new global::System.Nullable<global::System.Guid> OwningBusinessUnit { get; }
                new string Description { get; set; }
                new global::System.Nullable<global::System.DateTime> ActualEnd { get; set; }
                new global::System.Nullable<global::System.DateTime> ScheduledEnd { get; set; }
                new string Category { get; set; }
                new global::System.Nullable<int> ScheduledDurationMinutes { get; }
                new global::System.Nullable<global::System.Guid> OwnerId { get; }
                new string Subcategory { get; set; }
                new global::System.Nullable<long> VersionNumber { get; }
                new global::System.Nullable<global::System.DateTime> ModifiedOn { get; }
                new global::System.Nullable<global::System.Guid> OwningUser { get; }
                new global::System.Nullable<global::System.Guid> TransactionCurrencyId { get; set; }
                new global::System.Nullable<int> UTCConversionTimeZoneCode { get; set; }
                new global::System.Nullable<int> ImportSequenceNumber { get; }
                new global::System.Nullable<int> TimeZoneRuleVersionNumber { get; set; }
                new global::System.Nullable<decimal> ExchangeRate { get; }
                new global::System.Nullable<global::System.DateTime> OverriddenCreatedOn { get; }
                new global::System.Nullable<decimal> ActualRevenue_Base { get; }
                new global::System.Nullable<global::System.Guid> CreatedOnBehalfBy { get; }
                new global::System.Nullable<global::System.Guid> ModifiedOnBehalfBy { get; }
                new string ActivityTypeCode { get; }
                new global::System.Nullable<bool> IsRegularActivity { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation team_opportunityclose { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Opportunity_OpportunityClose { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation competitor_opportunity_activities { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, string>.Entry
                    Subject = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, string>.Entry(
                        "Subject",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._Subject_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._Subject_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._Subject_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._Subject_GetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._Subject_SetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._Subject_OnValueChanged);
                private static void _Subject_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, string>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._Subject, sf);
                }
                private static bool _Subject_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.Subject_IsReadOnly(ref result);
                    return result;
                }
                private static void _Subject_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Subject_Validate(r);
                }
                private static string _Subject_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.Subject;
                }
                private static void _Subject_SetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Subject = v;
                }
                private static void _Subject_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.Subject_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Guid>.Entry
                    ActivityId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Guid>.Entry(
                        "ActivityId",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActivityId_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActivityId_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActivityId_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActivityId_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActivityId_OnValueChanged);
                private static void _ActivityId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Guid>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._ActivityId, sf);
                }
                private static bool _ActivityId_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.ActivityId_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActivityId_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActivityId_Validate(r);
                }
                private static global::System.Guid _ActivityId_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.ActivityId;
                }
                private static void _ActivityId_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.ActivityId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    ModifiedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "ModifiedBy",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ModifiedBy_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ModifiedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ModifiedBy_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ModifiedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ModifiedBy_OnValueChanged);
                private static void _ModifiedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedBy, sf);
                }
                private static bool _ModifiedBy_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.ModifiedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedBy_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedBy_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _ModifiedBy_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedBy;
                }
                private static void _ModifiedBy_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.ModifiedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    CreatedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "CreatedOn",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._CreatedOn_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._CreatedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._CreatedOn_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._CreatedOn_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._CreatedOn_OnValueChanged);
                private static void _CreatedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedOn, sf);
                }
                private static bool _CreatedOn_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.CreatedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedOn_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedOn_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _CreatedOn_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedOn;
                }
                private static void _CreatedOn_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.CreatedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ActualStart = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ActualStart",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActualStart_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActualStart_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActualStart_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActualStart_GetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActualStart_SetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActualStart_OnValueChanged);
                private static void _ActualStart_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._ActualStart, sf);
                }
                private static bool _ActualStart_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.ActualStart_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActualStart_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActualStart_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ActualStart_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.ActualStart;
                }
                private static void _ActualStart_SetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.ActualStart = global::LightSwitchApplication.OpportunityClose.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _ActualStart_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.ActualStart_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>>.Entry
                    ActualDurationMinutes = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ActualDurationMinutes",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActualDurationMinutes_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActualDurationMinutes_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActualDurationMinutes_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActualDurationMinutes_GetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActualDurationMinutes_SetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActualDurationMinutes_OnValueChanged);
                private static void _ActualDurationMinutes_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._ActualDurationMinutes, sf);
                }
                private static bool _ActualDurationMinutes_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.ActualDurationMinutes_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActualDurationMinutes_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActualDurationMinutes_Validate(r);
                }
                private static global::System.Nullable<int> _ActualDurationMinutes_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.ActualDurationMinutes;
                }
                private static void _ActualDurationMinutes_SetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ActualDurationMinutes = v;
                }
                private static void _ActualDurationMinutes_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.ActualDurationMinutes_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "CreatedBy",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._CreatedBy_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._CreatedBy_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._CreatedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._CreatedBy_OnValueChanged);
                private static void _CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedBy, sf);
                }
                private static bool _CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedBy_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedBy_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _CreatedBy_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedBy;
                }
                private static void _CreatedBy_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<decimal>>.Entry
                    ActualRevenue = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "ActualRevenue",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActualRevenue_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActualRevenue_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActualRevenue_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActualRevenue_GetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActualRevenue_SetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActualRevenue_OnValueChanged);
                private static void _ActualRevenue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._ActualRevenue, sf);
                }
                private static bool _ActualRevenue_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.ActualRevenue_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActualRevenue_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActualRevenue_Validate(r);
                }
                private static global::System.Nullable<decimal> _ActualRevenue_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.ActualRevenue;
                }
                private static void _ActualRevenue_SetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.ActualRevenue = v;
                }
                private static void _ActualRevenue_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.ActualRevenue_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ScheduledStart = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ScheduledStart",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ScheduledStart_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ScheduledStart_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ScheduledStart_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ScheduledStart_GetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ScheduledStart_SetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ScheduledStart_OnValueChanged);
                private static void _ScheduledStart_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._ScheduledStart, sf);
                }
                private static bool _ScheduledStart_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.ScheduledStart_IsReadOnly(ref result);
                    return result;
                }
                private static void _ScheduledStart_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ScheduledStart_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ScheduledStart_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.ScheduledStart;
                }
                private static void _ScheduledStart_SetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.ScheduledStart = global::LightSwitchApplication.OpportunityClose.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _ScheduledStart_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.ScheduledStart_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<bool>>.Entry
                    IsWorkflowCreated = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "IsWorkflowCreated",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._IsWorkflowCreated_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._IsWorkflowCreated_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._IsWorkflowCreated_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._IsWorkflowCreated_GetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._IsWorkflowCreated_SetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._IsWorkflowCreated_OnValueChanged);
                private static void _IsWorkflowCreated_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._IsWorkflowCreated, sf);
                }
                private static bool _IsWorkflowCreated_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.IsWorkflowCreated_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsWorkflowCreated_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsWorkflowCreated_Validate(r);
                }
                private static global::System.Nullable<bool> _IsWorkflowCreated_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.IsWorkflowCreated;
                }
                private static void _IsWorkflowCreated_SetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.IsWorkflowCreated = v;
                }
                private static void _IsWorkflowCreated_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.IsWorkflowCreated_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>>.Entry
                    StateCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>>.Entry(
                        "StateCode",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._StateCode_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._StateCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._StateCode_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._StateCode_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._StateCode_OnValueChanged);
                private static void _StateCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._StateCode, sf);
                }
                private static bool _StateCode_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.StateCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _StateCode_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.StateCode_Validate(r);
                }
                private static global::System.Nullable<int> _StateCode_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.StateCode;
                }
                private static void _StateCode_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.StateCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>>.Entry
                    StatusCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>>.Entry(
                        "StatusCode",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._StatusCode_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._StatusCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._StatusCode_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._StatusCode_GetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._StatusCode_SetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._StatusCode_OnValueChanged);
                private static void _StatusCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._StatusCode, sf);
                }
                private static bool _StatusCode_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.StatusCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _StatusCode_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.StatusCode_Validate(r);
                }
                private static global::System.Nullable<int> _StatusCode_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.StatusCode;
                }
                private static void _StatusCode_SetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.StatusCode = v;
                }
                private static void _StatusCode_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.StatusCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    ServiceId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "ServiceId",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ServiceId_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ServiceId_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ServiceId_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ServiceId_GetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ServiceId_SetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ServiceId_OnValueChanged);
                private static void _ServiceId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._ServiceId, sf);
                }
                private static bool _ServiceId_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.ServiceId_IsReadOnly(ref result);
                    return result;
                }
                private static void _ServiceId_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ServiceId_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _ServiceId_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.ServiceId;
                }
                private static void _ServiceId_SetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d, global::System.Nullable<global::System.Guid> v)
                {
                    d.ImplementationEntity.ServiceId = v;
                }
                private static void _ServiceId_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.ServiceId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<bool>>.Entry
                    IsBilled = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "IsBilled",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._IsBilled_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._IsBilled_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._IsBilled_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._IsBilled_GetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._IsBilled_SetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._IsBilled_OnValueChanged);
                private static void _IsBilled_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._IsBilled, sf);
                }
                private static bool _IsBilled_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.IsBilled_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsBilled_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsBilled_Validate(r);
                }
                private static global::System.Nullable<bool> _IsBilled_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.IsBilled;
                }
                private static void _IsBilled_SetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.IsBilled = v;
                }
                private static void _IsBilled_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.IsBilled_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    OwningBusinessUnit = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "OwningBusinessUnit",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._OwningBusinessUnit_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._OwningBusinessUnit_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._OwningBusinessUnit_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._OwningBusinessUnit_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._OwningBusinessUnit_OnValueChanged);
                private static void _OwningBusinessUnit_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._OwningBusinessUnit, sf);
                }
                private static bool _OwningBusinessUnit_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.OwningBusinessUnit_IsReadOnly(ref result);
                    return result;
                }
                private static void _OwningBusinessUnit_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OwningBusinessUnit_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _OwningBusinessUnit_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.OwningBusinessUnit;
                }
                private static void _OwningBusinessUnit_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.OwningBusinessUnit_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, string>.Entry
                    Description = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, string>.Entry(
                        "Description",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._Description_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._Description_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._Description_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._Description_GetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._Description_SetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._Description_OnValueChanged);
                private static void _Description_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, string>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._Description, sf);
                }
                private static bool _Description_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.Description_IsReadOnly(ref result);
                    return result;
                }
                private static void _Description_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Description_Validate(r);
                }
                private static string _Description_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.Description;
                }
                private static void _Description_SetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Description = v;
                }
                private static void _Description_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.Description_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ActualEnd = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ActualEnd",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActualEnd_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActualEnd_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActualEnd_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActualEnd_GetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActualEnd_SetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActualEnd_OnValueChanged);
                private static void _ActualEnd_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._ActualEnd, sf);
                }
                private static bool _ActualEnd_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.ActualEnd_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActualEnd_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActualEnd_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ActualEnd_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.ActualEnd;
                }
                private static void _ActualEnd_SetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.ActualEnd = global::LightSwitchApplication.OpportunityClose.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _ActualEnd_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.ActualEnd_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ScheduledEnd = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ScheduledEnd",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ScheduledEnd_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ScheduledEnd_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ScheduledEnd_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ScheduledEnd_GetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ScheduledEnd_SetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ScheduledEnd_OnValueChanged);
                private static void _ScheduledEnd_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._ScheduledEnd, sf);
                }
                private static bool _ScheduledEnd_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.ScheduledEnd_IsReadOnly(ref result);
                    return result;
                }
                private static void _ScheduledEnd_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ScheduledEnd_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ScheduledEnd_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.ScheduledEnd;
                }
                private static void _ScheduledEnd_SetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.ScheduledEnd = global::LightSwitchApplication.OpportunityClose.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _ScheduledEnd_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.ScheduledEnd_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, string>.Entry
                    Category = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, string>.Entry(
                        "Category",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._Category_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._Category_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._Category_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._Category_GetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._Category_SetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._Category_OnValueChanged);
                private static void _Category_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, string>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._Category, sf);
                }
                private static bool _Category_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.Category_IsReadOnly(ref result);
                    return result;
                }
                private static void _Category_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Category_Validate(r);
                }
                private static string _Category_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.Category;
                }
                private static void _Category_SetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Category = v;
                }
                private static void _Category_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.Category_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>>.Entry
                    ScheduledDurationMinutes = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ScheduledDurationMinutes",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ScheduledDurationMinutes_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ScheduledDurationMinutes_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ScheduledDurationMinutes_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ScheduledDurationMinutes_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ScheduledDurationMinutes_OnValueChanged);
                private static void _ScheduledDurationMinutes_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._ScheduledDurationMinutes, sf);
                }
                private static bool _ScheduledDurationMinutes_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.ScheduledDurationMinutes_IsReadOnly(ref result);
                    return result;
                }
                private static void _ScheduledDurationMinutes_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ScheduledDurationMinutes_Validate(r);
                }
                private static global::System.Nullable<int> _ScheduledDurationMinutes_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.ScheduledDurationMinutes;
                }
                private static void _ScheduledDurationMinutes_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.ScheduledDurationMinutes_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    OwnerId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "OwnerId",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._OwnerId_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._OwnerId_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._OwnerId_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._OwnerId_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._OwnerId_OnValueChanged);
                private static void _OwnerId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._OwnerId, sf);
                }
                private static bool _OwnerId_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.OwnerId_IsReadOnly(ref result);
                    return result;
                }
                private static void _OwnerId_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OwnerId_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _OwnerId_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.OwnerId;
                }
                private static void _OwnerId_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.OwnerId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, string>.Entry
                    Subcategory = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, string>.Entry(
                        "Subcategory",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._Subcategory_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._Subcategory_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._Subcategory_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._Subcategory_GetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._Subcategory_SetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._Subcategory_OnValueChanged);
                private static void _Subcategory_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, string>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._Subcategory, sf);
                }
                private static bool _Subcategory_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.Subcategory_IsReadOnly(ref result);
                    return result;
                }
                private static void _Subcategory_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Subcategory_Validate(r);
                }
                private static string _Subcategory_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.Subcategory;
                }
                private static void _Subcategory_SetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Subcategory = v;
                }
                private static void _Subcategory_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.Subcategory_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<long>>.Entry
                    VersionNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<long>>.Entry(
                        "VersionNumber",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._VersionNumber_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._VersionNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._VersionNumber_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._VersionNumber_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._VersionNumber_OnValueChanged);
                private static void _VersionNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<long>>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._VersionNumber, sf);
                }
                private static bool _VersionNumber_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.VersionNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _VersionNumber_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.VersionNumber_Validate(r);
                }
                private static global::System.Nullable<long> _VersionNumber_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.VersionNumber;
                }
                private static void _VersionNumber_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.VersionNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ModifiedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ModifiedOn",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ModifiedOn_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ModifiedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ModifiedOn_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ModifiedOn_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ModifiedOn_OnValueChanged);
                private static void _ModifiedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedOn, sf);
                }
                private static bool _ModifiedOn_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.ModifiedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedOn_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedOn_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ModifiedOn_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedOn;
                }
                private static void _ModifiedOn_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.ModifiedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    OwningUser = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "OwningUser",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._OwningUser_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._OwningUser_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._OwningUser_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._OwningUser_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._OwningUser_OnValueChanged);
                private static void _OwningUser_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._OwningUser, sf);
                }
                private static bool _OwningUser_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.OwningUser_IsReadOnly(ref result);
                    return result;
                }
                private static void _OwningUser_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OwningUser_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _OwningUser_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.OwningUser;
                }
                private static void _OwningUser_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.OwningUser_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    TransactionCurrencyId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "TransactionCurrencyId",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._TransactionCurrencyId_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._TransactionCurrencyId_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._TransactionCurrencyId_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._TransactionCurrencyId_GetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._TransactionCurrencyId_SetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._TransactionCurrencyId_OnValueChanged);
                private static void _TransactionCurrencyId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._TransactionCurrencyId, sf);
                }
                private static bool _TransactionCurrencyId_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.TransactionCurrencyId_IsReadOnly(ref result);
                    return result;
                }
                private static void _TransactionCurrencyId_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TransactionCurrencyId_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _TransactionCurrencyId_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.TransactionCurrencyId;
                }
                private static void _TransactionCurrencyId_SetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d, global::System.Nullable<global::System.Guid> v)
                {
                    d.ImplementationEntity.TransactionCurrencyId = v;
                }
                private static void _TransactionCurrencyId_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.TransactionCurrencyId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>>.Entry
                    UTCConversionTimeZoneCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>>.Entry(
                        "UTCConversionTimeZoneCode",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._UTCConversionTimeZoneCode_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._UTCConversionTimeZoneCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._UTCConversionTimeZoneCode_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._UTCConversionTimeZoneCode_GetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._UTCConversionTimeZoneCode_SetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._UTCConversionTimeZoneCode_OnValueChanged);
                private static void _UTCConversionTimeZoneCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._UTCConversionTimeZoneCode, sf);
                }
                private static bool _UTCConversionTimeZoneCode_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.UTCConversionTimeZoneCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _UTCConversionTimeZoneCode_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.UTCConversionTimeZoneCode_Validate(r);
                }
                private static global::System.Nullable<int> _UTCConversionTimeZoneCode_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.UTCConversionTimeZoneCode;
                }
                private static void _UTCConversionTimeZoneCode_SetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.UTCConversionTimeZoneCode = v;
                }
                private static void _UTCConversionTimeZoneCode_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.UTCConversionTimeZoneCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>>.Entry
                    ImportSequenceNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ImportSequenceNumber",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ImportSequenceNumber_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ImportSequenceNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ImportSequenceNumber_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ImportSequenceNumber_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ImportSequenceNumber_OnValueChanged);
                private static void _ImportSequenceNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._ImportSequenceNumber, sf);
                }
                private static bool _ImportSequenceNumber_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.ImportSequenceNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _ImportSequenceNumber_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ImportSequenceNumber_Validate(r);
                }
                private static global::System.Nullable<int> _ImportSequenceNumber_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.ImportSequenceNumber;
                }
                private static void _ImportSequenceNumber_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.ImportSequenceNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>>.Entry
                    TimeZoneRuleVersionNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>>.Entry(
                        "TimeZoneRuleVersionNumber",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._TimeZoneRuleVersionNumber_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._TimeZoneRuleVersionNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._TimeZoneRuleVersionNumber_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._TimeZoneRuleVersionNumber_GetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._TimeZoneRuleVersionNumber_SetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._TimeZoneRuleVersionNumber_OnValueChanged);
                private static void _TimeZoneRuleVersionNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._TimeZoneRuleVersionNumber, sf);
                }
                private static bool _TimeZoneRuleVersionNumber_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.TimeZoneRuleVersionNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _TimeZoneRuleVersionNumber_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TimeZoneRuleVersionNumber_Validate(r);
                }
                private static global::System.Nullable<int> _TimeZoneRuleVersionNumber_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.TimeZoneRuleVersionNumber;
                }
                private static void _TimeZoneRuleVersionNumber_SetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.TimeZoneRuleVersionNumber = v;
                }
                private static void _TimeZoneRuleVersionNumber_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.TimeZoneRuleVersionNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<decimal>>.Entry
                    ExchangeRate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "ExchangeRate",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ExchangeRate_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ExchangeRate_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ExchangeRate_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ExchangeRate_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ExchangeRate_OnValueChanged);
                private static void _ExchangeRate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._ExchangeRate, sf);
                }
                private static bool _ExchangeRate_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.ExchangeRate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ExchangeRate_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ExchangeRate_Validate(r);
                }
                private static global::System.Nullable<decimal> _ExchangeRate_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.ExchangeRate;
                }
                private static void _ExchangeRate_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.ExchangeRate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    OverriddenCreatedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "OverriddenCreatedOn",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._OverriddenCreatedOn_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._OverriddenCreatedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._OverriddenCreatedOn_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._OverriddenCreatedOn_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._OverriddenCreatedOn_OnValueChanged);
                private static void _OverriddenCreatedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._OverriddenCreatedOn, sf);
                }
                private static bool _OverriddenCreatedOn_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.OverriddenCreatedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _OverriddenCreatedOn_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OverriddenCreatedOn_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _OverriddenCreatedOn_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.OverriddenCreatedOn;
                }
                private static void _OverriddenCreatedOn_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.OverriddenCreatedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<decimal>>.Entry
                    ActualRevenue_Base = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "ActualRevenue_Base",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActualRevenue_Base_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActualRevenue_Base_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActualRevenue_Base_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActualRevenue_Base_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActualRevenue_Base_OnValueChanged);
                private static void _ActualRevenue_Base_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._ActualRevenue_Base, sf);
                }
                private static bool _ActualRevenue_Base_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.ActualRevenue_Base_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActualRevenue_Base_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActualRevenue_Base_Validate(r);
                }
                private static global::System.Nullable<decimal> _ActualRevenue_Base_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.ActualRevenue_Base;
                }
                private static void _ActualRevenue_Base_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.ActualRevenue_Base_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    CreatedOnBehalfBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "CreatedOnBehalfBy",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._CreatedOnBehalfBy_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._CreatedOnBehalfBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._CreatedOnBehalfBy_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._CreatedOnBehalfBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._CreatedOnBehalfBy_OnValueChanged);
                private static void _CreatedOnBehalfBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedOnBehalfBy, sf);
                }
                private static bool _CreatedOnBehalfBy_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.CreatedOnBehalfBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedOnBehalfBy_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedOnBehalfBy_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _CreatedOnBehalfBy_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedOnBehalfBy;
                }
                private static void _CreatedOnBehalfBy_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.CreatedOnBehalfBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    ModifiedOnBehalfBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "ModifiedOnBehalfBy",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ModifiedOnBehalfBy_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ModifiedOnBehalfBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ModifiedOnBehalfBy_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ModifiedOnBehalfBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ModifiedOnBehalfBy_OnValueChanged);
                private static void _ModifiedOnBehalfBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedOnBehalfBy, sf);
                }
                private static bool _ModifiedOnBehalfBy_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.ModifiedOnBehalfBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedOnBehalfBy_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedOnBehalfBy_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _ModifiedOnBehalfBy_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedOnBehalfBy;
                }
                private static void _ModifiedOnBehalfBy_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.ModifiedOnBehalfBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, string>.Entry
                    ActivityTypeCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, string>.Entry(
                        "ActivityTypeCode",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActivityTypeCode_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActivityTypeCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActivityTypeCode_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActivityTypeCode_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._ActivityTypeCode_OnValueChanged);
                private static void _ActivityTypeCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, string>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._ActivityTypeCode, sf);
                }
                private static bool _ActivityTypeCode_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.ActivityTypeCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActivityTypeCode_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActivityTypeCode_Validate(r);
                }
                private static string _ActivityTypeCode_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.ActivityTypeCode;
                }
                private static void _ActivityTypeCode_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.ActivityTypeCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<bool>>.Entry
                    IsRegularActivity = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "IsRegularActivity",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._IsRegularActivity_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._IsRegularActivity_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._IsRegularActivity_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._IsRegularActivity_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._IsRegularActivity_OnValueChanged);
                private static void _IsRegularActivity_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._IsRegularActivity, sf);
                }
                private static bool _IsRegularActivity_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.IsRegularActivity_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsRegularActivity_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsRegularActivity_Validate(r);
                }
                private static global::System.Nullable<bool> _IsRegularActivity_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.IsRegularActivity;
                }
                private static void _IsRegularActivity_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.IsRegularActivity_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::LightSwitchApplication.Team>.Entry
                    team_opportunityclose = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::LightSwitchApplication.Team>.Entry(
                        "team_opportunityclose",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._team_opportunityclose_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._team_opportunityclose_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._team_opportunityclose_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._team_opportunityclose_GetCoreImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._team_opportunityclose_GetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._team_opportunityclose_SetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._team_opportunityclose_Refresh,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._team_opportunityclose_OnValueChanged);
                private static void _team_opportunityclose_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::LightSwitchApplication.Team>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._team_opportunityclose, sf);
                }
                private static bool _team_opportunityclose_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.team_opportunityclose_IsReadOnly(ref result);
                    return result;
                }
                private static void _team_opportunityclose_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.team_opportunityclose_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _team_opportunityclose_GetCoreImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.team_opportunityclose;
                }
                private static global::LightSwitchApplication.Team _team_opportunityclose_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass>(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.team_opportunityclose, ref d._team_opportunityclose);
                }
                private static void _team_opportunityclose_SetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d, global::LightSwitchApplication.Team v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.team_opportunityclose, ref d._team_opportunityclose, (i, ev) => i.team_opportunityclose = ev, v);
                }
                private static void _team_opportunityclose_Refresh(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.team_opportunityclose, ref d._team_opportunityclose);
                }
                private static void _team_opportunityclose_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.team_opportunityclose_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::LightSwitchApplication.Opportunity>.Entry
                    Opportunity_OpportunityClose = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::LightSwitchApplication.Opportunity>.Entry(
                        "Opportunity_OpportunityClose",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._Opportunity_OpportunityClose_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._Opportunity_OpportunityClose_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._Opportunity_OpportunityClose_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._Opportunity_OpportunityClose_GetCoreImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._Opportunity_OpportunityClose_GetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._Opportunity_OpportunityClose_SetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._Opportunity_OpportunityClose_Refresh,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._Opportunity_OpportunityClose_OnValueChanged);
                private static void _Opportunity_OpportunityClose_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::LightSwitchApplication.Opportunity>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._Opportunity_OpportunityClose, sf);
                }
                private static bool _Opportunity_OpportunityClose_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.Opportunity_OpportunityClose_IsReadOnly(ref result);
                    return result;
                }
                private static void _Opportunity_OpportunityClose_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Opportunity_OpportunityClose_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Opportunity_OpportunityClose_GetCoreImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.Opportunity_OpportunityClose;
                }
                private static global::LightSwitchApplication.Opportunity _Opportunity_OpportunityClose_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Opportunity, global::LightSwitchApplication.Opportunity.DetailsClass>(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.Opportunity_OpportunityClose, ref d._Opportunity_OpportunityClose);
                }
                private static void _Opportunity_OpportunityClose_SetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d, global::LightSwitchApplication.Opportunity v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.Opportunity_OpportunityClose, ref d._Opportunity_OpportunityClose, (i, ev) => i.Opportunity_OpportunityClose = ev, v);
                }
                private static void _Opportunity_OpportunityClose_Refresh(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.Opportunity_OpportunityClose, ref d._Opportunity_OpportunityClose);
                }
                private static void _Opportunity_OpportunityClose_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.Opportunity_OpportunityClose_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::LightSwitchApplication.Competitor>.Entry
                    competitor_opportunity_activities = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::LightSwitchApplication.Competitor>.Entry(
                        "competitor_opportunity_activities",
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._competitor_opportunity_activities_Stub,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._competitor_opportunity_activities_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._competitor_opportunity_activities_Validate,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._competitor_opportunity_activities_GetCoreImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._competitor_opportunity_activities_GetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._competitor_opportunity_activities_SetImplementationValue,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._competitor_opportunity_activities_Refresh,
                        global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties._competitor_opportunity_activities_OnValueChanged);
                private static void _competitor_opportunity_activities_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::LightSwitchApplication.Competitor>.Data> c, global::LightSwitchApplication.OpportunityClose.DetailsClass d, object sf)
                {
                    c(d, ref d._competitor_opportunity_activities, sf);
                }
                private static bool _competitor_opportunity_activities_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityClose e)
                {
                    bool result = false;
                    e.competitor_opportunity_activities_IsReadOnly(ref result);
                    return result;
                }
                private static void _competitor_opportunity_activities_Validate(global::LightSwitchApplication.OpportunityClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.competitor_opportunity_activities_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _competitor_opportunity_activities_GetCoreImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.ImplementationEntity.competitor_opportunity_activities;
                }
                private static global::LightSwitchApplication.Competitor _competitor_opportunity_activities_GetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass>(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.competitor_opportunity_activities, ref d._competitor_opportunity_activities);
                }
                private static void _competitor_opportunity_activities_SetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass d, global::LightSwitchApplication.Competitor v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.competitor_opportunity_activities, ref d._competitor_opportunity_activities, (i, ev) => i.competitor_opportunity_activities = ev, v);
                }
                private static void _competitor_opportunity_activities_Refresh(global::LightSwitchApplication.OpportunityClose.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.OpportunityClose.DetailsClass.PropertySetProperties.competitor_opportunity_activities, ref d._competitor_opportunity_activities);
                }
                private static void _competitor_opportunity_activities_OnValueChanged(global::LightSwitchApplication.OpportunityClose e)
                {
                    e.competitor_opportunity_activities_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, string>.Data _Subject;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Guid>.Data _ActivityId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _ModifiedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _CreatedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ActualStart;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>>.Data _ActualDurationMinutes;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<decimal>>.Data _ActualRevenue;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ScheduledStart;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<bool>>.Data _IsWorkflowCreated;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>>.Data _StateCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>>.Data _StatusCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _ServiceId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<bool>>.Data _IsBilled;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _OwningBusinessUnit;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, string>.Data _Description;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ActualEnd;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ScheduledEnd;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, string>.Data _Category;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>>.Data _ScheduledDurationMinutes;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _OwnerId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, string>.Data _Subcategory;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<long>>.Data _VersionNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ModifiedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _OwningUser;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _TransactionCurrencyId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>>.Data _UTCConversionTimeZoneCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>>.Data _ImportSequenceNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<int>>.Data _TimeZoneRuleVersionNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<decimal>>.Data _ExchangeRate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _OverriddenCreatedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<decimal>>.Data _ActualRevenue_Base;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _CreatedOnBehalfBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _ModifiedOnBehalfBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, string>.Data _ActivityTypeCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::System.Nullable<bool>>.Data _IsRegularActivity;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::LightSwitchApplication.Team>.Data _team_opportunityclose;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::LightSwitchApplication.Opportunity>.Data _Opportunity_OpportunityClose;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass, global::LightSwitchApplication.Competitor>.Data _competitor_opportunity_activities;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
    public sealed partial class OpportunityCompetitor : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.OpportunityCompetitor, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the OpportunityCompetitor entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public OpportunityCompetitor()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public OpportunityCompetitor(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.OpportunityCompetitor> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OpportunityCompetitor_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OpportunityCompetitor_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Guid OpportunityCompetitorId
        {
            get
            {
                return global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties.OpportunityCompetitorId);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OpportunityCompetitorId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OpportunityCompetitorId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OpportunityCompetitorId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<long> VersionNumber
        {
            get
            {
                return global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties.VersionNumber);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Opportunity opportunitycompetitors_association_opportunity
        {
            get
            {
                return global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties.opportunitycompetitors_association_opportunity);
            }
            set
            {
                global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.SetValue(this, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties.opportunitycompetitors_association_opportunity, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void opportunitycompetitors_association_opportunity_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void opportunitycompetitors_association_opportunity_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void opportunitycompetitors_association_opportunity_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Competitor opportunitycompetitors_association_competitor
        {
            get
            {
                return global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.GetValue(this, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties.opportunitycompetitors_association_competitor);
            }
            set
            {
                global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.SetValue(this, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties.opportunitycompetitors_association_competitor, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void opportunitycompetitors_association_competitor_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void opportunitycompetitors_association_competitor_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void opportunitycompetitors_association_competitor_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.OpportunityCompetitor,
                global::LightSwitchApplication.OpportunityCompetitor.DetailsClass,
                global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.IImplementation,
                global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.OpportunityCompetitor, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.OpportunityCompetitor, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties.OpportunityCompetitorId;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.OpportunityCompetitor, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass>.Entry
                __OpportunityCompetitorEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.OpportunityCompetitor, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass>.Entry(
                    global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.__OpportunityCompetitor_CreateNew,
                    global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.__OpportunityCompetitor_Created,
                    global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.__OpportunityCompetitor_AllowSaveWithErrors);
            private static global::LightSwitchApplication.OpportunityCompetitor __OpportunityCompetitor_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.OpportunityCompetitor> es)
            {
                return new global::LightSwitchApplication.OpportunityCompetitor(es);
            }
            private static void __OpportunityCompetitor_Created(global::LightSwitchApplication.OpportunityCompetitor e)
            {
                e.OpportunityCompetitor_Created();
            }
            private static bool __OpportunityCompetitor_AllowSaveWithErrors(global::LightSwitchApplication.OpportunityCompetitor e)
            {
                bool result = false;
                e.OpportunityCompetitor_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.OpportunityCompetitor, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.OpportunityCompetitor, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.OpportunityCompetitor, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityCompetitor, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass, global::System.Guid> OpportunityCompetitorId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties.OpportunityCompetitorId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityCompetitor, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass, global::System.Guid>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityCompetitor, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass, global::System.Nullable<long>> VersionNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties.VersionNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityCompetitor, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass, global::System.Nullable<long>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.OpportunityCompetitor, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass, global::LightSwitchApplication.Opportunity> opportunitycompetitors_association_opportunity
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties.opportunitycompetitors_association_opportunity) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.OpportunityCompetitor, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass, global::LightSwitchApplication.Opportunity>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.OpportunityCompetitor, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass, global::LightSwitchApplication.Competitor> opportunitycompetitors_association_competitor
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties.opportunitycompetitors_association_competitor) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.OpportunityCompetitor, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass, global::LightSwitchApplication.Competitor>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new global::System.Guid OpportunityCompetitorId { get; }
                new global::System.Nullable<long> VersionNumber { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation opportunitycompetitors_association_opportunity { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation opportunitycompetitors_association_competitor { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityCompetitor, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass, global::System.Guid>.Entry
                    OpportunityCompetitorId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityCompetitor, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass, global::System.Guid>.Entry(
                        "OpportunityCompetitorId",
                        global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties._OpportunityCompetitorId_Stub,
                        global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties._OpportunityCompetitorId_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties._OpportunityCompetitorId_Validate,
                        global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties._OpportunityCompetitorId_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties._OpportunityCompetitorId_OnValueChanged);
                private static void _OpportunityCompetitorId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityCompetitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityCompetitor, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass, global::System.Guid>.Data> c, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass d, object sf)
                {
                    c(d, ref d._OpportunityCompetitorId, sf);
                }
                private static bool _OpportunityCompetitorId_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityCompetitor e)
                {
                    bool result = false;
                    e.OpportunityCompetitorId_IsReadOnly(ref result);
                    return result;
                }
                private static void _OpportunityCompetitorId_Validate(global::LightSwitchApplication.OpportunityCompetitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OpportunityCompetitorId_Validate(r);
                }
                private static global::System.Guid _OpportunityCompetitorId_GetImplementationValue(global::LightSwitchApplication.OpportunityCompetitor.DetailsClass d)
                {
                    return d.ImplementationEntity.OpportunityCompetitorId;
                }
                private static void _OpportunityCompetitorId_OnValueChanged(global::LightSwitchApplication.OpportunityCompetitor e)
                {
                    e.OpportunityCompetitorId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityCompetitor, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass, global::System.Nullable<long>>.Entry
                    VersionNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityCompetitor, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass, global::System.Nullable<long>>.Entry(
                        "VersionNumber",
                        global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties._VersionNumber_Stub,
                        global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties._VersionNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties._VersionNumber_Validate,
                        global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties._VersionNumber_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties._VersionNumber_OnValueChanged);
                private static void _VersionNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityCompetitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityCompetitor, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass, global::System.Nullable<long>>.Data> c, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass d, object sf)
                {
                    c(d, ref d._VersionNumber, sf);
                }
                private static bool _VersionNumber_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityCompetitor e)
                {
                    bool result = false;
                    e.VersionNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _VersionNumber_Validate(global::LightSwitchApplication.OpportunityCompetitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.VersionNumber_Validate(r);
                }
                private static global::System.Nullable<long> _VersionNumber_GetImplementationValue(global::LightSwitchApplication.OpportunityCompetitor.DetailsClass d)
                {
                    return d.ImplementationEntity.VersionNumber;
                }
                private static void _VersionNumber_OnValueChanged(global::LightSwitchApplication.OpportunityCompetitor e)
                {
                    e.VersionNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.OpportunityCompetitor, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass, global::LightSwitchApplication.Opportunity>.Entry
                    opportunitycompetitors_association_opportunity = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.OpportunityCompetitor, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass, global::LightSwitchApplication.Opportunity>.Entry(
                        "opportunitycompetitors_association_opportunity",
                        global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties._opportunitycompetitors_association_opportunity_Stub,
                        global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties._opportunitycompetitors_association_opportunity_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties._opportunitycompetitors_association_opportunity_Validate,
                        global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties._opportunitycompetitors_association_opportunity_GetCoreImplementationValue,
                        global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties._opportunitycompetitors_association_opportunity_GetImplementationValue,
                        global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties._opportunitycompetitors_association_opportunity_SetImplementationValue,
                        global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties._opportunitycompetitors_association_opportunity_Refresh,
                        global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties._opportunitycompetitors_association_opportunity_OnValueChanged);
                private static void _opportunitycompetitors_association_opportunity_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityCompetitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.OpportunityCompetitor, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass, global::LightSwitchApplication.Opportunity>.Data> c, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass d, object sf)
                {
                    c(d, ref d._opportunitycompetitors_association_opportunity, sf);
                }
                private static bool _opportunitycompetitors_association_opportunity_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityCompetitor e)
                {
                    bool result = false;
                    e.opportunitycompetitors_association_opportunity_IsReadOnly(ref result);
                    return result;
                }
                private static void _opportunitycompetitors_association_opportunity_Validate(global::LightSwitchApplication.OpportunityCompetitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.opportunitycompetitors_association_opportunity_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _opportunitycompetitors_association_opportunity_GetCoreImplementationValue(global::LightSwitchApplication.OpportunityCompetitor.DetailsClass d)
                {
                    return d.ImplementationEntity.opportunitycompetitors_association_opportunity;
                }
                private static global::LightSwitchApplication.Opportunity _opportunitycompetitors_association_opportunity_GetImplementationValue(global::LightSwitchApplication.OpportunityCompetitor.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Opportunity, global::LightSwitchApplication.Opportunity.DetailsClass>(global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties.opportunitycompetitors_association_opportunity, ref d._opportunitycompetitors_association_opportunity);
                }
                private static void _opportunitycompetitors_association_opportunity_SetImplementationValue(global::LightSwitchApplication.OpportunityCompetitor.DetailsClass d, global::LightSwitchApplication.Opportunity v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties.opportunitycompetitors_association_opportunity, ref d._opportunitycompetitors_association_opportunity, (i, ev) => i.opportunitycompetitors_association_opportunity = ev, v);
                }
                private static void _opportunitycompetitors_association_opportunity_Refresh(global::LightSwitchApplication.OpportunityCompetitor.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties.opportunitycompetitors_association_opportunity, ref d._opportunitycompetitors_association_opportunity);
                }
                private static void _opportunitycompetitors_association_opportunity_OnValueChanged(global::LightSwitchApplication.OpportunityCompetitor e)
                {
                    e.opportunitycompetitors_association_opportunity_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.OpportunityCompetitor, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass, global::LightSwitchApplication.Competitor>.Entry
                    opportunitycompetitors_association_competitor = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.OpportunityCompetitor, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass, global::LightSwitchApplication.Competitor>.Entry(
                        "opportunitycompetitors_association_competitor",
                        global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties._opportunitycompetitors_association_competitor_Stub,
                        global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties._opportunitycompetitors_association_competitor_ComputeIsReadOnly,
                        global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties._opportunitycompetitors_association_competitor_Validate,
                        global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties._opportunitycompetitors_association_competitor_GetCoreImplementationValue,
                        global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties._opportunitycompetitors_association_competitor_GetImplementationValue,
                        global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties._opportunitycompetitors_association_competitor_SetImplementationValue,
                        global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties._opportunitycompetitors_association_competitor_Refresh,
                        global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties._opportunitycompetitors_association_competitor_OnValueChanged);
                private static void _opportunitycompetitors_association_competitor_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpportunityCompetitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.OpportunityCompetitor, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass, global::LightSwitchApplication.Competitor>.Data> c, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass d, object sf)
                {
                    c(d, ref d._opportunitycompetitors_association_competitor, sf);
                }
                private static bool _opportunitycompetitors_association_competitor_ComputeIsReadOnly(global::LightSwitchApplication.OpportunityCompetitor e)
                {
                    bool result = false;
                    e.opportunitycompetitors_association_competitor_IsReadOnly(ref result);
                    return result;
                }
                private static void _opportunitycompetitors_association_competitor_Validate(global::LightSwitchApplication.OpportunityCompetitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.opportunitycompetitors_association_competitor_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _opportunitycompetitors_association_competitor_GetCoreImplementationValue(global::LightSwitchApplication.OpportunityCompetitor.DetailsClass d)
                {
                    return d.ImplementationEntity.opportunitycompetitors_association_competitor;
                }
                private static global::LightSwitchApplication.Competitor _opportunitycompetitors_association_competitor_GetImplementationValue(global::LightSwitchApplication.OpportunityCompetitor.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass>(global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties.opportunitycompetitors_association_competitor, ref d._opportunitycompetitors_association_competitor);
                }
                private static void _opportunitycompetitors_association_competitor_SetImplementationValue(global::LightSwitchApplication.OpportunityCompetitor.DetailsClass d, global::LightSwitchApplication.Competitor v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties.opportunitycompetitors_association_competitor, ref d._opportunitycompetitors_association_competitor, (i, ev) => i.opportunitycompetitors_association_competitor = ev, v);
                }
                private static void _opportunitycompetitors_association_competitor_Refresh(global::LightSwitchApplication.OpportunityCompetitor.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.OpportunityCompetitor.DetailsClass.PropertySetProperties.opportunitycompetitors_association_competitor, ref d._opportunitycompetitors_association_competitor);
                }
                private static void _opportunitycompetitors_association_competitor_OnValueChanged(global::LightSwitchApplication.OpportunityCompetitor e)
                {
                    e.opportunitycompetitors_association_competitor_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityCompetitor, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass, global::System.Guid>.Data _OpportunityCompetitorId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.OpportunityCompetitor, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass, global::System.Nullable<long>>.Data _VersionNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.OpportunityCompetitor, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass, global::LightSwitchApplication.Opportunity>.Data _opportunitycompetitors_association_opportunity;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.OpportunityCompetitor, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass, global::LightSwitchApplication.Competitor>.Data _opportunitycompetitors_association_competitor;
            
        }
    
        #endregion
    }
    
    #endregion
}
