

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
    public sealed partial class Solution : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Solution entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Solution()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Solution(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Solution> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Solution.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Solution_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Solution_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FriendlyName
        {
            get
            {
                return global::LightSwitchApplication.Solution.DetailsClass.GetValue(this, global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.FriendlyName);
            }
            set
            {
                global::LightSwitchApplication.Solution.DetailsClass.SetValue(this, global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.FriendlyName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FriendlyName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FriendlyName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FriendlyName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Guid SolutionId
        {
            get
            {
                return global::LightSwitchApplication.Solution.DetailsClass.GetValue(this, global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.SolutionId);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SolutionId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SolutionId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SolutionId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<long> VersionNumber
        {
            get
            {
                return global::LightSwitchApplication.Solution.DetailsClass.GetValue(this, global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.VersionNumber);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> InstalledOn
        {
            get
            {
                return global::LightSwitchApplication.Solution.DetailsClass.GetValue(this, global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.InstalledOn);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InstalledOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InstalledOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InstalledOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return global::LightSwitchApplication.Solution.DetailsClass.GetValue(this, global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.CreatedOn);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> OrganizationId
        {
            get
            {
                return global::LightSwitchApplication.Solution.DetailsClass.GetValue(this, global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.OrganizationId);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrganizationId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrganizationId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrganizationId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> PublisherId
        {
            get
            {
                return global::LightSwitchApplication.Solution.DetailsClass.GetValue(this, global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.PublisherId);
            }
            set
            {
                global::LightSwitchApplication.Solution.DetailsClass.SetValue(this, global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.PublisherId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PublisherId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PublisherId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PublisherId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return global::LightSwitchApplication.Solution.DetailsClass.GetValue(this, global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.ModifiedOn);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.Solution.DetailsClass.GetValue(this, global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.CreatedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> IsVisible
        {
            get
            {
                return global::LightSwitchApplication.Solution.DetailsClass.GetValue(this, global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.IsVisible);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsVisible_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsVisible_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsVisible_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Description
        {
            get
            {
                return global::LightSwitchApplication.Solution.DetailsClass.GetValue(this, global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.Description);
            }
            set
            {
                global::LightSwitchApplication.Solution.DetailsClass.SetValue(this, global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.Description, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> IsManaged
        {
            get
            {
                return global::LightSwitchApplication.Solution.DetailsClass.GetValue(this, global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.IsManaged);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsManaged_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsManaged_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsManaged_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string UniqueName
        {
            get
            {
                return global::LightSwitchApplication.Solution.DetailsClass.GetValue(this, global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.UniqueName);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UniqueName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UniqueName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UniqueName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return global::LightSwitchApplication.Solution.DetailsClass.GetValue(this, global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.ModifiedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Version
        {
            get
            {
                return global::LightSwitchApplication.Solution.DetailsClass.GetValue(this, global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.Version);
            }
            set
            {
                global::LightSwitchApplication.Solution.DetailsClass.SetValue(this, global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.Version, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Version_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Version_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Version_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> ModifiedOnBehalfBy
        {
            get
            {
                return global::LightSwitchApplication.Solution.DetailsClass.GetValue(this, global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.ModifiedOnBehalfBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedOnBehalfBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedOnBehalfBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedOnBehalfBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> CreatedOnBehalfBy
        {
            get
            {
                return global::LightSwitchApplication.Solution.DetailsClass.GetValue(this, global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.CreatedOnBehalfBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOnBehalfBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOnBehalfBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOnBehalfBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<long> PinpointSolutionId
        {
            get
            {
                return global::LightSwitchApplication.Solution.DetailsClass.GetValue(this, global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.PinpointSolutionId);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PinpointSolutionId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PinpointSolutionId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PinpointSolutionId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PinpointSolutionDefaultLocale
        {
            get
            {
                return global::LightSwitchApplication.Solution.DetailsClass.GetValue(this, global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.PinpointSolutionDefaultLocale);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PinpointSolutionDefaultLocale_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PinpointSolutionDefaultLocale_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PinpointSolutionDefaultLocale_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<long> PinpointPublisherId
        {
            get
            {
                return global::LightSwitchApplication.Solution.DetailsClass.GetValue(this, global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.PinpointPublisherId);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PinpointPublisherId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PinpointPublisherId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PinpointPublisherId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> ConfigurationPageId
        {
            get
            {
                return global::LightSwitchApplication.Solution.DetailsClass.GetValue(this, global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.ConfigurationPageId);
            }
            set
            {
                global::LightSwitchApplication.Solution.DetailsClass.SetValue(this, global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.ConfigurationPageId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConfigurationPageId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConfigurationPageId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConfigurationPageId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PinpointAssetId
        {
            get
            {
                return global::LightSwitchApplication.Solution.DetailsClass.GetValue(this, global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.PinpointAssetId);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PinpointAssetId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PinpointAssetId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PinpointAssetId_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Solution,
                global::LightSwitchApplication.Solution.DetailsClass,
                global::LightSwitchApplication.Solution.DetailsClass.IImplementation,
                global::LightSwitchApplication.Solution.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.FriendlyName;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass>.Entry
                __SolutionEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass>.Entry(
                    global::LightSwitchApplication.Solution.DetailsClass.__Solution_CreateNew,
                    global::LightSwitchApplication.Solution.DetailsClass.__Solution_Created,
                    global::LightSwitchApplication.Solution.DetailsClass.__Solution_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Solution __Solution_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Solution> es)
            {
                return new global::LightSwitchApplication.Solution(es);
            }
            private static void __Solution_Created(global::LightSwitchApplication.Solution e)
            {
                e.Solution_Created();
            }
            private static bool __Solution_AllowSaveWithErrors(global::LightSwitchApplication.Solution e)
            {
                bool result = false;
                e.Solution_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Solution.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, string> FriendlyName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.FriendlyName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Guid> SolutionId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.SolutionId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Guid>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<long>> VersionNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.VersionNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<long>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.DateTime>> InstalledOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.InstalledOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.DateTime>> CreatedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.CreatedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>> OrganizationId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.OrganizationId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>> PublisherId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.PublisherId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.DateTime>> ModifiedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.ModifiedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>> CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<bool>> IsVisible
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.IsVisible) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, string> Description
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.Description) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<bool>> IsManaged
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.IsManaged) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, string> UniqueName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.UniqueName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>> ModifiedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.ModifiedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, string> Version
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.Version) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>> ModifiedOnBehalfBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.ModifiedOnBehalfBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>> CreatedOnBehalfBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.CreatedOnBehalfBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<long>> PinpointSolutionId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.PinpointSolutionId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<long>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, string> PinpointSolutionDefaultLocale
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.PinpointSolutionDefaultLocale) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<long>> PinpointPublisherId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.PinpointPublisherId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<long>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>> ConfigurationPageId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.ConfigurationPageId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, string> PinpointAssetId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties.PinpointAssetId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, string>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new string FriendlyName { get; set; }
                new global::System.Guid SolutionId { get; }
                new global::System.Nullable<long> VersionNumber { get; }
                new global::System.Nullable<global::System.DateTime> InstalledOn { get; }
                new global::System.Nullable<global::System.DateTime> CreatedOn { get; }
                new global::System.Nullable<global::System.Guid> OrganizationId { get; }
                new global::System.Nullable<global::System.Guid> PublisherId { get; set; }
                new global::System.Nullable<global::System.DateTime> ModifiedOn { get; }
                new global::System.Nullable<global::System.Guid> CreatedBy { get; }
                new global::System.Nullable<bool> IsVisible { get; }
                new string Description { get; set; }
                new global::System.Nullable<bool> IsManaged { get; }
                new string UniqueName { get; }
                new global::System.Nullable<global::System.Guid> ModifiedBy { get; }
                new string Version { get; set; }
                new global::System.Nullable<global::System.Guid> ModifiedOnBehalfBy { get; }
                new global::System.Nullable<global::System.Guid> CreatedOnBehalfBy { get; }
                new global::System.Nullable<long> PinpointSolutionId { get; }
                new string PinpointSolutionDefaultLocale { get; }
                new global::System.Nullable<long> PinpointPublisherId { get; }
                new global::System.Nullable<global::System.Guid> ConfigurationPageId { get; set; }
                new string PinpointAssetId { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, string>.Entry
                    FriendlyName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, string>.Entry(
                        "FriendlyName",
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._FriendlyName_Stub,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._FriendlyName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._FriendlyName_Validate,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._FriendlyName_GetImplementationValue,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._FriendlyName_SetImplementationValue,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._FriendlyName_OnValueChanged);
                private static void _FriendlyName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Solution.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, string>.Data> c, global::LightSwitchApplication.Solution.DetailsClass d, object sf)
                {
                    c(d, ref d._FriendlyName, sf);
                }
                private static bool _FriendlyName_ComputeIsReadOnly(global::LightSwitchApplication.Solution e)
                {
                    bool result = false;
                    e.FriendlyName_IsReadOnly(ref result);
                    return result;
                }
                private static void _FriendlyName_Validate(global::LightSwitchApplication.Solution e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.FriendlyName_Validate(r);
                }
                private static string _FriendlyName_GetImplementationValue(global::LightSwitchApplication.Solution.DetailsClass d)
                {
                    return d.ImplementationEntity.FriendlyName;
                }
                private static void _FriendlyName_SetImplementationValue(global::LightSwitchApplication.Solution.DetailsClass d, string v)
                {
                    d.ImplementationEntity.FriendlyName = v;
                }
                private static void _FriendlyName_OnValueChanged(global::LightSwitchApplication.Solution e)
                {
                    e.FriendlyName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Guid>.Entry
                    SolutionId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Guid>.Entry(
                        "SolutionId",
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._SolutionId_Stub,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._SolutionId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._SolutionId_Validate,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._SolutionId_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._SolutionId_OnValueChanged);
                private static void _SolutionId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Solution.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Guid>.Data> c, global::LightSwitchApplication.Solution.DetailsClass d, object sf)
                {
                    c(d, ref d._SolutionId, sf);
                }
                private static bool _SolutionId_ComputeIsReadOnly(global::LightSwitchApplication.Solution e)
                {
                    bool result = false;
                    e.SolutionId_IsReadOnly(ref result);
                    return result;
                }
                private static void _SolutionId_Validate(global::LightSwitchApplication.Solution e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SolutionId_Validate(r);
                }
                private static global::System.Guid _SolutionId_GetImplementationValue(global::LightSwitchApplication.Solution.DetailsClass d)
                {
                    return d.ImplementationEntity.SolutionId;
                }
                private static void _SolutionId_OnValueChanged(global::LightSwitchApplication.Solution e)
                {
                    e.SolutionId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<long>>.Entry
                    VersionNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<long>>.Entry(
                        "VersionNumber",
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._VersionNumber_Stub,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._VersionNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._VersionNumber_Validate,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._VersionNumber_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._VersionNumber_OnValueChanged);
                private static void _VersionNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Solution.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<long>>.Data> c, global::LightSwitchApplication.Solution.DetailsClass d, object sf)
                {
                    c(d, ref d._VersionNumber, sf);
                }
                private static bool _VersionNumber_ComputeIsReadOnly(global::LightSwitchApplication.Solution e)
                {
                    bool result = false;
                    e.VersionNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _VersionNumber_Validate(global::LightSwitchApplication.Solution e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.VersionNumber_Validate(r);
                }
                private static global::System.Nullable<long> _VersionNumber_GetImplementationValue(global::LightSwitchApplication.Solution.DetailsClass d)
                {
                    return d.ImplementationEntity.VersionNumber;
                }
                private static void _VersionNumber_OnValueChanged(global::LightSwitchApplication.Solution e)
                {
                    e.VersionNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    InstalledOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "InstalledOn",
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._InstalledOn_Stub,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._InstalledOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._InstalledOn_Validate,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._InstalledOn_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._InstalledOn_OnValueChanged);
                private static void _InstalledOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Solution.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Solution.DetailsClass d, object sf)
                {
                    c(d, ref d._InstalledOn, sf);
                }
                private static bool _InstalledOn_ComputeIsReadOnly(global::LightSwitchApplication.Solution e)
                {
                    bool result = false;
                    e.InstalledOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _InstalledOn_Validate(global::LightSwitchApplication.Solution e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.InstalledOn_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _InstalledOn_GetImplementationValue(global::LightSwitchApplication.Solution.DetailsClass d)
                {
                    return d.ImplementationEntity.InstalledOn;
                }
                private static void _InstalledOn_OnValueChanged(global::LightSwitchApplication.Solution e)
                {
                    e.InstalledOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    CreatedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "CreatedOn",
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._CreatedOn_Stub,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._CreatedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._CreatedOn_Validate,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._CreatedOn_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._CreatedOn_OnValueChanged);
                private static void _CreatedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Solution.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Solution.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedOn, sf);
                }
                private static bool _CreatedOn_ComputeIsReadOnly(global::LightSwitchApplication.Solution e)
                {
                    bool result = false;
                    e.CreatedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedOn_Validate(global::LightSwitchApplication.Solution e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedOn_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _CreatedOn_GetImplementationValue(global::LightSwitchApplication.Solution.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedOn;
                }
                private static void _CreatedOn_OnValueChanged(global::LightSwitchApplication.Solution e)
                {
                    e.CreatedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    OrganizationId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "OrganizationId",
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._OrganizationId_Stub,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._OrganizationId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._OrganizationId_Validate,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._OrganizationId_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._OrganizationId_OnValueChanged);
                private static void _OrganizationId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Solution.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.Solution.DetailsClass d, object sf)
                {
                    c(d, ref d._OrganizationId, sf);
                }
                private static bool _OrganizationId_ComputeIsReadOnly(global::LightSwitchApplication.Solution e)
                {
                    bool result = false;
                    e.OrganizationId_IsReadOnly(ref result);
                    return result;
                }
                private static void _OrganizationId_Validate(global::LightSwitchApplication.Solution e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OrganizationId_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _OrganizationId_GetImplementationValue(global::LightSwitchApplication.Solution.DetailsClass d)
                {
                    return d.ImplementationEntity.OrganizationId;
                }
                private static void _OrganizationId_OnValueChanged(global::LightSwitchApplication.Solution e)
                {
                    e.OrganizationId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    PublisherId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "PublisherId",
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._PublisherId_Stub,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._PublisherId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._PublisherId_Validate,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._PublisherId_GetImplementationValue,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._PublisherId_SetImplementationValue,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._PublisherId_OnValueChanged);
                private static void _PublisherId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Solution.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.Solution.DetailsClass d, object sf)
                {
                    c(d, ref d._PublisherId, sf);
                }
                private static bool _PublisherId_ComputeIsReadOnly(global::LightSwitchApplication.Solution e)
                {
                    bool result = false;
                    e.PublisherId_IsReadOnly(ref result);
                    return result;
                }
                private static void _PublisherId_Validate(global::LightSwitchApplication.Solution e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PublisherId_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _PublisherId_GetImplementationValue(global::LightSwitchApplication.Solution.DetailsClass d)
                {
                    return d.ImplementationEntity.PublisherId;
                }
                private static void _PublisherId_SetImplementationValue(global::LightSwitchApplication.Solution.DetailsClass d, global::System.Nullable<global::System.Guid> v)
                {
                    d.ImplementationEntity.PublisherId = v;
                }
                private static void _PublisherId_OnValueChanged(global::LightSwitchApplication.Solution e)
                {
                    e.PublisherId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ModifiedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ModifiedOn",
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._ModifiedOn_Stub,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._ModifiedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._ModifiedOn_Validate,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._ModifiedOn_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._ModifiedOn_OnValueChanged);
                private static void _ModifiedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Solution.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Solution.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedOn, sf);
                }
                private static bool _ModifiedOn_ComputeIsReadOnly(global::LightSwitchApplication.Solution e)
                {
                    bool result = false;
                    e.ModifiedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedOn_Validate(global::LightSwitchApplication.Solution e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedOn_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ModifiedOn_GetImplementationValue(global::LightSwitchApplication.Solution.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedOn;
                }
                private static void _ModifiedOn_OnValueChanged(global::LightSwitchApplication.Solution e)
                {
                    e.ModifiedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "CreatedBy",
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._CreatedBy_Stub,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._CreatedBy_Validate,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._CreatedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._CreatedBy_OnValueChanged);
                private static void _CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Solution.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.Solution.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedBy, sf);
                }
                private static bool _CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.Solution e)
                {
                    bool result = false;
                    e.CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedBy_Validate(global::LightSwitchApplication.Solution e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedBy_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _CreatedBy_GetImplementationValue(global::LightSwitchApplication.Solution.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedBy;
                }
                private static void _CreatedBy_OnValueChanged(global::LightSwitchApplication.Solution e)
                {
                    e.CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<bool>>.Entry
                    IsVisible = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "IsVisible",
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._IsVisible_Stub,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._IsVisible_ComputeIsReadOnly,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._IsVisible_Validate,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._IsVisible_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._IsVisible_OnValueChanged);
                private static void _IsVisible_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Solution.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.Solution.DetailsClass d, object sf)
                {
                    c(d, ref d._IsVisible, sf);
                }
                private static bool _IsVisible_ComputeIsReadOnly(global::LightSwitchApplication.Solution e)
                {
                    bool result = false;
                    e.IsVisible_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsVisible_Validate(global::LightSwitchApplication.Solution e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsVisible_Validate(r);
                }
                private static global::System.Nullable<bool> _IsVisible_GetImplementationValue(global::LightSwitchApplication.Solution.DetailsClass d)
                {
                    return d.ImplementationEntity.IsVisible;
                }
                private static void _IsVisible_OnValueChanged(global::LightSwitchApplication.Solution e)
                {
                    e.IsVisible_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, string>.Entry
                    Description = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, string>.Entry(
                        "Description",
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._Description_Stub,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._Description_ComputeIsReadOnly,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._Description_Validate,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._Description_GetImplementationValue,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._Description_SetImplementationValue,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._Description_OnValueChanged);
                private static void _Description_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Solution.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, string>.Data> c, global::LightSwitchApplication.Solution.DetailsClass d, object sf)
                {
                    c(d, ref d._Description, sf);
                }
                private static bool _Description_ComputeIsReadOnly(global::LightSwitchApplication.Solution e)
                {
                    bool result = false;
                    e.Description_IsReadOnly(ref result);
                    return result;
                }
                private static void _Description_Validate(global::LightSwitchApplication.Solution e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Description_Validate(r);
                }
                private static string _Description_GetImplementationValue(global::LightSwitchApplication.Solution.DetailsClass d)
                {
                    return d.ImplementationEntity.Description;
                }
                private static void _Description_SetImplementationValue(global::LightSwitchApplication.Solution.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Description = v;
                }
                private static void _Description_OnValueChanged(global::LightSwitchApplication.Solution e)
                {
                    e.Description_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<bool>>.Entry
                    IsManaged = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "IsManaged",
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._IsManaged_Stub,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._IsManaged_ComputeIsReadOnly,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._IsManaged_Validate,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._IsManaged_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._IsManaged_OnValueChanged);
                private static void _IsManaged_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Solution.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.Solution.DetailsClass d, object sf)
                {
                    c(d, ref d._IsManaged, sf);
                }
                private static bool _IsManaged_ComputeIsReadOnly(global::LightSwitchApplication.Solution e)
                {
                    bool result = false;
                    e.IsManaged_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsManaged_Validate(global::LightSwitchApplication.Solution e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsManaged_Validate(r);
                }
                private static global::System.Nullable<bool> _IsManaged_GetImplementationValue(global::LightSwitchApplication.Solution.DetailsClass d)
                {
                    return d.ImplementationEntity.IsManaged;
                }
                private static void _IsManaged_OnValueChanged(global::LightSwitchApplication.Solution e)
                {
                    e.IsManaged_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, string>.Entry
                    UniqueName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, string>.Entry(
                        "UniqueName",
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._UniqueName_Stub,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._UniqueName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._UniqueName_Validate,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._UniqueName_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._UniqueName_OnValueChanged);
                private static void _UniqueName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Solution.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, string>.Data> c, global::LightSwitchApplication.Solution.DetailsClass d, object sf)
                {
                    c(d, ref d._UniqueName, sf);
                }
                private static bool _UniqueName_ComputeIsReadOnly(global::LightSwitchApplication.Solution e)
                {
                    bool result = false;
                    e.UniqueName_IsReadOnly(ref result);
                    return result;
                }
                private static void _UniqueName_Validate(global::LightSwitchApplication.Solution e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.UniqueName_Validate(r);
                }
                private static string _UniqueName_GetImplementationValue(global::LightSwitchApplication.Solution.DetailsClass d)
                {
                    return d.ImplementationEntity.UniqueName;
                }
                private static void _UniqueName_OnValueChanged(global::LightSwitchApplication.Solution e)
                {
                    e.UniqueName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    ModifiedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "ModifiedBy",
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._ModifiedBy_Stub,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._ModifiedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._ModifiedBy_Validate,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._ModifiedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._ModifiedBy_OnValueChanged);
                private static void _ModifiedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Solution.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.Solution.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedBy, sf);
                }
                private static bool _ModifiedBy_ComputeIsReadOnly(global::LightSwitchApplication.Solution e)
                {
                    bool result = false;
                    e.ModifiedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedBy_Validate(global::LightSwitchApplication.Solution e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedBy_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _ModifiedBy_GetImplementationValue(global::LightSwitchApplication.Solution.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedBy;
                }
                private static void _ModifiedBy_OnValueChanged(global::LightSwitchApplication.Solution e)
                {
                    e.ModifiedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, string>.Entry
                    Version = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, string>.Entry(
                        "Version",
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._Version_Stub,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._Version_ComputeIsReadOnly,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._Version_Validate,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._Version_GetImplementationValue,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._Version_SetImplementationValue,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._Version_OnValueChanged);
                private static void _Version_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Solution.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, string>.Data> c, global::LightSwitchApplication.Solution.DetailsClass d, object sf)
                {
                    c(d, ref d._Version, sf);
                }
                private static bool _Version_ComputeIsReadOnly(global::LightSwitchApplication.Solution e)
                {
                    bool result = false;
                    e.Version_IsReadOnly(ref result);
                    return result;
                }
                private static void _Version_Validate(global::LightSwitchApplication.Solution e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Version_Validate(r);
                }
                private static string _Version_GetImplementationValue(global::LightSwitchApplication.Solution.DetailsClass d)
                {
                    return d.ImplementationEntity.Version;
                }
                private static void _Version_SetImplementationValue(global::LightSwitchApplication.Solution.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Version = v;
                }
                private static void _Version_OnValueChanged(global::LightSwitchApplication.Solution e)
                {
                    e.Version_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    ModifiedOnBehalfBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "ModifiedOnBehalfBy",
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._ModifiedOnBehalfBy_Stub,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._ModifiedOnBehalfBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._ModifiedOnBehalfBy_Validate,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._ModifiedOnBehalfBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._ModifiedOnBehalfBy_OnValueChanged);
                private static void _ModifiedOnBehalfBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Solution.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.Solution.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedOnBehalfBy, sf);
                }
                private static bool _ModifiedOnBehalfBy_ComputeIsReadOnly(global::LightSwitchApplication.Solution e)
                {
                    bool result = false;
                    e.ModifiedOnBehalfBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedOnBehalfBy_Validate(global::LightSwitchApplication.Solution e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedOnBehalfBy_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _ModifiedOnBehalfBy_GetImplementationValue(global::LightSwitchApplication.Solution.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedOnBehalfBy;
                }
                private static void _ModifiedOnBehalfBy_OnValueChanged(global::LightSwitchApplication.Solution e)
                {
                    e.ModifiedOnBehalfBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    CreatedOnBehalfBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "CreatedOnBehalfBy",
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._CreatedOnBehalfBy_Stub,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._CreatedOnBehalfBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._CreatedOnBehalfBy_Validate,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._CreatedOnBehalfBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._CreatedOnBehalfBy_OnValueChanged);
                private static void _CreatedOnBehalfBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Solution.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.Solution.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedOnBehalfBy, sf);
                }
                private static bool _CreatedOnBehalfBy_ComputeIsReadOnly(global::LightSwitchApplication.Solution e)
                {
                    bool result = false;
                    e.CreatedOnBehalfBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedOnBehalfBy_Validate(global::LightSwitchApplication.Solution e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedOnBehalfBy_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _CreatedOnBehalfBy_GetImplementationValue(global::LightSwitchApplication.Solution.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedOnBehalfBy;
                }
                private static void _CreatedOnBehalfBy_OnValueChanged(global::LightSwitchApplication.Solution e)
                {
                    e.CreatedOnBehalfBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<long>>.Entry
                    PinpointSolutionId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<long>>.Entry(
                        "PinpointSolutionId",
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._PinpointSolutionId_Stub,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._PinpointSolutionId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._PinpointSolutionId_Validate,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._PinpointSolutionId_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._PinpointSolutionId_OnValueChanged);
                private static void _PinpointSolutionId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Solution.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<long>>.Data> c, global::LightSwitchApplication.Solution.DetailsClass d, object sf)
                {
                    c(d, ref d._PinpointSolutionId, sf);
                }
                private static bool _PinpointSolutionId_ComputeIsReadOnly(global::LightSwitchApplication.Solution e)
                {
                    bool result = false;
                    e.PinpointSolutionId_IsReadOnly(ref result);
                    return result;
                }
                private static void _PinpointSolutionId_Validate(global::LightSwitchApplication.Solution e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PinpointSolutionId_Validate(r);
                }
                private static global::System.Nullable<long> _PinpointSolutionId_GetImplementationValue(global::LightSwitchApplication.Solution.DetailsClass d)
                {
                    return d.ImplementationEntity.PinpointSolutionId;
                }
                private static void _PinpointSolutionId_OnValueChanged(global::LightSwitchApplication.Solution e)
                {
                    e.PinpointSolutionId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, string>.Entry
                    PinpointSolutionDefaultLocale = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, string>.Entry(
                        "PinpointSolutionDefaultLocale",
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._PinpointSolutionDefaultLocale_Stub,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._PinpointSolutionDefaultLocale_ComputeIsReadOnly,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._PinpointSolutionDefaultLocale_Validate,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._PinpointSolutionDefaultLocale_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._PinpointSolutionDefaultLocale_OnValueChanged);
                private static void _PinpointSolutionDefaultLocale_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Solution.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, string>.Data> c, global::LightSwitchApplication.Solution.DetailsClass d, object sf)
                {
                    c(d, ref d._PinpointSolutionDefaultLocale, sf);
                }
                private static bool _PinpointSolutionDefaultLocale_ComputeIsReadOnly(global::LightSwitchApplication.Solution e)
                {
                    bool result = false;
                    e.PinpointSolutionDefaultLocale_IsReadOnly(ref result);
                    return result;
                }
                private static void _PinpointSolutionDefaultLocale_Validate(global::LightSwitchApplication.Solution e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PinpointSolutionDefaultLocale_Validate(r);
                }
                private static string _PinpointSolutionDefaultLocale_GetImplementationValue(global::LightSwitchApplication.Solution.DetailsClass d)
                {
                    return d.ImplementationEntity.PinpointSolutionDefaultLocale;
                }
                private static void _PinpointSolutionDefaultLocale_OnValueChanged(global::LightSwitchApplication.Solution e)
                {
                    e.PinpointSolutionDefaultLocale_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<long>>.Entry
                    PinpointPublisherId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<long>>.Entry(
                        "PinpointPublisherId",
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._PinpointPublisherId_Stub,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._PinpointPublisherId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._PinpointPublisherId_Validate,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._PinpointPublisherId_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._PinpointPublisherId_OnValueChanged);
                private static void _PinpointPublisherId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Solution.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<long>>.Data> c, global::LightSwitchApplication.Solution.DetailsClass d, object sf)
                {
                    c(d, ref d._PinpointPublisherId, sf);
                }
                private static bool _PinpointPublisherId_ComputeIsReadOnly(global::LightSwitchApplication.Solution e)
                {
                    bool result = false;
                    e.PinpointPublisherId_IsReadOnly(ref result);
                    return result;
                }
                private static void _PinpointPublisherId_Validate(global::LightSwitchApplication.Solution e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PinpointPublisherId_Validate(r);
                }
                private static global::System.Nullable<long> _PinpointPublisherId_GetImplementationValue(global::LightSwitchApplication.Solution.DetailsClass d)
                {
                    return d.ImplementationEntity.PinpointPublisherId;
                }
                private static void _PinpointPublisherId_OnValueChanged(global::LightSwitchApplication.Solution e)
                {
                    e.PinpointPublisherId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    ConfigurationPageId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "ConfigurationPageId",
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._ConfigurationPageId_Stub,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._ConfigurationPageId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._ConfigurationPageId_Validate,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._ConfigurationPageId_GetImplementationValue,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._ConfigurationPageId_SetImplementationValue,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._ConfigurationPageId_OnValueChanged);
                private static void _ConfigurationPageId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Solution.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.Solution.DetailsClass d, object sf)
                {
                    c(d, ref d._ConfigurationPageId, sf);
                }
                private static bool _ConfigurationPageId_ComputeIsReadOnly(global::LightSwitchApplication.Solution e)
                {
                    bool result = false;
                    e.ConfigurationPageId_IsReadOnly(ref result);
                    return result;
                }
                private static void _ConfigurationPageId_Validate(global::LightSwitchApplication.Solution e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ConfigurationPageId_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _ConfigurationPageId_GetImplementationValue(global::LightSwitchApplication.Solution.DetailsClass d)
                {
                    return d.ImplementationEntity.ConfigurationPageId;
                }
                private static void _ConfigurationPageId_SetImplementationValue(global::LightSwitchApplication.Solution.DetailsClass d, global::System.Nullable<global::System.Guid> v)
                {
                    d.ImplementationEntity.ConfigurationPageId = v;
                }
                private static void _ConfigurationPageId_OnValueChanged(global::LightSwitchApplication.Solution e)
                {
                    e.ConfigurationPageId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, string>.Entry
                    PinpointAssetId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, string>.Entry(
                        "PinpointAssetId",
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._PinpointAssetId_Stub,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._PinpointAssetId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._PinpointAssetId_Validate,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._PinpointAssetId_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Solution.DetailsClass.PropertySetProperties._PinpointAssetId_OnValueChanged);
                private static void _PinpointAssetId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Solution.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, string>.Data> c, global::LightSwitchApplication.Solution.DetailsClass d, object sf)
                {
                    c(d, ref d._PinpointAssetId, sf);
                }
                private static bool _PinpointAssetId_ComputeIsReadOnly(global::LightSwitchApplication.Solution e)
                {
                    bool result = false;
                    e.PinpointAssetId_IsReadOnly(ref result);
                    return result;
                }
                private static void _PinpointAssetId_Validate(global::LightSwitchApplication.Solution e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PinpointAssetId_Validate(r);
                }
                private static string _PinpointAssetId_GetImplementationValue(global::LightSwitchApplication.Solution.DetailsClass d)
                {
                    return d.ImplementationEntity.PinpointAssetId;
                }
                private static void _PinpointAssetId_OnValueChanged(global::LightSwitchApplication.Solution e)
                {
                    e.PinpointAssetId_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, string>.Data _FriendlyName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Guid>.Data _SolutionId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<long>>.Data _VersionNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _InstalledOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _CreatedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _OrganizationId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _PublisherId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ModifiedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<bool>>.Data _IsVisible;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, string>.Data _Description;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<bool>>.Data _IsManaged;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, string>.Data _UniqueName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _ModifiedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, string>.Data _Version;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _ModifiedOnBehalfBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _CreatedOnBehalfBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<long>>.Data _PinpointSolutionId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, string>.Data _PinpointSolutionDefaultLocale;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<long>>.Data _PinpointPublisherId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _ConfigurationPageId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Solution, global::LightSwitchApplication.Solution.DetailsClass, string>.Data _PinpointAssetId;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
    public sealed partial class TeamRole : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.TeamRole, global::LightSwitchApplication.TeamRole.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the TeamRole entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TeamRole()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TeamRole(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.TeamRole> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.TeamRole.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TeamRole_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TeamRole_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Guid TeamRoleId
        {
            get
            {
                return global::LightSwitchApplication.TeamRole.DetailsClass.GetValue(this, global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties.TeamRoleId);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TeamRoleId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TeamRoleId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TeamRoleId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<long> VersionNumber
        {
            get
            {
                return global::LightSwitchApplication.TeamRole.DetailsClass.GetValue(this, global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties.VersionNumber);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Role teamroles_association_role
        {
            get
            {
                return global::LightSwitchApplication.TeamRole.DetailsClass.GetValue(this, global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties.teamroles_association_role);
            }
            set
            {
                global::LightSwitchApplication.TeamRole.DetailsClass.SetValue(this, global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties.teamroles_association_role, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void teamroles_association_role_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void teamroles_association_role_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void teamroles_association_role_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Team teamroles_association_team
        {
            get
            {
                return global::LightSwitchApplication.TeamRole.DetailsClass.GetValue(this, global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties.teamroles_association_team);
            }
            set
            {
                global::LightSwitchApplication.TeamRole.DetailsClass.SetValue(this, global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties.teamroles_association_team, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void teamroles_association_team_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void teamroles_association_team_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void teamroles_association_team_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.TeamRole,
                global::LightSwitchApplication.TeamRole.DetailsClass,
                global::LightSwitchApplication.TeamRole.DetailsClass.IImplementation,
                global::LightSwitchApplication.TeamRole.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.TeamRole, global::LightSwitchApplication.TeamRole.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.TeamRole, global::LightSwitchApplication.TeamRole.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties.TeamRoleId;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.TeamRole, global::LightSwitchApplication.TeamRole.DetailsClass>.Entry
                __TeamRoleEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.TeamRole, global::LightSwitchApplication.TeamRole.DetailsClass>.Entry(
                    global::LightSwitchApplication.TeamRole.DetailsClass.__TeamRole_CreateNew,
                    global::LightSwitchApplication.TeamRole.DetailsClass.__TeamRole_Created,
                    global::LightSwitchApplication.TeamRole.DetailsClass.__TeamRole_AllowSaveWithErrors);
            private static global::LightSwitchApplication.TeamRole __TeamRole_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.TeamRole> es)
            {
                return new global::LightSwitchApplication.TeamRole(es);
            }
            private static void __TeamRole_Created(global::LightSwitchApplication.TeamRole e)
            {
                e.TeamRole_Created();
            }
            private static bool __TeamRole_AllowSaveWithErrors(global::LightSwitchApplication.TeamRole e)
            {
                bool result = false;
                e.TeamRole_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.TeamRole, global::LightSwitchApplication.TeamRole.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.TeamRole, global::LightSwitchApplication.TeamRole.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.TeamRole.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.TeamRole, global::LightSwitchApplication.TeamRole.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamRole, global::LightSwitchApplication.TeamRole.DetailsClass, global::System.Guid> TeamRoleId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties.TeamRoleId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamRole, global::LightSwitchApplication.TeamRole.DetailsClass, global::System.Guid>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamRole, global::LightSwitchApplication.TeamRole.DetailsClass, global::System.Nullable<long>> VersionNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties.VersionNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamRole, global::LightSwitchApplication.TeamRole.DetailsClass, global::System.Nullable<long>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TeamRole, global::LightSwitchApplication.TeamRole.DetailsClass, global::LightSwitchApplication.Role> teamroles_association_role
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties.teamroles_association_role) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TeamRole, global::LightSwitchApplication.TeamRole.DetailsClass, global::LightSwitchApplication.Role>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TeamRole, global::LightSwitchApplication.TeamRole.DetailsClass, global::LightSwitchApplication.Team> teamroles_association_team
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties.teamroles_association_team) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TeamRole, global::LightSwitchApplication.TeamRole.DetailsClass, global::LightSwitchApplication.Team>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new global::System.Guid TeamRoleId { get; }
                new global::System.Nullable<long> VersionNumber { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation teamroles_association_role { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation teamroles_association_team { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamRole, global::LightSwitchApplication.TeamRole.DetailsClass, global::System.Guid>.Entry
                    TeamRoleId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamRole, global::LightSwitchApplication.TeamRole.DetailsClass, global::System.Guid>.Entry(
                        "TeamRoleId",
                        global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties._TeamRoleId_Stub,
                        global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties._TeamRoleId_ComputeIsReadOnly,
                        global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties._TeamRoleId_Validate,
                        global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties._TeamRoleId_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties._TeamRoleId_OnValueChanged);
                private static void _TeamRoleId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TeamRole.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamRole, global::LightSwitchApplication.TeamRole.DetailsClass, global::System.Guid>.Data> c, global::LightSwitchApplication.TeamRole.DetailsClass d, object sf)
                {
                    c(d, ref d._TeamRoleId, sf);
                }
                private static bool _TeamRoleId_ComputeIsReadOnly(global::LightSwitchApplication.TeamRole e)
                {
                    bool result = false;
                    e.TeamRoleId_IsReadOnly(ref result);
                    return result;
                }
                private static void _TeamRoleId_Validate(global::LightSwitchApplication.TeamRole e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TeamRoleId_Validate(r);
                }
                private static global::System.Guid _TeamRoleId_GetImplementationValue(global::LightSwitchApplication.TeamRole.DetailsClass d)
                {
                    return d.ImplementationEntity.TeamRoleId;
                }
                private static void _TeamRoleId_OnValueChanged(global::LightSwitchApplication.TeamRole e)
                {
                    e.TeamRoleId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamRole, global::LightSwitchApplication.TeamRole.DetailsClass, global::System.Nullable<long>>.Entry
                    VersionNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamRole, global::LightSwitchApplication.TeamRole.DetailsClass, global::System.Nullable<long>>.Entry(
                        "VersionNumber",
                        global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties._VersionNumber_Stub,
                        global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties._VersionNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties._VersionNumber_Validate,
                        global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties._VersionNumber_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties._VersionNumber_OnValueChanged);
                private static void _VersionNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TeamRole.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamRole, global::LightSwitchApplication.TeamRole.DetailsClass, global::System.Nullable<long>>.Data> c, global::LightSwitchApplication.TeamRole.DetailsClass d, object sf)
                {
                    c(d, ref d._VersionNumber, sf);
                }
                private static bool _VersionNumber_ComputeIsReadOnly(global::LightSwitchApplication.TeamRole e)
                {
                    bool result = false;
                    e.VersionNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _VersionNumber_Validate(global::LightSwitchApplication.TeamRole e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.VersionNumber_Validate(r);
                }
                private static global::System.Nullable<long> _VersionNumber_GetImplementationValue(global::LightSwitchApplication.TeamRole.DetailsClass d)
                {
                    return d.ImplementationEntity.VersionNumber;
                }
                private static void _VersionNumber_OnValueChanged(global::LightSwitchApplication.TeamRole e)
                {
                    e.VersionNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TeamRole, global::LightSwitchApplication.TeamRole.DetailsClass, global::LightSwitchApplication.Role>.Entry
                    teamroles_association_role = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TeamRole, global::LightSwitchApplication.TeamRole.DetailsClass, global::LightSwitchApplication.Role>.Entry(
                        "teamroles_association_role",
                        global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties._teamroles_association_role_Stub,
                        global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties._teamroles_association_role_ComputeIsReadOnly,
                        global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties._teamroles_association_role_Validate,
                        global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties._teamroles_association_role_GetCoreImplementationValue,
                        global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties._teamroles_association_role_GetImplementationValue,
                        global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties._teamroles_association_role_SetImplementationValue,
                        global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties._teamroles_association_role_Refresh,
                        global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties._teamroles_association_role_OnValueChanged);
                private static void _teamroles_association_role_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TeamRole.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TeamRole, global::LightSwitchApplication.TeamRole.DetailsClass, global::LightSwitchApplication.Role>.Data> c, global::LightSwitchApplication.TeamRole.DetailsClass d, object sf)
                {
                    c(d, ref d._teamroles_association_role, sf);
                }
                private static bool _teamroles_association_role_ComputeIsReadOnly(global::LightSwitchApplication.TeamRole e)
                {
                    bool result = false;
                    e.teamroles_association_role_IsReadOnly(ref result);
                    return result;
                }
                private static void _teamroles_association_role_Validate(global::LightSwitchApplication.TeamRole e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.teamroles_association_role_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _teamroles_association_role_GetCoreImplementationValue(global::LightSwitchApplication.TeamRole.DetailsClass d)
                {
                    return d.ImplementationEntity.teamroles_association_role;
                }
                private static global::LightSwitchApplication.Role _teamroles_association_role_GetImplementationValue(global::LightSwitchApplication.TeamRole.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Role, global::LightSwitchApplication.Role.DetailsClass>(global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties.teamroles_association_role, ref d._teamroles_association_role);
                }
                private static void _teamroles_association_role_SetImplementationValue(global::LightSwitchApplication.TeamRole.DetailsClass d, global::LightSwitchApplication.Role v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties.teamroles_association_role, ref d._teamroles_association_role, (i, ev) => i.teamroles_association_role = ev, v);
                }
                private static void _teamroles_association_role_Refresh(global::LightSwitchApplication.TeamRole.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties.teamroles_association_role, ref d._teamroles_association_role);
                }
                private static void _teamroles_association_role_OnValueChanged(global::LightSwitchApplication.TeamRole e)
                {
                    e.teamroles_association_role_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TeamRole, global::LightSwitchApplication.TeamRole.DetailsClass, global::LightSwitchApplication.Team>.Entry
                    teamroles_association_team = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TeamRole, global::LightSwitchApplication.TeamRole.DetailsClass, global::LightSwitchApplication.Team>.Entry(
                        "teamroles_association_team",
                        global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties._teamroles_association_team_Stub,
                        global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties._teamroles_association_team_ComputeIsReadOnly,
                        global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties._teamroles_association_team_Validate,
                        global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties._teamroles_association_team_GetCoreImplementationValue,
                        global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties._teamroles_association_team_GetImplementationValue,
                        global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties._teamroles_association_team_SetImplementationValue,
                        global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties._teamroles_association_team_Refresh,
                        global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties._teamroles_association_team_OnValueChanged);
                private static void _teamroles_association_team_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TeamRole.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TeamRole, global::LightSwitchApplication.TeamRole.DetailsClass, global::LightSwitchApplication.Team>.Data> c, global::LightSwitchApplication.TeamRole.DetailsClass d, object sf)
                {
                    c(d, ref d._teamroles_association_team, sf);
                }
                private static bool _teamroles_association_team_ComputeIsReadOnly(global::LightSwitchApplication.TeamRole e)
                {
                    bool result = false;
                    e.teamroles_association_team_IsReadOnly(ref result);
                    return result;
                }
                private static void _teamroles_association_team_Validate(global::LightSwitchApplication.TeamRole e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.teamroles_association_team_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _teamroles_association_team_GetCoreImplementationValue(global::LightSwitchApplication.TeamRole.DetailsClass d)
                {
                    return d.ImplementationEntity.teamroles_association_team;
                }
                private static global::LightSwitchApplication.Team _teamroles_association_team_GetImplementationValue(global::LightSwitchApplication.TeamRole.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass>(global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties.teamroles_association_team, ref d._teamroles_association_team);
                }
                private static void _teamroles_association_team_SetImplementationValue(global::LightSwitchApplication.TeamRole.DetailsClass d, global::LightSwitchApplication.Team v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties.teamroles_association_team, ref d._teamroles_association_team, (i, ev) => i.teamroles_association_team = ev, v);
                }
                private static void _teamroles_association_team_Refresh(global::LightSwitchApplication.TeamRole.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.TeamRole.DetailsClass.PropertySetProperties.teamroles_association_team, ref d._teamroles_association_team);
                }
                private static void _teamroles_association_team_OnValueChanged(global::LightSwitchApplication.TeamRole e)
                {
                    e.teamroles_association_team_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamRole, global::LightSwitchApplication.TeamRole.DetailsClass, global::System.Guid>.Data _TeamRoleId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TeamRole, global::LightSwitchApplication.TeamRole.DetailsClass, global::System.Nullable<long>>.Data _VersionNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TeamRole, global::LightSwitchApplication.TeamRole.DetailsClass, global::LightSwitchApplication.Role>.Data _teamroles_association_role;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TeamRole, global::LightSwitchApplication.TeamRole.DetailsClass, global::LightSwitchApplication.Team>.Data _teamroles_association_team;
            
        }
    
        #endregion
    }
    
    #endregion
}
