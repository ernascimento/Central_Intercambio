

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
    public sealed partial class ActivityParty : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the ActivityParty entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ActivityParty()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ActivityParty(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ActivityParty> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.ActivityParty.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityParty_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityParty_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string AddressUsed
        {
            get
            {
                return global::LightSwitchApplication.ActivityParty.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.AddressUsed);
            }
            set
            {
                global::LightSwitchApplication.ActivityParty.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.AddressUsed, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddressUsed_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddressUsed_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddressUsed_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Guid ActivityPartyId
        {
            get
            {
                return global::LightSwitchApplication.ActivityParty.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.ActivityPartyId);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityPartyId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityPartyId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityPartyId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> DoNotEMail
        {
            get
            {
                return global::LightSwitchApplication.ActivityParty.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.DoNotEMail);
            }
            set
            {
                global::LightSwitchApplication.ActivityParty.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.DoNotEMail, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DoNotEMail_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DoNotEMail_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DoNotEMail_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> DoNotFax
        {
            get
            {
                return global::LightSwitchApplication.ActivityParty.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.DoNotFax);
            }
            set
            {
                global::LightSwitchApplication.ActivityParty.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.DoNotFax, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DoNotFax_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DoNotFax_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DoNotFax_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> DoNotPhone
        {
            get
            {
                return global::LightSwitchApplication.ActivityParty.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.DoNotPhone);
            }
            set
            {
                global::LightSwitchApplication.ActivityParty.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.DoNotPhone, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DoNotPhone_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DoNotPhone_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DoNotPhone_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> DoNotPostalMail
        {
            get
            {
                return global::LightSwitchApplication.ActivityParty.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.DoNotPostalMail);
            }
            set
            {
                global::LightSwitchApplication.ActivityParty.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.DoNotPostalMail, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DoNotPostalMail_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DoNotPostalMail_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DoNotPostalMail_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<double> Effort
        {
            get
            {
                return global::LightSwitchApplication.ActivityParty.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.Effort);
            }
            set
            {
                global::LightSwitchApplication.ActivityParty.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.Effort, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Effort_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Effort_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Effort_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ExchangeEntryId
        {
            get
            {
                return global::LightSwitchApplication.ActivityParty.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.ExchangeEntryId);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExchangeEntryId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExchangeEntryId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExchangeEntryId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> IsPartyDeleted
        {
            get
            {
                return global::LightSwitchApplication.ActivityParty.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.IsPartyDeleted);
            }
            set
            {
                global::LightSwitchApplication.ActivityParty.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.IsPartyDeleted, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsPartyDeleted_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsPartyDeleted_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsPartyDeleted_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> InstanceTypeCode
        {
            get
            {
                return global::LightSwitchApplication.ActivityParty.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.InstanceTypeCode);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InstanceTypeCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InstanceTypeCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InstanceTypeCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ScheduledEnd
        {
            get
            {
                return global::LightSwitchApplication.ActivityParty.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.ScheduledEnd);
            }
            set
            {
                global::LightSwitchApplication.ActivityParty.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.ScheduledEnd, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduledEnd_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduledEnd_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduledEnd_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ScheduledStart
        {
            get
            {
                return global::LightSwitchApplication.ActivityParty.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.ScheduledStart);
            }
            set
            {
                global::LightSwitchApplication.ActivityParty.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.ScheduledStart, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduledStart_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduledStart_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduledStart_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<long> VersionNumber
        {
            get
            {
                return global::LightSwitchApplication.ActivityParty.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.VersionNumber);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Activity ActivityParty_Activity
        {
            get
            {
                return global::LightSwitchApplication.ActivityParty.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.ActivityParty_Activity);
            }
            set
            {
                global::LightSwitchApplication.ActivityParty.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.ActivityParty_Activity, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityParty_Activity_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityParty_Activity_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityParty_Activity_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.ActivityParty,
                global::LightSwitchApplication.ActivityParty.DetailsClass,
                global::LightSwitchApplication.ActivityParty.DetailsClass.IImplementation,
                global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.AddressUsed;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass>.Entry
                __ActivityPartyEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass>.Entry(
                    global::LightSwitchApplication.ActivityParty.DetailsClass.__ActivityParty_CreateNew,
                    global::LightSwitchApplication.ActivityParty.DetailsClass.__ActivityParty_Created,
                    global::LightSwitchApplication.ActivityParty.DetailsClass.__ActivityParty_AllowSaveWithErrors);
            private static global::LightSwitchApplication.ActivityParty __ActivityParty_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ActivityParty> es)
            {
                return new global::LightSwitchApplication.ActivityParty(es);
            }
            private static void __ActivityParty_Created(global::LightSwitchApplication.ActivityParty e)
            {
                e.ActivityParty_Created();
            }
            private static bool __ActivityParty_AllowSaveWithErrors(global::LightSwitchApplication.ActivityParty e)
            {
                bool result = false;
                e.ActivityParty_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, string> AddressUsed
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.AddressUsed) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Guid> ActivityPartyId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.ActivityPartyId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Guid>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<bool>> DoNotEMail
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.DoNotEMail) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<bool>> DoNotFax
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.DoNotFax) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<bool>> DoNotPhone
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.DoNotPhone) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<bool>> DoNotPostalMail
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.DoNotPostalMail) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<double>> Effort
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.Effort) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<double>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, string> ExchangeEntryId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.ExchangeEntryId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<bool>> IsPartyDeleted
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.IsPartyDeleted) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<int>> InstanceTypeCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.InstanceTypeCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<global::System.DateTime>> ScheduledEnd
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.ScheduledEnd) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<global::System.DateTime>> ScheduledStart
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.ScheduledStart) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<long>> VersionNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.VersionNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<long>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::LightSwitchApplication.Activity> ActivityParty_Activity
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.ActivityParty_Activity) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::LightSwitchApplication.Activity>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new string AddressUsed { get; set; }
                new global::System.Guid ActivityPartyId { get; }
                new global::System.Nullable<bool> DoNotEMail { get; set; }
                new global::System.Nullable<bool> DoNotFax { get; set; }
                new global::System.Nullable<bool> DoNotPhone { get; set; }
                new global::System.Nullable<bool> DoNotPostalMail { get; set; }
                new global::System.Nullable<double> Effort { get; set; }
                new string ExchangeEntryId { get; }
                new global::System.Nullable<bool> IsPartyDeleted { get; set; }
                new global::System.Nullable<int> InstanceTypeCode { get; }
                new global::System.Nullable<global::System.DateTime> ScheduledEnd { get; set; }
                new global::System.Nullable<global::System.DateTime> ScheduledStart { get; set; }
                new global::System.Nullable<long> VersionNumber { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation ActivityParty_Activity { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, string>.Entry
                    AddressUsed = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, string>.Entry(
                        "AddressUsed",
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._AddressUsed_Stub,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._AddressUsed_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._AddressUsed_Validate,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._AddressUsed_GetImplementationValue,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._AddressUsed_SetImplementationValue,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._AddressUsed_OnValueChanged);
                private static void _AddressUsed_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityParty.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, string>.Data> c, global::LightSwitchApplication.ActivityParty.DetailsClass d, object sf)
                {
                    c(d, ref d._AddressUsed, sf);
                }
                private static bool _AddressUsed_ComputeIsReadOnly(global::LightSwitchApplication.ActivityParty e)
                {
                    bool result = false;
                    e.AddressUsed_IsReadOnly(ref result);
                    return result;
                }
                private static void _AddressUsed_Validate(global::LightSwitchApplication.ActivityParty e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AddressUsed_Validate(r);
                }
                private static string _AddressUsed_GetImplementationValue(global::LightSwitchApplication.ActivityParty.DetailsClass d)
                {
                    return d.ImplementationEntity.AddressUsed;
                }
                private static void _AddressUsed_SetImplementationValue(global::LightSwitchApplication.ActivityParty.DetailsClass d, string v)
                {
                    d.ImplementationEntity.AddressUsed = v;
                }
                private static void _AddressUsed_OnValueChanged(global::LightSwitchApplication.ActivityParty e)
                {
                    e.AddressUsed_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Guid>.Entry
                    ActivityPartyId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Guid>.Entry(
                        "ActivityPartyId",
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._ActivityPartyId_Stub,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._ActivityPartyId_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._ActivityPartyId_Validate,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._ActivityPartyId_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._ActivityPartyId_OnValueChanged);
                private static void _ActivityPartyId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityParty.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Guid>.Data> c, global::LightSwitchApplication.ActivityParty.DetailsClass d, object sf)
                {
                    c(d, ref d._ActivityPartyId, sf);
                }
                private static bool _ActivityPartyId_ComputeIsReadOnly(global::LightSwitchApplication.ActivityParty e)
                {
                    bool result = false;
                    e.ActivityPartyId_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActivityPartyId_Validate(global::LightSwitchApplication.ActivityParty e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActivityPartyId_Validate(r);
                }
                private static global::System.Guid _ActivityPartyId_GetImplementationValue(global::LightSwitchApplication.ActivityParty.DetailsClass d)
                {
                    return d.ImplementationEntity.ActivityPartyId;
                }
                private static void _ActivityPartyId_OnValueChanged(global::LightSwitchApplication.ActivityParty e)
                {
                    e.ActivityPartyId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<bool>>.Entry
                    DoNotEMail = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "DoNotEMail",
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._DoNotEMail_Stub,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._DoNotEMail_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._DoNotEMail_Validate,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._DoNotEMail_GetImplementationValue,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._DoNotEMail_SetImplementationValue,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._DoNotEMail_OnValueChanged);
                private static void _DoNotEMail_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityParty.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.ActivityParty.DetailsClass d, object sf)
                {
                    c(d, ref d._DoNotEMail, sf);
                }
                private static bool _DoNotEMail_ComputeIsReadOnly(global::LightSwitchApplication.ActivityParty e)
                {
                    bool result = false;
                    e.DoNotEMail_IsReadOnly(ref result);
                    return result;
                }
                private static void _DoNotEMail_Validate(global::LightSwitchApplication.ActivityParty e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DoNotEMail_Validate(r);
                }
                private static global::System.Nullable<bool> _DoNotEMail_GetImplementationValue(global::LightSwitchApplication.ActivityParty.DetailsClass d)
                {
                    return d.ImplementationEntity.DoNotEMail;
                }
                private static void _DoNotEMail_SetImplementationValue(global::LightSwitchApplication.ActivityParty.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.DoNotEMail = v;
                }
                private static void _DoNotEMail_OnValueChanged(global::LightSwitchApplication.ActivityParty e)
                {
                    e.DoNotEMail_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<bool>>.Entry
                    DoNotFax = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "DoNotFax",
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._DoNotFax_Stub,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._DoNotFax_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._DoNotFax_Validate,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._DoNotFax_GetImplementationValue,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._DoNotFax_SetImplementationValue,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._DoNotFax_OnValueChanged);
                private static void _DoNotFax_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityParty.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.ActivityParty.DetailsClass d, object sf)
                {
                    c(d, ref d._DoNotFax, sf);
                }
                private static bool _DoNotFax_ComputeIsReadOnly(global::LightSwitchApplication.ActivityParty e)
                {
                    bool result = false;
                    e.DoNotFax_IsReadOnly(ref result);
                    return result;
                }
                private static void _DoNotFax_Validate(global::LightSwitchApplication.ActivityParty e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DoNotFax_Validate(r);
                }
                private static global::System.Nullable<bool> _DoNotFax_GetImplementationValue(global::LightSwitchApplication.ActivityParty.DetailsClass d)
                {
                    return d.ImplementationEntity.DoNotFax;
                }
                private static void _DoNotFax_SetImplementationValue(global::LightSwitchApplication.ActivityParty.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.DoNotFax = v;
                }
                private static void _DoNotFax_OnValueChanged(global::LightSwitchApplication.ActivityParty e)
                {
                    e.DoNotFax_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<bool>>.Entry
                    DoNotPhone = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "DoNotPhone",
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._DoNotPhone_Stub,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._DoNotPhone_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._DoNotPhone_Validate,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._DoNotPhone_GetImplementationValue,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._DoNotPhone_SetImplementationValue,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._DoNotPhone_OnValueChanged);
                private static void _DoNotPhone_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityParty.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.ActivityParty.DetailsClass d, object sf)
                {
                    c(d, ref d._DoNotPhone, sf);
                }
                private static bool _DoNotPhone_ComputeIsReadOnly(global::LightSwitchApplication.ActivityParty e)
                {
                    bool result = false;
                    e.DoNotPhone_IsReadOnly(ref result);
                    return result;
                }
                private static void _DoNotPhone_Validate(global::LightSwitchApplication.ActivityParty e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DoNotPhone_Validate(r);
                }
                private static global::System.Nullable<bool> _DoNotPhone_GetImplementationValue(global::LightSwitchApplication.ActivityParty.DetailsClass d)
                {
                    return d.ImplementationEntity.DoNotPhone;
                }
                private static void _DoNotPhone_SetImplementationValue(global::LightSwitchApplication.ActivityParty.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.DoNotPhone = v;
                }
                private static void _DoNotPhone_OnValueChanged(global::LightSwitchApplication.ActivityParty e)
                {
                    e.DoNotPhone_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<bool>>.Entry
                    DoNotPostalMail = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "DoNotPostalMail",
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._DoNotPostalMail_Stub,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._DoNotPostalMail_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._DoNotPostalMail_Validate,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._DoNotPostalMail_GetImplementationValue,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._DoNotPostalMail_SetImplementationValue,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._DoNotPostalMail_OnValueChanged);
                private static void _DoNotPostalMail_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityParty.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.ActivityParty.DetailsClass d, object sf)
                {
                    c(d, ref d._DoNotPostalMail, sf);
                }
                private static bool _DoNotPostalMail_ComputeIsReadOnly(global::LightSwitchApplication.ActivityParty e)
                {
                    bool result = false;
                    e.DoNotPostalMail_IsReadOnly(ref result);
                    return result;
                }
                private static void _DoNotPostalMail_Validate(global::LightSwitchApplication.ActivityParty e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DoNotPostalMail_Validate(r);
                }
                private static global::System.Nullable<bool> _DoNotPostalMail_GetImplementationValue(global::LightSwitchApplication.ActivityParty.DetailsClass d)
                {
                    return d.ImplementationEntity.DoNotPostalMail;
                }
                private static void _DoNotPostalMail_SetImplementationValue(global::LightSwitchApplication.ActivityParty.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.DoNotPostalMail = v;
                }
                private static void _DoNotPostalMail_OnValueChanged(global::LightSwitchApplication.ActivityParty e)
                {
                    e.DoNotPostalMail_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<double>>.Entry
                    Effort = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<double>>.Entry(
                        "Effort",
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._Effort_Stub,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._Effort_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._Effort_Validate,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._Effort_GetImplementationValue,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._Effort_SetImplementationValue,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._Effort_OnValueChanged);
                private static void _Effort_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityParty.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<double>>.Data> c, global::LightSwitchApplication.ActivityParty.DetailsClass d, object sf)
                {
                    c(d, ref d._Effort, sf);
                }
                private static bool _Effort_ComputeIsReadOnly(global::LightSwitchApplication.ActivityParty e)
                {
                    bool result = false;
                    e.Effort_IsReadOnly(ref result);
                    return result;
                }
                private static void _Effort_Validate(global::LightSwitchApplication.ActivityParty e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Effort_Validate(r);
                }
                private static global::System.Nullable<double> _Effort_GetImplementationValue(global::LightSwitchApplication.ActivityParty.DetailsClass d)
                {
                    return d.ImplementationEntity.Effort;
                }
                private static void _Effort_SetImplementationValue(global::LightSwitchApplication.ActivityParty.DetailsClass d, global::System.Nullable<double> v)
                {
                    d.ImplementationEntity.Effort = v;
                }
                private static void _Effort_OnValueChanged(global::LightSwitchApplication.ActivityParty e)
                {
                    e.Effort_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, string>.Entry
                    ExchangeEntryId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, string>.Entry(
                        "ExchangeEntryId",
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._ExchangeEntryId_Stub,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._ExchangeEntryId_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._ExchangeEntryId_Validate,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._ExchangeEntryId_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._ExchangeEntryId_OnValueChanged);
                private static void _ExchangeEntryId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityParty.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, string>.Data> c, global::LightSwitchApplication.ActivityParty.DetailsClass d, object sf)
                {
                    c(d, ref d._ExchangeEntryId, sf);
                }
                private static bool _ExchangeEntryId_ComputeIsReadOnly(global::LightSwitchApplication.ActivityParty e)
                {
                    bool result = false;
                    e.ExchangeEntryId_IsReadOnly(ref result);
                    return result;
                }
                private static void _ExchangeEntryId_Validate(global::LightSwitchApplication.ActivityParty e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ExchangeEntryId_Validate(r);
                }
                private static string _ExchangeEntryId_GetImplementationValue(global::LightSwitchApplication.ActivityParty.DetailsClass d)
                {
                    return d.ImplementationEntity.ExchangeEntryId;
                }
                private static void _ExchangeEntryId_OnValueChanged(global::LightSwitchApplication.ActivityParty e)
                {
                    e.ExchangeEntryId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<bool>>.Entry
                    IsPartyDeleted = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "IsPartyDeleted",
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._IsPartyDeleted_Stub,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._IsPartyDeleted_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._IsPartyDeleted_Validate,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._IsPartyDeleted_GetImplementationValue,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._IsPartyDeleted_SetImplementationValue,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._IsPartyDeleted_OnValueChanged);
                private static void _IsPartyDeleted_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityParty.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.ActivityParty.DetailsClass d, object sf)
                {
                    c(d, ref d._IsPartyDeleted, sf);
                }
                private static bool _IsPartyDeleted_ComputeIsReadOnly(global::LightSwitchApplication.ActivityParty e)
                {
                    bool result = false;
                    e.IsPartyDeleted_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsPartyDeleted_Validate(global::LightSwitchApplication.ActivityParty e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsPartyDeleted_Validate(r);
                }
                private static global::System.Nullable<bool> _IsPartyDeleted_GetImplementationValue(global::LightSwitchApplication.ActivityParty.DetailsClass d)
                {
                    return d.ImplementationEntity.IsPartyDeleted;
                }
                private static void _IsPartyDeleted_SetImplementationValue(global::LightSwitchApplication.ActivityParty.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.IsPartyDeleted = v;
                }
                private static void _IsPartyDeleted_OnValueChanged(global::LightSwitchApplication.ActivityParty e)
                {
                    e.IsPartyDeleted_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<int>>.Entry
                    InstanceTypeCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<int>>.Entry(
                        "InstanceTypeCode",
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._InstanceTypeCode_Stub,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._InstanceTypeCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._InstanceTypeCode_Validate,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._InstanceTypeCode_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._InstanceTypeCode_OnValueChanged);
                private static void _InstanceTypeCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityParty.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.ActivityParty.DetailsClass d, object sf)
                {
                    c(d, ref d._InstanceTypeCode, sf);
                }
                private static bool _InstanceTypeCode_ComputeIsReadOnly(global::LightSwitchApplication.ActivityParty e)
                {
                    bool result = false;
                    e.InstanceTypeCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _InstanceTypeCode_Validate(global::LightSwitchApplication.ActivityParty e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.InstanceTypeCode_Validate(r);
                }
                private static global::System.Nullable<int> _InstanceTypeCode_GetImplementationValue(global::LightSwitchApplication.ActivityParty.DetailsClass d)
                {
                    return d.ImplementationEntity.InstanceTypeCode;
                }
                private static void _InstanceTypeCode_OnValueChanged(global::LightSwitchApplication.ActivityParty e)
                {
                    e.InstanceTypeCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ScheduledEnd = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ScheduledEnd",
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._ScheduledEnd_Stub,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._ScheduledEnd_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._ScheduledEnd_Validate,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._ScheduledEnd_GetImplementationValue,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._ScheduledEnd_SetImplementationValue,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._ScheduledEnd_OnValueChanged);
                private static void _ScheduledEnd_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityParty.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.ActivityParty.DetailsClass d, object sf)
                {
                    c(d, ref d._ScheduledEnd, sf);
                }
                private static bool _ScheduledEnd_ComputeIsReadOnly(global::LightSwitchApplication.ActivityParty e)
                {
                    bool result = false;
                    e.ScheduledEnd_IsReadOnly(ref result);
                    return result;
                }
                private static void _ScheduledEnd_Validate(global::LightSwitchApplication.ActivityParty e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ScheduledEnd_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ScheduledEnd_GetImplementationValue(global::LightSwitchApplication.ActivityParty.DetailsClass d)
                {
                    return d.ImplementationEntity.ScheduledEnd;
                }
                private static void _ScheduledEnd_SetImplementationValue(global::LightSwitchApplication.ActivityParty.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.ScheduledEnd = global::LightSwitchApplication.ActivityParty.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _ScheduledEnd_OnValueChanged(global::LightSwitchApplication.ActivityParty e)
                {
                    e.ScheduledEnd_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ScheduledStart = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ScheduledStart",
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._ScheduledStart_Stub,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._ScheduledStart_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._ScheduledStart_Validate,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._ScheduledStart_GetImplementationValue,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._ScheduledStart_SetImplementationValue,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._ScheduledStart_OnValueChanged);
                private static void _ScheduledStart_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityParty.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.ActivityParty.DetailsClass d, object sf)
                {
                    c(d, ref d._ScheduledStart, sf);
                }
                private static bool _ScheduledStart_ComputeIsReadOnly(global::LightSwitchApplication.ActivityParty e)
                {
                    bool result = false;
                    e.ScheduledStart_IsReadOnly(ref result);
                    return result;
                }
                private static void _ScheduledStart_Validate(global::LightSwitchApplication.ActivityParty e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ScheduledStart_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ScheduledStart_GetImplementationValue(global::LightSwitchApplication.ActivityParty.DetailsClass d)
                {
                    return d.ImplementationEntity.ScheduledStart;
                }
                private static void _ScheduledStart_SetImplementationValue(global::LightSwitchApplication.ActivityParty.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.ScheduledStart = global::LightSwitchApplication.ActivityParty.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _ScheduledStart_OnValueChanged(global::LightSwitchApplication.ActivityParty e)
                {
                    e.ScheduledStart_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<long>>.Entry
                    VersionNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<long>>.Entry(
                        "VersionNumber",
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._VersionNumber_Stub,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._VersionNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._VersionNumber_Validate,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._VersionNumber_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._VersionNumber_OnValueChanged);
                private static void _VersionNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityParty.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<long>>.Data> c, global::LightSwitchApplication.ActivityParty.DetailsClass d, object sf)
                {
                    c(d, ref d._VersionNumber, sf);
                }
                private static bool _VersionNumber_ComputeIsReadOnly(global::LightSwitchApplication.ActivityParty e)
                {
                    bool result = false;
                    e.VersionNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _VersionNumber_Validate(global::LightSwitchApplication.ActivityParty e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.VersionNumber_Validate(r);
                }
                private static global::System.Nullable<long> _VersionNumber_GetImplementationValue(global::LightSwitchApplication.ActivityParty.DetailsClass d)
                {
                    return d.ImplementationEntity.VersionNumber;
                }
                private static void _VersionNumber_OnValueChanged(global::LightSwitchApplication.ActivityParty e)
                {
                    e.VersionNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::LightSwitchApplication.Activity>.Entry
                    ActivityParty_Activity = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::LightSwitchApplication.Activity>.Entry(
                        "ActivityParty_Activity",
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._ActivityParty_Activity_Stub,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._ActivityParty_Activity_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._ActivityParty_Activity_Validate,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._ActivityParty_Activity_GetCoreImplementationValue,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._ActivityParty_Activity_GetImplementationValue,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._ActivityParty_Activity_SetImplementationValue,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._ActivityParty_Activity_Refresh,
                        global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties._ActivityParty_Activity_OnValueChanged);
                private static void _ActivityParty_Activity_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityParty.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::LightSwitchApplication.Activity>.Data> c, global::LightSwitchApplication.ActivityParty.DetailsClass d, object sf)
                {
                    c(d, ref d._ActivityParty_Activity, sf);
                }
                private static bool _ActivityParty_Activity_ComputeIsReadOnly(global::LightSwitchApplication.ActivityParty e)
                {
                    bool result = false;
                    e.ActivityParty_Activity_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActivityParty_Activity_Validate(global::LightSwitchApplication.ActivityParty e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActivityParty_Activity_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _ActivityParty_Activity_GetCoreImplementationValue(global::LightSwitchApplication.ActivityParty.DetailsClass d)
                {
                    return d.ImplementationEntity.ActivityParty_Activity;
                }
                private static global::LightSwitchApplication.Activity _ActivityParty_Activity_GetImplementationValue(global::LightSwitchApplication.ActivityParty.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass>(global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.ActivityParty_Activity, ref d._ActivityParty_Activity);
                }
                private static void _ActivityParty_Activity_SetImplementationValue(global::LightSwitchApplication.ActivityParty.DetailsClass d, global::LightSwitchApplication.Activity v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.ActivityParty_Activity, ref d._ActivityParty_Activity, (i, ev) => i.ActivityParty_Activity = ev, v);
                }
                private static void _ActivityParty_Activity_Refresh(global::LightSwitchApplication.ActivityParty.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.ActivityParty.DetailsClass.PropertySetProperties.ActivityParty_Activity, ref d._ActivityParty_Activity);
                }
                private static void _ActivityParty_Activity_OnValueChanged(global::LightSwitchApplication.ActivityParty e)
                {
                    e.ActivityParty_Activity_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, string>.Data _AddressUsed;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Guid>.Data _ActivityPartyId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<bool>>.Data _DoNotEMail;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<bool>>.Data _DoNotFax;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<bool>>.Data _DoNotPhone;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<bool>>.Data _DoNotPostalMail;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<double>>.Data _Effort;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, string>.Data _ExchangeEntryId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<bool>>.Data _IsPartyDeleted;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<int>>.Data _InstanceTypeCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ScheduledEnd;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ScheduledStart;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::System.Nullable<long>>.Data _VersionNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ActivityParty, global::LightSwitchApplication.ActivityParty.DetailsClass, global::LightSwitchApplication.Activity>.Data _ActivityParty_Activity;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
    public sealed partial class Attachment : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Attachment entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Attachment()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Attachment(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Attachment> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Attachment.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attachment_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attachment_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FileName
        {
            get
            {
                return global::LightSwitchApplication.Attachment.DetailsClass.GetValue(this, global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties.FileName);
            }
            set
            {
                global::LightSwitchApplication.Attachment.DetailsClass.SetValue(this, global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties.FileName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FileName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FileName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FileName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Guid AttachmentId
        {
            get
            {
                return global::LightSwitchApplication.Attachment.DetailsClass.GetValue(this, global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties.AttachmentId);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AttachmentId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AttachmentId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AttachmentId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Body
        {
            get
            {
                return global::LightSwitchApplication.Attachment.DetailsClass.GetValue(this, global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties.Body);
            }
            set
            {
                global::LightSwitchApplication.Attachment.DetailsClass.SetValue(this, global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties.Body, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Body_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Body_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Body_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Subject
        {
            get
            {
                return global::LightSwitchApplication.Attachment.DetailsClass.GetValue(this, global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties.Subject);
            }
            set
            {
                global::LightSwitchApplication.Attachment.DetailsClass.SetValue(this, global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties.Subject, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Subject_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Subject_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Subject_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> FileSize
        {
            get
            {
                return global::LightSwitchApplication.Attachment.DetailsClass.GetValue(this, global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties.FileSize);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FileSize_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FileSize_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FileSize_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string MimeType
        {
            get
            {
                return global::LightSwitchApplication.Attachment.DetailsClass.GetValue(this, global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties.MimeType);
            }
            set
            {
                global::LightSwitchApplication.Attachment.DetailsClass.SetValue(this, global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties.MimeType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MimeType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MimeType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MimeType_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<long> VersionNumber
        {
            get
            {
                return global::LightSwitchApplication.Attachment.DetailsClass.GetValue(this, global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties.VersionNumber);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionNumber_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Attachment,
                global::LightSwitchApplication.Attachment.DetailsClass,
                global::LightSwitchApplication.Attachment.DetailsClass.IImplementation,
                global::LightSwitchApplication.Attachment.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties.FileName;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass>.Entry
                __AttachmentEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass>.Entry(
                    global::LightSwitchApplication.Attachment.DetailsClass.__Attachment_CreateNew,
                    global::LightSwitchApplication.Attachment.DetailsClass.__Attachment_Created,
                    global::LightSwitchApplication.Attachment.DetailsClass.__Attachment_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Attachment __Attachment_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Attachment> es)
            {
                return new global::LightSwitchApplication.Attachment(es);
            }
            private static void __Attachment_Created(global::LightSwitchApplication.Attachment e)
            {
                e.Attachment_Created();
            }
            private static bool __Attachment_AllowSaveWithErrors(global::LightSwitchApplication.Attachment e)
            {
                bool result = false;
                e.Attachment_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Attachment.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, string> FileName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties.FileName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, global::System.Guid> AttachmentId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties.AttachmentId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, global::System.Guid>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, string> Body
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties.Body) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, string> Subject
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties.Subject) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, global::System.Nullable<int>> FileSize
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties.FileSize) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, string> MimeType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties.MimeType) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, global::System.Nullable<long>> VersionNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties.VersionNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, global::System.Nullable<long>>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new string FileName { get; set; }
                new global::System.Guid AttachmentId { get; }
                new string Body { get; set; }
                new string Subject { get; set; }
                new global::System.Nullable<int> FileSize { get; }
                new string MimeType { get; set; }
                new global::System.Nullable<long> VersionNumber { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, string>.Entry
                    FileName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, string>.Entry(
                        "FileName",
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._FileName_Stub,
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._FileName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._FileName_Validate,
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._FileName_GetImplementationValue,
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._FileName_SetImplementationValue,
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._FileName_OnValueChanged);
                private static void _FileName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Attachment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, string>.Data> c, global::LightSwitchApplication.Attachment.DetailsClass d, object sf)
                {
                    c(d, ref d._FileName, sf);
                }
                private static bool _FileName_ComputeIsReadOnly(global::LightSwitchApplication.Attachment e)
                {
                    bool result = false;
                    e.FileName_IsReadOnly(ref result);
                    return result;
                }
                private static void _FileName_Validate(global::LightSwitchApplication.Attachment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.FileName_Validate(r);
                }
                private static string _FileName_GetImplementationValue(global::LightSwitchApplication.Attachment.DetailsClass d)
                {
                    return d.ImplementationEntity.FileName;
                }
                private static void _FileName_SetImplementationValue(global::LightSwitchApplication.Attachment.DetailsClass d, string v)
                {
                    d.ImplementationEntity.FileName = v;
                }
                private static void _FileName_OnValueChanged(global::LightSwitchApplication.Attachment e)
                {
                    e.FileName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, global::System.Guid>.Entry
                    AttachmentId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, global::System.Guid>.Entry(
                        "AttachmentId",
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._AttachmentId_Stub,
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._AttachmentId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._AttachmentId_Validate,
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._AttachmentId_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._AttachmentId_OnValueChanged);
                private static void _AttachmentId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Attachment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, global::System.Guid>.Data> c, global::LightSwitchApplication.Attachment.DetailsClass d, object sf)
                {
                    c(d, ref d._AttachmentId, sf);
                }
                private static bool _AttachmentId_ComputeIsReadOnly(global::LightSwitchApplication.Attachment e)
                {
                    bool result = false;
                    e.AttachmentId_IsReadOnly(ref result);
                    return result;
                }
                private static void _AttachmentId_Validate(global::LightSwitchApplication.Attachment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AttachmentId_Validate(r);
                }
                private static global::System.Guid _AttachmentId_GetImplementationValue(global::LightSwitchApplication.Attachment.DetailsClass d)
                {
                    return d.ImplementationEntity.AttachmentId;
                }
                private static void _AttachmentId_OnValueChanged(global::LightSwitchApplication.Attachment e)
                {
                    e.AttachmentId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, string>.Entry
                    Body = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, string>.Entry(
                        "Body",
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._Body_Stub,
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._Body_ComputeIsReadOnly,
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._Body_Validate,
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._Body_GetImplementationValue,
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._Body_SetImplementationValue,
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._Body_OnValueChanged);
                private static void _Body_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Attachment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, string>.Data> c, global::LightSwitchApplication.Attachment.DetailsClass d, object sf)
                {
                    c(d, ref d._Body, sf);
                }
                private static bool _Body_ComputeIsReadOnly(global::LightSwitchApplication.Attachment e)
                {
                    bool result = false;
                    e.Body_IsReadOnly(ref result);
                    return result;
                }
                private static void _Body_Validate(global::LightSwitchApplication.Attachment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Body_Validate(r);
                }
                private static string _Body_GetImplementationValue(global::LightSwitchApplication.Attachment.DetailsClass d)
                {
                    return d.ImplementationEntity.Body;
                }
                private static void _Body_SetImplementationValue(global::LightSwitchApplication.Attachment.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Body = v;
                }
                private static void _Body_OnValueChanged(global::LightSwitchApplication.Attachment e)
                {
                    e.Body_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, string>.Entry
                    Subject = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, string>.Entry(
                        "Subject",
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._Subject_Stub,
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._Subject_ComputeIsReadOnly,
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._Subject_Validate,
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._Subject_GetImplementationValue,
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._Subject_SetImplementationValue,
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._Subject_OnValueChanged);
                private static void _Subject_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Attachment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, string>.Data> c, global::LightSwitchApplication.Attachment.DetailsClass d, object sf)
                {
                    c(d, ref d._Subject, sf);
                }
                private static bool _Subject_ComputeIsReadOnly(global::LightSwitchApplication.Attachment e)
                {
                    bool result = false;
                    e.Subject_IsReadOnly(ref result);
                    return result;
                }
                private static void _Subject_Validate(global::LightSwitchApplication.Attachment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Subject_Validate(r);
                }
                private static string _Subject_GetImplementationValue(global::LightSwitchApplication.Attachment.DetailsClass d)
                {
                    return d.ImplementationEntity.Subject;
                }
                private static void _Subject_SetImplementationValue(global::LightSwitchApplication.Attachment.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Subject = v;
                }
                private static void _Subject_OnValueChanged(global::LightSwitchApplication.Attachment e)
                {
                    e.Subject_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, global::System.Nullable<int>>.Entry
                    FileSize = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, global::System.Nullable<int>>.Entry(
                        "FileSize",
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._FileSize_Stub,
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._FileSize_ComputeIsReadOnly,
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._FileSize_Validate,
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._FileSize_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._FileSize_OnValueChanged);
                private static void _FileSize_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Attachment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Attachment.DetailsClass d, object sf)
                {
                    c(d, ref d._FileSize, sf);
                }
                private static bool _FileSize_ComputeIsReadOnly(global::LightSwitchApplication.Attachment e)
                {
                    bool result = false;
                    e.FileSize_IsReadOnly(ref result);
                    return result;
                }
                private static void _FileSize_Validate(global::LightSwitchApplication.Attachment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.FileSize_Validate(r);
                }
                private static global::System.Nullable<int> _FileSize_GetImplementationValue(global::LightSwitchApplication.Attachment.DetailsClass d)
                {
                    return d.ImplementationEntity.FileSize;
                }
                private static void _FileSize_OnValueChanged(global::LightSwitchApplication.Attachment e)
                {
                    e.FileSize_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, string>.Entry
                    MimeType = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, string>.Entry(
                        "MimeType",
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._MimeType_Stub,
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._MimeType_ComputeIsReadOnly,
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._MimeType_Validate,
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._MimeType_GetImplementationValue,
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._MimeType_SetImplementationValue,
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._MimeType_OnValueChanged);
                private static void _MimeType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Attachment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, string>.Data> c, global::LightSwitchApplication.Attachment.DetailsClass d, object sf)
                {
                    c(d, ref d._MimeType, sf);
                }
                private static bool _MimeType_ComputeIsReadOnly(global::LightSwitchApplication.Attachment e)
                {
                    bool result = false;
                    e.MimeType_IsReadOnly(ref result);
                    return result;
                }
                private static void _MimeType_Validate(global::LightSwitchApplication.Attachment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MimeType_Validate(r);
                }
                private static string _MimeType_GetImplementationValue(global::LightSwitchApplication.Attachment.DetailsClass d)
                {
                    return d.ImplementationEntity.MimeType;
                }
                private static void _MimeType_SetImplementationValue(global::LightSwitchApplication.Attachment.DetailsClass d, string v)
                {
                    d.ImplementationEntity.MimeType = v;
                }
                private static void _MimeType_OnValueChanged(global::LightSwitchApplication.Attachment e)
                {
                    e.MimeType_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, global::System.Nullable<long>>.Entry
                    VersionNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, global::System.Nullable<long>>.Entry(
                        "VersionNumber",
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._VersionNumber_Stub,
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._VersionNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._VersionNumber_Validate,
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._VersionNumber_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Attachment.DetailsClass.PropertySetProperties._VersionNumber_OnValueChanged);
                private static void _VersionNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Attachment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, global::System.Nullable<long>>.Data> c, global::LightSwitchApplication.Attachment.DetailsClass d, object sf)
                {
                    c(d, ref d._VersionNumber, sf);
                }
                private static bool _VersionNumber_ComputeIsReadOnly(global::LightSwitchApplication.Attachment e)
                {
                    bool result = false;
                    e.VersionNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _VersionNumber_Validate(global::LightSwitchApplication.Attachment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.VersionNumber_Validate(r);
                }
                private static global::System.Nullable<long> _VersionNumber_GetImplementationValue(global::LightSwitchApplication.Attachment.DetailsClass d)
                {
                    return d.ImplementationEntity.VersionNumber;
                }
                private static void _VersionNumber_OnValueChanged(global::LightSwitchApplication.Attachment e)
                {
                    e.VersionNumber_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, string>.Data _FileName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, global::System.Guid>.Data _AttachmentId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, string>.Data _Body;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, string>.Data _Subject;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, global::System.Nullable<int>>.Data _FileSize;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, string>.Data _MimeType;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Attachment, global::LightSwitchApplication.Attachment.DetailsClass, global::System.Nullable<long>>.Data _VersionNumber;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
    public sealed partial class CompetitorProduct : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.CompetitorProduct, global::LightSwitchApplication.CompetitorProduct.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the CompetitorProduct entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CompetitorProduct()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CompetitorProduct(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.CompetitorProduct> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.CompetitorProduct.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompetitorProduct_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompetitorProduct_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Guid CompetitorProductId
        {
            get
            {
                return global::LightSwitchApplication.CompetitorProduct.DetailsClass.GetValue(this, global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties.CompetitorProductId);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompetitorProductId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompetitorProductId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompetitorProductId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<long> VersionNumber
        {
            get
            {
                return global::LightSwitchApplication.CompetitorProduct.DetailsClass.GetValue(this, global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties.VersionNumber);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Product competitorproduct_association_product
        {
            get
            {
                return global::LightSwitchApplication.CompetitorProduct.DetailsClass.GetValue(this, global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties.competitorproduct_association_product);
            }
            set
            {
                global::LightSwitchApplication.CompetitorProduct.DetailsClass.SetValue(this, global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties.competitorproduct_association_product, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void competitorproduct_association_product_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void competitorproduct_association_product_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void competitorproduct_association_product_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Competitor competitorproduct_association_competitor
        {
            get
            {
                return global::LightSwitchApplication.CompetitorProduct.DetailsClass.GetValue(this, global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties.competitorproduct_association_competitor);
            }
            set
            {
                global::LightSwitchApplication.CompetitorProduct.DetailsClass.SetValue(this, global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties.competitorproduct_association_competitor, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void competitorproduct_association_competitor_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void competitorproduct_association_competitor_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void competitorproduct_association_competitor_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.CompetitorProduct,
                global::LightSwitchApplication.CompetitorProduct.DetailsClass,
                global::LightSwitchApplication.CompetitorProduct.DetailsClass.IImplementation,
                global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.CompetitorProduct, global::LightSwitchApplication.CompetitorProduct.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.CompetitorProduct, global::LightSwitchApplication.CompetitorProduct.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties.CompetitorProductId;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.CompetitorProduct, global::LightSwitchApplication.CompetitorProduct.DetailsClass>.Entry
                __CompetitorProductEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.CompetitorProduct, global::LightSwitchApplication.CompetitorProduct.DetailsClass>.Entry(
                    global::LightSwitchApplication.CompetitorProduct.DetailsClass.__CompetitorProduct_CreateNew,
                    global::LightSwitchApplication.CompetitorProduct.DetailsClass.__CompetitorProduct_Created,
                    global::LightSwitchApplication.CompetitorProduct.DetailsClass.__CompetitorProduct_AllowSaveWithErrors);
            private static global::LightSwitchApplication.CompetitorProduct __CompetitorProduct_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.CompetitorProduct> es)
            {
                return new global::LightSwitchApplication.CompetitorProduct(es);
            }
            private static void __CompetitorProduct_Created(global::LightSwitchApplication.CompetitorProduct e)
            {
                e.CompetitorProduct_Created();
            }
            private static bool __CompetitorProduct_AllowSaveWithErrors(global::LightSwitchApplication.CompetitorProduct e)
            {
                bool result = false;
                e.CompetitorProduct_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.CompetitorProduct, global::LightSwitchApplication.CompetitorProduct.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.CompetitorProduct, global::LightSwitchApplication.CompetitorProduct.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.CompetitorProduct, global::LightSwitchApplication.CompetitorProduct.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CompetitorProduct, global::LightSwitchApplication.CompetitorProduct.DetailsClass, global::System.Guid> CompetitorProductId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties.CompetitorProductId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CompetitorProduct, global::LightSwitchApplication.CompetitorProduct.DetailsClass, global::System.Guid>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CompetitorProduct, global::LightSwitchApplication.CompetitorProduct.DetailsClass, global::System.Nullable<long>> VersionNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties.VersionNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CompetitorProduct, global::LightSwitchApplication.CompetitorProduct.DetailsClass, global::System.Nullable<long>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.CompetitorProduct, global::LightSwitchApplication.CompetitorProduct.DetailsClass, global::LightSwitchApplication.Product> competitorproduct_association_product
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties.competitorproduct_association_product) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.CompetitorProduct, global::LightSwitchApplication.CompetitorProduct.DetailsClass, global::LightSwitchApplication.Product>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.CompetitorProduct, global::LightSwitchApplication.CompetitorProduct.DetailsClass, global::LightSwitchApplication.Competitor> competitorproduct_association_competitor
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties.competitorproduct_association_competitor) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.CompetitorProduct, global::LightSwitchApplication.CompetitorProduct.DetailsClass, global::LightSwitchApplication.Competitor>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new global::System.Guid CompetitorProductId { get; }
                new global::System.Nullable<long> VersionNumber { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation competitorproduct_association_product { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation competitorproduct_association_competitor { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CompetitorProduct, global::LightSwitchApplication.CompetitorProduct.DetailsClass, global::System.Guid>.Entry
                    CompetitorProductId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CompetitorProduct, global::LightSwitchApplication.CompetitorProduct.DetailsClass, global::System.Guid>.Entry(
                        "CompetitorProductId",
                        global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties._CompetitorProductId_Stub,
                        global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties._CompetitorProductId_ComputeIsReadOnly,
                        global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties._CompetitorProductId_Validate,
                        global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties._CompetitorProductId_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties._CompetitorProductId_OnValueChanged);
                private static void _CompetitorProductId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CompetitorProduct.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CompetitorProduct, global::LightSwitchApplication.CompetitorProduct.DetailsClass, global::System.Guid>.Data> c, global::LightSwitchApplication.CompetitorProduct.DetailsClass d, object sf)
                {
                    c(d, ref d._CompetitorProductId, sf);
                }
                private static bool _CompetitorProductId_ComputeIsReadOnly(global::LightSwitchApplication.CompetitorProduct e)
                {
                    bool result = false;
                    e.CompetitorProductId_IsReadOnly(ref result);
                    return result;
                }
                private static void _CompetitorProductId_Validate(global::LightSwitchApplication.CompetitorProduct e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CompetitorProductId_Validate(r);
                }
                private static global::System.Guid _CompetitorProductId_GetImplementationValue(global::LightSwitchApplication.CompetitorProduct.DetailsClass d)
                {
                    return d.ImplementationEntity.CompetitorProductId;
                }
                private static void _CompetitorProductId_OnValueChanged(global::LightSwitchApplication.CompetitorProduct e)
                {
                    e.CompetitorProductId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CompetitorProduct, global::LightSwitchApplication.CompetitorProduct.DetailsClass, global::System.Nullable<long>>.Entry
                    VersionNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CompetitorProduct, global::LightSwitchApplication.CompetitorProduct.DetailsClass, global::System.Nullable<long>>.Entry(
                        "VersionNumber",
                        global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties._VersionNumber_Stub,
                        global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties._VersionNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties._VersionNumber_Validate,
                        global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties._VersionNumber_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties._VersionNumber_OnValueChanged);
                private static void _VersionNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CompetitorProduct.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CompetitorProduct, global::LightSwitchApplication.CompetitorProduct.DetailsClass, global::System.Nullable<long>>.Data> c, global::LightSwitchApplication.CompetitorProduct.DetailsClass d, object sf)
                {
                    c(d, ref d._VersionNumber, sf);
                }
                private static bool _VersionNumber_ComputeIsReadOnly(global::LightSwitchApplication.CompetitorProduct e)
                {
                    bool result = false;
                    e.VersionNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _VersionNumber_Validate(global::LightSwitchApplication.CompetitorProduct e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.VersionNumber_Validate(r);
                }
                private static global::System.Nullable<long> _VersionNumber_GetImplementationValue(global::LightSwitchApplication.CompetitorProduct.DetailsClass d)
                {
                    return d.ImplementationEntity.VersionNumber;
                }
                private static void _VersionNumber_OnValueChanged(global::LightSwitchApplication.CompetitorProduct e)
                {
                    e.VersionNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.CompetitorProduct, global::LightSwitchApplication.CompetitorProduct.DetailsClass, global::LightSwitchApplication.Product>.Entry
                    competitorproduct_association_product = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.CompetitorProduct, global::LightSwitchApplication.CompetitorProduct.DetailsClass, global::LightSwitchApplication.Product>.Entry(
                        "competitorproduct_association_product",
                        global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties._competitorproduct_association_product_Stub,
                        global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties._competitorproduct_association_product_ComputeIsReadOnly,
                        global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties._competitorproduct_association_product_Validate,
                        global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties._competitorproduct_association_product_GetCoreImplementationValue,
                        global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties._competitorproduct_association_product_GetImplementationValue,
                        global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties._competitorproduct_association_product_SetImplementationValue,
                        global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties._competitorproduct_association_product_Refresh,
                        global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties._competitorproduct_association_product_OnValueChanged);
                private static void _competitorproduct_association_product_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CompetitorProduct.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.CompetitorProduct, global::LightSwitchApplication.CompetitorProduct.DetailsClass, global::LightSwitchApplication.Product>.Data> c, global::LightSwitchApplication.CompetitorProduct.DetailsClass d, object sf)
                {
                    c(d, ref d._competitorproduct_association_product, sf);
                }
                private static bool _competitorproduct_association_product_ComputeIsReadOnly(global::LightSwitchApplication.CompetitorProduct e)
                {
                    bool result = false;
                    e.competitorproduct_association_product_IsReadOnly(ref result);
                    return result;
                }
                private static void _competitorproduct_association_product_Validate(global::LightSwitchApplication.CompetitorProduct e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.competitorproduct_association_product_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _competitorproduct_association_product_GetCoreImplementationValue(global::LightSwitchApplication.CompetitorProduct.DetailsClass d)
                {
                    return d.ImplementationEntity.competitorproduct_association_product;
                }
                private static global::LightSwitchApplication.Product _competitorproduct_association_product_GetImplementationValue(global::LightSwitchApplication.CompetitorProduct.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass>(global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties.competitorproduct_association_product, ref d._competitorproduct_association_product);
                }
                private static void _competitorproduct_association_product_SetImplementationValue(global::LightSwitchApplication.CompetitorProduct.DetailsClass d, global::LightSwitchApplication.Product v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties.competitorproduct_association_product, ref d._competitorproduct_association_product, (i, ev) => i.competitorproduct_association_product = ev, v);
                }
                private static void _competitorproduct_association_product_Refresh(global::LightSwitchApplication.CompetitorProduct.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties.competitorproduct_association_product, ref d._competitorproduct_association_product);
                }
                private static void _competitorproduct_association_product_OnValueChanged(global::LightSwitchApplication.CompetitorProduct e)
                {
                    e.competitorproduct_association_product_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.CompetitorProduct, global::LightSwitchApplication.CompetitorProduct.DetailsClass, global::LightSwitchApplication.Competitor>.Entry
                    competitorproduct_association_competitor = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.CompetitorProduct, global::LightSwitchApplication.CompetitorProduct.DetailsClass, global::LightSwitchApplication.Competitor>.Entry(
                        "competitorproduct_association_competitor",
                        global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties._competitorproduct_association_competitor_Stub,
                        global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties._competitorproduct_association_competitor_ComputeIsReadOnly,
                        global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties._competitorproduct_association_competitor_Validate,
                        global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties._competitorproduct_association_competitor_GetCoreImplementationValue,
                        global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties._competitorproduct_association_competitor_GetImplementationValue,
                        global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties._competitorproduct_association_competitor_SetImplementationValue,
                        global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties._competitorproduct_association_competitor_Refresh,
                        global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties._competitorproduct_association_competitor_OnValueChanged);
                private static void _competitorproduct_association_competitor_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CompetitorProduct.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.CompetitorProduct, global::LightSwitchApplication.CompetitorProduct.DetailsClass, global::LightSwitchApplication.Competitor>.Data> c, global::LightSwitchApplication.CompetitorProduct.DetailsClass d, object sf)
                {
                    c(d, ref d._competitorproduct_association_competitor, sf);
                }
                private static bool _competitorproduct_association_competitor_ComputeIsReadOnly(global::LightSwitchApplication.CompetitorProduct e)
                {
                    bool result = false;
                    e.competitorproduct_association_competitor_IsReadOnly(ref result);
                    return result;
                }
                private static void _competitorproduct_association_competitor_Validate(global::LightSwitchApplication.CompetitorProduct e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.competitorproduct_association_competitor_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _competitorproduct_association_competitor_GetCoreImplementationValue(global::LightSwitchApplication.CompetitorProduct.DetailsClass d)
                {
                    return d.ImplementationEntity.competitorproduct_association_competitor;
                }
                private static global::LightSwitchApplication.Competitor _competitorproduct_association_competitor_GetImplementationValue(global::LightSwitchApplication.CompetitorProduct.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass>(global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties.competitorproduct_association_competitor, ref d._competitorproduct_association_competitor);
                }
                private static void _competitorproduct_association_competitor_SetImplementationValue(global::LightSwitchApplication.CompetitorProduct.DetailsClass d, global::LightSwitchApplication.Competitor v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties.competitorproduct_association_competitor, ref d._competitorproduct_association_competitor, (i, ev) => i.competitorproduct_association_competitor = ev, v);
                }
                private static void _competitorproduct_association_competitor_Refresh(global::LightSwitchApplication.CompetitorProduct.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.CompetitorProduct.DetailsClass.PropertySetProperties.competitorproduct_association_competitor, ref d._competitorproduct_association_competitor);
                }
                private static void _competitorproduct_association_competitor_OnValueChanged(global::LightSwitchApplication.CompetitorProduct e)
                {
                    e.competitorproduct_association_competitor_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CompetitorProduct, global::LightSwitchApplication.CompetitorProduct.DetailsClass, global::System.Guid>.Data _CompetitorProductId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CompetitorProduct, global::LightSwitchApplication.CompetitorProduct.DetailsClass, global::System.Nullable<long>>.Data _VersionNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.CompetitorProduct, global::LightSwitchApplication.CompetitorProduct.DetailsClass, global::LightSwitchApplication.Product>.Data _competitorproduct_association_product;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.CompetitorProduct, global::LightSwitchApplication.CompetitorProduct.DetailsClass, global::LightSwitchApplication.Competitor>.Data _competitorproduct_association_competitor;
            
        }
    
        #endregion
    }
    
    #endregion
}
