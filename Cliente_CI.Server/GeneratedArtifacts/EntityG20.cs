

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
    public sealed partial class Workflow : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Workflow entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Workflow()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Workflow(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Workflow> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Workflow.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Workflow_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Workflow_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.Name);
            }
            set
            {
                global::LightSwitchApplication.Workflow.DetailsClass.SetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Guid WorkflowId
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.WorkflowId);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkflowId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkflowId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkflowId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> OnDemand
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.OnDemand);
            }
            set
            {
                global::LightSwitchApplication.Workflow.DetailsClass.SetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.OnDemand, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OnDemand_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OnDemand_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OnDemand_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> PluginTypeId
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.PluginTypeId);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PluginTypeId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PluginTypeId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PluginTypeId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.CreatedOn);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> Type
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.Type);
            }
            set
            {
                global::LightSwitchApplication.Workflow.DetailsClass.SetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.Type, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PrimaryEntity
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.PrimaryEntity);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PrimaryEntity_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PrimaryEntity_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PrimaryEntity_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> OwnerId
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.OwnerId);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OwnerId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OwnerId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OwnerId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.ModifiedOn);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> AsyncAutoDelete
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.AsyncAutoDelete);
            }
            set
            {
                global::LightSwitchApplication.Workflow.DetailsClass.SetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.AsyncAutoDelete, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AsyncAutoDelete_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AsyncAutoDelete_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AsyncAutoDelete_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> IsCrmUIWorkflow
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.IsCrmUIWorkflow);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsCrmUIWorkflow_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsCrmUIWorkflow_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsCrmUIWorkflow_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> Subprocess
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.Subprocess);
            }
            set
            {
                global::LightSwitchApplication.Workflow.DetailsClass.SetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.Subprocess, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Subprocess_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Subprocess_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Subprocess_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> Scope
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.Scope);
            }
            set
            {
                global::LightSwitchApplication.Workflow.DetailsClass.SetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.Scope, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Scope_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Scope_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Scope_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> StatusCode
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.StatusCode);
            }
            set
            {
                global::LightSwitchApplication.Workflow.DetailsClass.SetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.StatusCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.ModifiedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Description
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.Description);
            }
            set
            {
                global::LightSwitchApplication.Workflow.DetailsClass.SetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.Description, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.CreatedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> OwningBusinessUnit
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.OwningBusinessUnit);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OwningBusinessUnit_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OwningBusinessUnit_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OwningBusinessUnit_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> StateCode
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.StateCode);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StateCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StateCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StateCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> OwningUser
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.OwningUser);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OwningUser_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OwningUser_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OwningUser_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Guid WorkflowIdUnique
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.WorkflowIdUnique);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkflowIdUnique_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkflowIdUnique_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkflowIdUnique_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Guid SupportingSolutionId
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.SupportingSolutionId);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupportingSolutionId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupportingSolutionId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupportingSolutionId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Guid SolutionId
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.SolutionId);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SolutionId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SolutionId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SolutionId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> OverwriteTime
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.OverwriteTime);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OverwriteTime_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OverwriteTime_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OverwriteTime_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ComponentState
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.ComponentState);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ComponentState_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ComponentState_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ComponentState_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> CreatedOnBehalfBy
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.CreatedOnBehalfBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOnBehalfBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOnBehalfBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOnBehalfBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> ModifiedOnBehalfBy
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.ModifiedOnBehalfBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedOnBehalfBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedOnBehalfBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedOnBehalfBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Xaml
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.Xaml);
            }
            set
            {
                global::LightSwitchApplication.Workflow.DetailsClass.SetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.Xaml, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Xaml_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Xaml_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Xaml_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> TriggerOnDelete
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.TriggerOnDelete);
            }
            set
            {
                global::LightSwitchApplication.Workflow.DetailsClass.SetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.TriggerOnDelete, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TriggerOnDelete_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TriggerOnDelete_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TriggerOnDelete_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> TriggerOnCreate
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.TriggerOnCreate);
            }
            set
            {
                global::LightSwitchApplication.Workflow.DetailsClass.SetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.TriggerOnCreate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TriggerOnCreate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TriggerOnCreate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TriggerOnCreate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TriggerOnUpdateAttributeList
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.TriggerOnUpdateAttributeList);
            }
            set
            {
                global::LightSwitchApplication.Workflow.DetailsClass.SetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.TriggerOnUpdateAttributeList, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TriggerOnUpdateAttributeList_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TriggerOnUpdateAttributeList_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TriggerOnUpdateAttributeList_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> Category
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.Category);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Category_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Category_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Category_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> LanguageCode
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.LanguageCode);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LanguageCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LanguageCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LanguageCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> IsManaged
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.IsManaged);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsManaged_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsManaged_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsManaged_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool IsCustomizable
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.IsCustomizable);
            }
            set
            {
                global::LightSwitchApplication.Workflow.DetailsClass.SetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.IsCustomizable, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsCustomizable_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsCustomizable_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsCustomizable_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string InputParameters
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.InputParameters);
            }
            set
            {
                global::LightSwitchApplication.Workflow.DetailsClass.SetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.InputParameters, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InputParameters_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InputParameters_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InputParameters_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Workflow workflow_active_workflow
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.workflow_active_workflow);
            }
            set
            {
                global::LightSwitchApplication.Workflow.DetailsClass.SetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.workflow_active_workflow, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void workflow_active_workflow_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void workflow_active_workflow_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void workflow_active_workflow_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Workflow> workflow_active_workflows
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.workflow_active_workflows);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Workflow> workflow_active_workflowsQuery
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetQuery(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.workflow_active_workflows);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Team team_workflow
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.team_workflow);
            }
            set
            {
                global::LightSwitchApplication.Workflow.DetailsClass.SetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.team_workflow, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void team_workflow_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void team_workflow_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void team_workflow_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Workflow workflow_parent_workflow
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.workflow_parent_workflow);
            }
            set
            {
                global::LightSwitchApplication.Workflow.DetailsClass.SetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.workflow_parent_workflow, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void workflow_parent_workflow_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void workflow_parent_workflow_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void workflow_parent_workflow_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Workflow> workflow_parent_workflows
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.workflow_parent_workflows);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Workflow> workflow_parent_workflowsQuery
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetQuery(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.workflow_parent_workflows);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.WorkflowDependency> Workflow_dependencies
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetValue(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.Workflow_dependencies);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.WorkflowDependency> Workflow_dependenciesQuery
        {
            get
            {
                return global::LightSwitchApplication.Workflow.DetailsClass.GetQuery(this, global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.Workflow_dependencies);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Workflow,
                global::LightSwitchApplication.Workflow.DetailsClass,
                global::LightSwitchApplication.Workflow.DetailsClass.IImplementation,
                global::LightSwitchApplication.Workflow.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.Name;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass>.Entry
                __WorkflowEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass>.Entry(
                    global::LightSwitchApplication.Workflow.DetailsClass.__Workflow_CreateNew,
                    global::LightSwitchApplication.Workflow.DetailsClass.__Workflow_Created,
                    global::LightSwitchApplication.Workflow.DetailsClass.__Workflow_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Workflow __Workflow_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Workflow> es)
            {
                return new global::LightSwitchApplication.Workflow(es);
            }
            private static void __Workflow_Created(global::LightSwitchApplication.Workflow e)
            {
                e.Workflow_Created();
            }
            private static bool __Workflow_AllowSaveWithErrors(global::LightSwitchApplication.Workflow e)
            {
                bool result = false;
                e.Workflow_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Workflow.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, string> Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Guid> WorkflowId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.WorkflowId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Guid>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>> OnDemand
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.OnDemand) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>> PluginTypeId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.PluginTypeId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.DateTime>> CreatedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.CreatedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>> Type
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.Type) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, string> PrimaryEntity
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.PrimaryEntity) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>> OwnerId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.OwnerId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.DateTime>> ModifiedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.ModifiedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>> AsyncAutoDelete
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.AsyncAutoDelete) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>> IsCrmUIWorkflow
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.IsCrmUIWorkflow) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>> Subprocess
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.Subprocess) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>> Scope
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.Scope) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>> StatusCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.StatusCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>> ModifiedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.ModifiedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, string> Description
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.Description) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>> CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>> OwningBusinessUnit
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.OwningBusinessUnit) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>> StateCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.StateCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>> OwningUser
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.OwningUser) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Guid> WorkflowIdUnique
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.WorkflowIdUnique) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Guid>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Guid> SupportingSolutionId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.SupportingSolutionId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Guid>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Guid> SolutionId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.SolutionId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Guid>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.DateTime>> OverwriteTime
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.OverwriteTime) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>> ComponentState
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.ComponentState) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>> CreatedOnBehalfBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.CreatedOnBehalfBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>> ModifiedOnBehalfBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.ModifiedOnBehalfBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, string> Xaml
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.Xaml) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>> TriggerOnDelete
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.TriggerOnDelete) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>> TriggerOnCreate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.TriggerOnCreate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, string> TriggerOnUpdateAttributeList
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.TriggerOnUpdateAttributeList) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>> Category
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.Category) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>> LanguageCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.LanguageCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>> IsManaged
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.IsManaged) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, bool> IsCustomizable
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.IsCustomizable) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, string> InputParameters
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.InputParameters) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::LightSwitchApplication.Workflow> workflow_active_workflow
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.workflow_active_workflow) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::LightSwitchApplication.Workflow>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::LightSwitchApplication.Workflow> workflow_active_workflows
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.workflow_active_workflows) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::LightSwitchApplication.Workflow>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::LightSwitchApplication.Team> team_workflow
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.team_workflow) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::LightSwitchApplication.Team>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::LightSwitchApplication.Workflow> workflow_parent_workflow
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.workflow_parent_workflow) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::LightSwitchApplication.Workflow>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::LightSwitchApplication.Workflow> workflow_parent_workflows
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.workflow_parent_workflows) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::LightSwitchApplication.Workflow>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::LightSwitchApplication.WorkflowDependency> Workflow_dependencies
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.Workflow_dependencies) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::LightSwitchApplication.WorkflowDependency>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new string Name { get; set; }
                new global::System.Guid WorkflowId { get; }
                new global::System.Nullable<bool> OnDemand { get; set; }
                new global::System.Nullable<global::System.Guid> PluginTypeId { get; }
                new global::System.Nullable<global::System.DateTime> CreatedOn { get; }
                new global::System.Nullable<int> Type { get; set; }
                new string PrimaryEntity { get; }
                new global::System.Nullable<global::System.Guid> OwnerId { get; }
                new global::System.Nullable<global::System.DateTime> ModifiedOn { get; }
                new global::System.Nullable<bool> AsyncAutoDelete { get; set; }
                new global::System.Nullable<bool> IsCrmUIWorkflow { get; }
                new global::System.Nullable<bool> Subprocess { get; set; }
                new global::System.Nullable<int> Scope { get; set; }
                new global::System.Nullable<int> StatusCode { get; set; }
                new global::System.Nullable<global::System.Guid> ModifiedBy { get; }
                new string Description { get; set; }
                new global::System.Nullable<global::System.Guid> CreatedBy { get; }
                new global::System.Nullable<global::System.Guid> OwningBusinessUnit { get; }
                new global::System.Nullable<int> StateCode { get; }
                new global::System.Nullable<global::System.Guid> OwningUser { get; }
                new global::System.Guid WorkflowIdUnique { get; }
                new global::System.Guid SupportingSolutionId { get; }
                new global::System.Guid SolutionId { get; }
                new global::System.Nullable<global::System.DateTime> OverwriteTime { get; }
                new global::System.Nullable<int> ComponentState { get; }
                new global::System.Nullable<global::System.Guid> CreatedOnBehalfBy { get; }
                new global::System.Nullable<global::System.Guid> ModifiedOnBehalfBy { get; }
                new string Xaml { get; set; }
                new global::System.Nullable<bool> TriggerOnDelete { get; set; }
                new global::System.Nullable<bool> TriggerOnCreate { get; set; }
                new string TriggerOnUpdateAttributeList { get; set; }
                new global::System.Nullable<int> Category { get; }
                new global::System.Nullable<int> LanguageCode { get; }
                new global::System.Nullable<bool> IsManaged { get; }
                new bool IsCustomizable { get; set; }
                new string InputParameters { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation workflow_active_workflow { get; set; }
                new global::System.Collections.IEnumerable workflow_active_workflows { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation team_workflow { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation workflow_parent_workflow { get; set; }
                new global::System.Collections.IEnumerable workflow_parent_workflows { get; }
                new global::System.Collections.IEnumerable Workflow_dependencies { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, string>.Entry
                    Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, string>.Entry(
                        "Name",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Name_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Name_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Name_GetImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Name_SetImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Name_OnValueChanged);
                private static void _Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, string>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._Name, sf);
                }
                private static bool _Name_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Name_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Name_Validate(r);
                }
                private static string _Name_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.Name;
                }
                private static void _Name_SetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Name = v;
                }
                private static void _Name_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Guid>.Entry
                    WorkflowId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Guid>.Entry(
                        "WorkflowId",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._WorkflowId_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._WorkflowId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._WorkflowId_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._WorkflowId_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._WorkflowId_OnValueChanged);
                private static void _WorkflowId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Guid>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._WorkflowId, sf);
                }
                private static bool _WorkflowId_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.WorkflowId_IsReadOnly(ref result);
                    return result;
                }
                private static void _WorkflowId_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.WorkflowId_Validate(r);
                }
                private static global::System.Guid _WorkflowId_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.WorkflowId;
                }
                private static void _WorkflowId_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.WorkflowId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>>.Entry
                    OnDemand = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "OnDemand",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._OnDemand_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._OnDemand_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._OnDemand_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._OnDemand_GetImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._OnDemand_SetImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._OnDemand_OnValueChanged);
                private static void _OnDemand_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._OnDemand, sf);
                }
                private static bool _OnDemand_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.OnDemand_IsReadOnly(ref result);
                    return result;
                }
                private static void _OnDemand_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OnDemand_Validate(r);
                }
                private static global::System.Nullable<bool> _OnDemand_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.OnDemand;
                }
                private static void _OnDemand_SetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.OnDemand = v;
                }
                private static void _OnDemand_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.OnDemand_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    PluginTypeId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "PluginTypeId",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._PluginTypeId_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._PluginTypeId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._PluginTypeId_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._PluginTypeId_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._PluginTypeId_OnValueChanged);
                private static void _PluginTypeId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._PluginTypeId, sf);
                }
                private static bool _PluginTypeId_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.PluginTypeId_IsReadOnly(ref result);
                    return result;
                }
                private static void _PluginTypeId_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PluginTypeId_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _PluginTypeId_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.PluginTypeId;
                }
                private static void _PluginTypeId_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.PluginTypeId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    CreatedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "CreatedOn",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._CreatedOn_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._CreatedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._CreatedOn_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._CreatedOn_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._CreatedOn_OnValueChanged);
                private static void _CreatedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedOn, sf);
                }
                private static bool _CreatedOn_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.CreatedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedOn_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedOn_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _CreatedOn_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedOn;
                }
                private static void _CreatedOn_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.CreatedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>>.Entry
                    Type = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>>.Entry(
                        "Type",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Type_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Type_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Type_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Type_GetImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Type_SetImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Type_OnValueChanged);
                private static void _Type_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._Type, sf);
                }
                private static bool _Type_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.Type_IsReadOnly(ref result);
                    return result;
                }
                private static void _Type_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Type_Validate(r);
                }
                private static global::System.Nullable<int> _Type_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.Type;
                }
                private static void _Type_SetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.Type = v;
                }
                private static void _Type_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.Type_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, string>.Entry
                    PrimaryEntity = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, string>.Entry(
                        "PrimaryEntity",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._PrimaryEntity_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._PrimaryEntity_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._PrimaryEntity_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._PrimaryEntity_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._PrimaryEntity_OnValueChanged);
                private static void _PrimaryEntity_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, string>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._PrimaryEntity, sf);
                }
                private static bool _PrimaryEntity_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.PrimaryEntity_IsReadOnly(ref result);
                    return result;
                }
                private static void _PrimaryEntity_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PrimaryEntity_Validate(r);
                }
                private static string _PrimaryEntity_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.PrimaryEntity;
                }
                private static void _PrimaryEntity_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.PrimaryEntity_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    OwnerId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "OwnerId",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._OwnerId_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._OwnerId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._OwnerId_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._OwnerId_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._OwnerId_OnValueChanged);
                private static void _OwnerId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._OwnerId, sf);
                }
                private static bool _OwnerId_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.OwnerId_IsReadOnly(ref result);
                    return result;
                }
                private static void _OwnerId_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OwnerId_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _OwnerId_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.OwnerId;
                }
                private static void _OwnerId_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.OwnerId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ModifiedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ModifiedOn",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._ModifiedOn_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._ModifiedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._ModifiedOn_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._ModifiedOn_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._ModifiedOn_OnValueChanged);
                private static void _ModifiedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedOn, sf);
                }
                private static bool _ModifiedOn_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.ModifiedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedOn_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedOn_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ModifiedOn_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedOn;
                }
                private static void _ModifiedOn_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.ModifiedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>>.Entry
                    AsyncAutoDelete = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "AsyncAutoDelete",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._AsyncAutoDelete_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._AsyncAutoDelete_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._AsyncAutoDelete_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._AsyncAutoDelete_GetImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._AsyncAutoDelete_SetImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._AsyncAutoDelete_OnValueChanged);
                private static void _AsyncAutoDelete_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._AsyncAutoDelete, sf);
                }
                private static bool _AsyncAutoDelete_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.AsyncAutoDelete_IsReadOnly(ref result);
                    return result;
                }
                private static void _AsyncAutoDelete_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AsyncAutoDelete_Validate(r);
                }
                private static global::System.Nullable<bool> _AsyncAutoDelete_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.AsyncAutoDelete;
                }
                private static void _AsyncAutoDelete_SetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.AsyncAutoDelete = v;
                }
                private static void _AsyncAutoDelete_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.AsyncAutoDelete_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>>.Entry
                    IsCrmUIWorkflow = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "IsCrmUIWorkflow",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._IsCrmUIWorkflow_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._IsCrmUIWorkflow_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._IsCrmUIWorkflow_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._IsCrmUIWorkflow_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._IsCrmUIWorkflow_OnValueChanged);
                private static void _IsCrmUIWorkflow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._IsCrmUIWorkflow, sf);
                }
                private static bool _IsCrmUIWorkflow_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.IsCrmUIWorkflow_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsCrmUIWorkflow_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsCrmUIWorkflow_Validate(r);
                }
                private static global::System.Nullable<bool> _IsCrmUIWorkflow_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.IsCrmUIWorkflow;
                }
                private static void _IsCrmUIWorkflow_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.IsCrmUIWorkflow_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>>.Entry
                    Subprocess = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "Subprocess",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Subprocess_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Subprocess_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Subprocess_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Subprocess_GetImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Subprocess_SetImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Subprocess_OnValueChanged);
                private static void _Subprocess_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._Subprocess, sf);
                }
                private static bool _Subprocess_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.Subprocess_IsReadOnly(ref result);
                    return result;
                }
                private static void _Subprocess_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Subprocess_Validate(r);
                }
                private static global::System.Nullable<bool> _Subprocess_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.Subprocess;
                }
                private static void _Subprocess_SetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.Subprocess = v;
                }
                private static void _Subprocess_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.Subprocess_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>>.Entry
                    Scope = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>>.Entry(
                        "Scope",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Scope_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Scope_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Scope_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Scope_GetImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Scope_SetImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Scope_OnValueChanged);
                private static void _Scope_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._Scope, sf);
                }
                private static bool _Scope_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.Scope_IsReadOnly(ref result);
                    return result;
                }
                private static void _Scope_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Scope_Validate(r);
                }
                private static global::System.Nullable<int> _Scope_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.Scope;
                }
                private static void _Scope_SetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.Scope = v;
                }
                private static void _Scope_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.Scope_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>>.Entry
                    StatusCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>>.Entry(
                        "StatusCode",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._StatusCode_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._StatusCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._StatusCode_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._StatusCode_GetImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._StatusCode_SetImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._StatusCode_OnValueChanged);
                private static void _StatusCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._StatusCode, sf);
                }
                private static bool _StatusCode_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.StatusCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _StatusCode_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.StatusCode_Validate(r);
                }
                private static global::System.Nullable<int> _StatusCode_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.StatusCode;
                }
                private static void _StatusCode_SetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.StatusCode = v;
                }
                private static void _StatusCode_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.StatusCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    ModifiedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "ModifiedBy",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._ModifiedBy_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._ModifiedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._ModifiedBy_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._ModifiedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._ModifiedBy_OnValueChanged);
                private static void _ModifiedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedBy, sf);
                }
                private static bool _ModifiedBy_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.ModifiedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedBy_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedBy_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _ModifiedBy_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedBy;
                }
                private static void _ModifiedBy_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.ModifiedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, string>.Entry
                    Description = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, string>.Entry(
                        "Description",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Description_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Description_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Description_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Description_GetImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Description_SetImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Description_OnValueChanged);
                private static void _Description_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, string>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._Description, sf);
                }
                private static bool _Description_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.Description_IsReadOnly(ref result);
                    return result;
                }
                private static void _Description_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Description_Validate(r);
                }
                private static string _Description_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.Description;
                }
                private static void _Description_SetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Description = v;
                }
                private static void _Description_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.Description_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "CreatedBy",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._CreatedBy_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._CreatedBy_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._CreatedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._CreatedBy_OnValueChanged);
                private static void _CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedBy, sf);
                }
                private static bool _CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedBy_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedBy_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _CreatedBy_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedBy;
                }
                private static void _CreatedBy_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    OwningBusinessUnit = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "OwningBusinessUnit",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._OwningBusinessUnit_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._OwningBusinessUnit_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._OwningBusinessUnit_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._OwningBusinessUnit_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._OwningBusinessUnit_OnValueChanged);
                private static void _OwningBusinessUnit_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._OwningBusinessUnit, sf);
                }
                private static bool _OwningBusinessUnit_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.OwningBusinessUnit_IsReadOnly(ref result);
                    return result;
                }
                private static void _OwningBusinessUnit_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OwningBusinessUnit_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _OwningBusinessUnit_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.OwningBusinessUnit;
                }
                private static void _OwningBusinessUnit_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.OwningBusinessUnit_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>>.Entry
                    StateCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>>.Entry(
                        "StateCode",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._StateCode_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._StateCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._StateCode_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._StateCode_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._StateCode_OnValueChanged);
                private static void _StateCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._StateCode, sf);
                }
                private static bool _StateCode_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.StateCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _StateCode_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.StateCode_Validate(r);
                }
                private static global::System.Nullable<int> _StateCode_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.StateCode;
                }
                private static void _StateCode_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.StateCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    OwningUser = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "OwningUser",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._OwningUser_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._OwningUser_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._OwningUser_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._OwningUser_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._OwningUser_OnValueChanged);
                private static void _OwningUser_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._OwningUser, sf);
                }
                private static bool _OwningUser_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.OwningUser_IsReadOnly(ref result);
                    return result;
                }
                private static void _OwningUser_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OwningUser_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _OwningUser_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.OwningUser;
                }
                private static void _OwningUser_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.OwningUser_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Guid>.Entry
                    WorkflowIdUnique = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Guid>.Entry(
                        "WorkflowIdUnique",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._WorkflowIdUnique_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._WorkflowIdUnique_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._WorkflowIdUnique_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._WorkflowIdUnique_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._WorkflowIdUnique_OnValueChanged);
                private static void _WorkflowIdUnique_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Guid>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._WorkflowIdUnique, sf);
                }
                private static bool _WorkflowIdUnique_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.WorkflowIdUnique_IsReadOnly(ref result);
                    return result;
                }
                private static void _WorkflowIdUnique_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.WorkflowIdUnique_Validate(r);
                }
                private static global::System.Guid _WorkflowIdUnique_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.WorkflowIdUnique;
                }
                private static void _WorkflowIdUnique_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.WorkflowIdUnique_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Guid>.Entry
                    SupportingSolutionId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Guid>.Entry(
                        "SupportingSolutionId",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._SupportingSolutionId_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._SupportingSolutionId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._SupportingSolutionId_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._SupportingSolutionId_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._SupportingSolutionId_OnValueChanged);
                private static void _SupportingSolutionId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Guid>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._SupportingSolutionId, sf);
                }
                private static bool _SupportingSolutionId_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.SupportingSolutionId_IsReadOnly(ref result);
                    return result;
                }
                private static void _SupportingSolutionId_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SupportingSolutionId_Validate(r);
                }
                private static global::System.Guid _SupportingSolutionId_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.SupportingSolutionId;
                }
                private static void _SupportingSolutionId_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.SupportingSolutionId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Guid>.Entry
                    SolutionId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Guid>.Entry(
                        "SolutionId",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._SolutionId_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._SolutionId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._SolutionId_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._SolutionId_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._SolutionId_OnValueChanged);
                private static void _SolutionId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Guid>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._SolutionId, sf);
                }
                private static bool _SolutionId_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.SolutionId_IsReadOnly(ref result);
                    return result;
                }
                private static void _SolutionId_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SolutionId_Validate(r);
                }
                private static global::System.Guid _SolutionId_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.SolutionId;
                }
                private static void _SolutionId_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.SolutionId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    OverwriteTime = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "OverwriteTime",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._OverwriteTime_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._OverwriteTime_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._OverwriteTime_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._OverwriteTime_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._OverwriteTime_OnValueChanged);
                private static void _OverwriteTime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._OverwriteTime, sf);
                }
                private static bool _OverwriteTime_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.OverwriteTime_IsReadOnly(ref result);
                    return result;
                }
                private static void _OverwriteTime_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OverwriteTime_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _OverwriteTime_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.OverwriteTime;
                }
                private static void _OverwriteTime_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.OverwriteTime_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>>.Entry
                    ComponentState = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ComponentState",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._ComponentState_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._ComponentState_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._ComponentState_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._ComponentState_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._ComponentState_OnValueChanged);
                private static void _ComponentState_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._ComponentState, sf);
                }
                private static bool _ComponentState_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.ComponentState_IsReadOnly(ref result);
                    return result;
                }
                private static void _ComponentState_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ComponentState_Validate(r);
                }
                private static global::System.Nullable<int> _ComponentState_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.ComponentState;
                }
                private static void _ComponentState_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.ComponentState_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    CreatedOnBehalfBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "CreatedOnBehalfBy",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._CreatedOnBehalfBy_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._CreatedOnBehalfBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._CreatedOnBehalfBy_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._CreatedOnBehalfBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._CreatedOnBehalfBy_OnValueChanged);
                private static void _CreatedOnBehalfBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedOnBehalfBy, sf);
                }
                private static bool _CreatedOnBehalfBy_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.CreatedOnBehalfBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedOnBehalfBy_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedOnBehalfBy_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _CreatedOnBehalfBy_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedOnBehalfBy;
                }
                private static void _CreatedOnBehalfBy_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.CreatedOnBehalfBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    ModifiedOnBehalfBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "ModifiedOnBehalfBy",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._ModifiedOnBehalfBy_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._ModifiedOnBehalfBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._ModifiedOnBehalfBy_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._ModifiedOnBehalfBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._ModifiedOnBehalfBy_OnValueChanged);
                private static void _ModifiedOnBehalfBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedOnBehalfBy, sf);
                }
                private static bool _ModifiedOnBehalfBy_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.ModifiedOnBehalfBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedOnBehalfBy_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedOnBehalfBy_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _ModifiedOnBehalfBy_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedOnBehalfBy;
                }
                private static void _ModifiedOnBehalfBy_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.ModifiedOnBehalfBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, string>.Entry
                    Xaml = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, string>.Entry(
                        "Xaml",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Xaml_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Xaml_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Xaml_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Xaml_GetImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Xaml_SetImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Xaml_OnValueChanged);
                private static void _Xaml_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, string>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._Xaml, sf);
                }
                private static bool _Xaml_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.Xaml_IsReadOnly(ref result);
                    return result;
                }
                private static void _Xaml_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Xaml_Validate(r);
                }
                private static string _Xaml_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.Xaml;
                }
                private static void _Xaml_SetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Xaml = v;
                }
                private static void _Xaml_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.Xaml_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>>.Entry
                    TriggerOnDelete = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "TriggerOnDelete",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._TriggerOnDelete_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._TriggerOnDelete_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._TriggerOnDelete_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._TriggerOnDelete_GetImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._TriggerOnDelete_SetImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._TriggerOnDelete_OnValueChanged);
                private static void _TriggerOnDelete_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._TriggerOnDelete, sf);
                }
                private static bool _TriggerOnDelete_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.TriggerOnDelete_IsReadOnly(ref result);
                    return result;
                }
                private static void _TriggerOnDelete_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TriggerOnDelete_Validate(r);
                }
                private static global::System.Nullable<bool> _TriggerOnDelete_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.TriggerOnDelete;
                }
                private static void _TriggerOnDelete_SetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.TriggerOnDelete = v;
                }
                private static void _TriggerOnDelete_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.TriggerOnDelete_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>>.Entry
                    TriggerOnCreate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "TriggerOnCreate",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._TriggerOnCreate_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._TriggerOnCreate_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._TriggerOnCreate_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._TriggerOnCreate_GetImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._TriggerOnCreate_SetImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._TriggerOnCreate_OnValueChanged);
                private static void _TriggerOnCreate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._TriggerOnCreate, sf);
                }
                private static bool _TriggerOnCreate_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.TriggerOnCreate_IsReadOnly(ref result);
                    return result;
                }
                private static void _TriggerOnCreate_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TriggerOnCreate_Validate(r);
                }
                private static global::System.Nullable<bool> _TriggerOnCreate_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.TriggerOnCreate;
                }
                private static void _TriggerOnCreate_SetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.TriggerOnCreate = v;
                }
                private static void _TriggerOnCreate_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.TriggerOnCreate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, string>.Entry
                    TriggerOnUpdateAttributeList = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, string>.Entry(
                        "TriggerOnUpdateAttributeList",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._TriggerOnUpdateAttributeList_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._TriggerOnUpdateAttributeList_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._TriggerOnUpdateAttributeList_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._TriggerOnUpdateAttributeList_GetImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._TriggerOnUpdateAttributeList_SetImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._TriggerOnUpdateAttributeList_OnValueChanged);
                private static void _TriggerOnUpdateAttributeList_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, string>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._TriggerOnUpdateAttributeList, sf);
                }
                private static bool _TriggerOnUpdateAttributeList_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.TriggerOnUpdateAttributeList_IsReadOnly(ref result);
                    return result;
                }
                private static void _TriggerOnUpdateAttributeList_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TriggerOnUpdateAttributeList_Validate(r);
                }
                private static string _TriggerOnUpdateAttributeList_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.TriggerOnUpdateAttributeList;
                }
                private static void _TriggerOnUpdateAttributeList_SetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TriggerOnUpdateAttributeList = v;
                }
                private static void _TriggerOnUpdateAttributeList_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.TriggerOnUpdateAttributeList_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>>.Entry
                    Category = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>>.Entry(
                        "Category",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Category_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Category_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Category_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Category_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Category_OnValueChanged);
                private static void _Category_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._Category, sf);
                }
                private static bool _Category_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.Category_IsReadOnly(ref result);
                    return result;
                }
                private static void _Category_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Category_Validate(r);
                }
                private static global::System.Nullable<int> _Category_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.Category;
                }
                private static void _Category_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.Category_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>>.Entry
                    LanguageCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>>.Entry(
                        "LanguageCode",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._LanguageCode_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._LanguageCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._LanguageCode_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._LanguageCode_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._LanguageCode_OnValueChanged);
                private static void _LanguageCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._LanguageCode, sf);
                }
                private static bool _LanguageCode_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.LanguageCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _LanguageCode_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LanguageCode_Validate(r);
                }
                private static global::System.Nullable<int> _LanguageCode_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.LanguageCode;
                }
                private static void _LanguageCode_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.LanguageCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>>.Entry
                    IsManaged = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "IsManaged",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._IsManaged_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._IsManaged_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._IsManaged_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._IsManaged_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._IsManaged_OnValueChanged);
                private static void _IsManaged_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._IsManaged, sf);
                }
                private static bool _IsManaged_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.IsManaged_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsManaged_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsManaged_Validate(r);
                }
                private static global::System.Nullable<bool> _IsManaged_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.IsManaged;
                }
                private static void _IsManaged_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.IsManaged_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, bool>.Entry
                    IsCustomizable = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, bool>.Entry(
                        "IsCustomizable",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._IsCustomizable_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._IsCustomizable_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._IsCustomizable_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._IsCustomizable_GetImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._IsCustomizable_SetImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._IsCustomizable_OnValueChanged);
                private static void _IsCustomizable_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, bool>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._IsCustomizable, sf);
                }
                private static bool _IsCustomizable_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.IsCustomizable_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsCustomizable_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsCustomizable_Validate(r);
                }
                private static bool _IsCustomizable_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.IsCustomizable;
                }
                private static void _IsCustomizable_SetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.IsCustomizable = v;
                }
                private static void _IsCustomizable_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.IsCustomizable_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, string>.Entry
                    InputParameters = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, string>.Entry(
                        "InputParameters",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._InputParameters_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._InputParameters_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._InputParameters_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._InputParameters_GetImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._InputParameters_SetImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._InputParameters_OnValueChanged);
                private static void _InputParameters_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, string>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._InputParameters, sf);
                }
                private static bool _InputParameters_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.InputParameters_IsReadOnly(ref result);
                    return result;
                }
                private static void _InputParameters_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.InputParameters_Validate(r);
                }
                private static string _InputParameters_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.InputParameters;
                }
                private static void _InputParameters_SetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d, string v)
                {
                    d.ImplementationEntity.InputParameters = v;
                }
                private static void _InputParameters_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.InputParameters_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::LightSwitchApplication.Workflow>.Entry
                    workflow_active_workflow = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::LightSwitchApplication.Workflow>.Entry(
                        "workflow_active_workflow",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._workflow_active_workflow_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._workflow_active_workflow_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._workflow_active_workflow_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._workflow_active_workflow_GetCoreImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._workflow_active_workflow_GetImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._workflow_active_workflow_SetImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._workflow_active_workflow_Refresh,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._workflow_active_workflow_OnValueChanged);
                private static void _workflow_active_workflow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::LightSwitchApplication.Workflow>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._workflow_active_workflow, sf);
                }
                private static bool _workflow_active_workflow_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.workflow_active_workflow_IsReadOnly(ref result);
                    return result;
                }
                private static void _workflow_active_workflow_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.workflow_active_workflow_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _workflow_active_workflow_GetCoreImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.workflow_active_workflow;
                }
                private static global::LightSwitchApplication.Workflow _workflow_active_workflow_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass>(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.workflow_active_workflow, ref d._workflow_active_workflow);
                }
                private static void _workflow_active_workflow_SetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d, global::LightSwitchApplication.Workflow v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.workflow_active_workflow, ref d._workflow_active_workflow, (i, ev) => i.workflow_active_workflow = ev, v);
                }
                private static void _workflow_active_workflow_Refresh(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.workflow_active_workflow, ref d._workflow_active_workflow);
                }
                private static void _workflow_active_workflow_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.workflow_active_workflow_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::LightSwitchApplication.Workflow>.Entry
                    workflow_active_workflows = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::LightSwitchApplication.Workflow>.Entry(
                        "workflow_active_workflows",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._workflow_active_workflows_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._workflow_active_workflows_GetReferencedEntities,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._workflow_active_workflows_GetEntityCollection);
                private static void _workflow_active_workflows_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::LightSwitchApplication.Workflow>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._workflow_active_workflows, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Workflow> _workflow_active_workflows_GetReferencedEntities(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass>(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.workflow_active_workflows, ref d._workflow_active_workflows);
                }
                private static global::System.Collections.IEnumerable _workflow_active_workflows_GetEntityCollection(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.workflow_active_workflows;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::LightSwitchApplication.Team>.Entry
                    team_workflow = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::LightSwitchApplication.Team>.Entry(
                        "team_workflow",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._team_workflow_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._team_workflow_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._team_workflow_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._team_workflow_GetCoreImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._team_workflow_GetImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._team_workflow_SetImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._team_workflow_Refresh,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._team_workflow_OnValueChanged);
                private static void _team_workflow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::LightSwitchApplication.Team>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._team_workflow, sf);
                }
                private static bool _team_workflow_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.team_workflow_IsReadOnly(ref result);
                    return result;
                }
                private static void _team_workflow_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.team_workflow_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _team_workflow_GetCoreImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.team_workflow;
                }
                private static global::LightSwitchApplication.Team _team_workflow_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass>(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.team_workflow, ref d._team_workflow);
                }
                private static void _team_workflow_SetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d, global::LightSwitchApplication.Team v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.team_workflow, ref d._team_workflow, (i, ev) => i.team_workflow = ev, v);
                }
                private static void _team_workflow_Refresh(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.team_workflow, ref d._team_workflow);
                }
                private static void _team_workflow_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.team_workflow_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::LightSwitchApplication.Workflow>.Entry
                    workflow_parent_workflow = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::LightSwitchApplication.Workflow>.Entry(
                        "workflow_parent_workflow",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._workflow_parent_workflow_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._workflow_parent_workflow_ComputeIsReadOnly,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._workflow_parent_workflow_Validate,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._workflow_parent_workflow_GetCoreImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._workflow_parent_workflow_GetImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._workflow_parent_workflow_SetImplementationValue,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._workflow_parent_workflow_Refresh,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._workflow_parent_workflow_OnValueChanged);
                private static void _workflow_parent_workflow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::LightSwitchApplication.Workflow>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._workflow_parent_workflow, sf);
                }
                private static bool _workflow_parent_workflow_ComputeIsReadOnly(global::LightSwitchApplication.Workflow e)
                {
                    bool result = false;
                    e.workflow_parent_workflow_IsReadOnly(ref result);
                    return result;
                }
                private static void _workflow_parent_workflow_Validate(global::LightSwitchApplication.Workflow e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.workflow_parent_workflow_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _workflow_parent_workflow_GetCoreImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.workflow_parent_workflow;
                }
                private static global::LightSwitchApplication.Workflow _workflow_parent_workflow_GetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass>(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.workflow_parent_workflow, ref d._workflow_parent_workflow);
                }
                private static void _workflow_parent_workflow_SetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass d, global::LightSwitchApplication.Workflow v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.workflow_parent_workflow, ref d._workflow_parent_workflow, (i, ev) => i.workflow_parent_workflow = ev, v);
                }
                private static void _workflow_parent_workflow_Refresh(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.workflow_parent_workflow, ref d._workflow_parent_workflow);
                }
                private static void _workflow_parent_workflow_OnValueChanged(global::LightSwitchApplication.Workflow e)
                {
                    e.workflow_parent_workflow_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::LightSwitchApplication.Workflow>.Entry
                    workflow_parent_workflows = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::LightSwitchApplication.Workflow>.Entry(
                        "workflow_parent_workflows",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._workflow_parent_workflows_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._workflow_parent_workflows_GetReferencedEntities,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._workflow_parent_workflows_GetEntityCollection);
                private static void _workflow_parent_workflows_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::LightSwitchApplication.Workflow>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._workflow_parent_workflows, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Workflow> _workflow_parent_workflows_GetReferencedEntities(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass>(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.workflow_parent_workflows, ref d._workflow_parent_workflows);
                }
                private static global::System.Collections.IEnumerable _workflow_parent_workflows_GetEntityCollection(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.workflow_parent_workflows;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::LightSwitchApplication.WorkflowDependency>.Entry
                    Workflow_dependencies = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::LightSwitchApplication.WorkflowDependency>.Entry(
                        "Workflow_dependencies",
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Workflow_dependencies_Stub,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Workflow_dependencies_GetReferencedEntities,
                        global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties._Workflow_dependencies_GetEntityCollection);
                private static void _Workflow_dependencies_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Workflow.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::LightSwitchApplication.WorkflowDependency>.Data> c, global::LightSwitchApplication.Workflow.DetailsClass d, object sf)
                {
                    c(d, ref d._Workflow_dependencies, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.WorkflowDependency> _Workflow_dependencies_GetReferencedEntities(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.WorkflowDependency, global::LightSwitchApplication.WorkflowDependency.DetailsClass>(global::LightSwitchApplication.Workflow.DetailsClass.PropertySetProperties.Workflow_dependencies, ref d._Workflow_dependencies);
                }
                private static global::System.Collections.IEnumerable _Workflow_dependencies_GetEntityCollection(global::LightSwitchApplication.Workflow.DetailsClass d)
                {
                    return d.ImplementationEntity.Workflow_dependencies;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, string>.Data _Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Guid>.Data _WorkflowId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>>.Data _OnDemand;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _PluginTypeId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _CreatedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>>.Data _Type;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, string>.Data _PrimaryEntity;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _OwnerId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ModifiedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>>.Data _AsyncAutoDelete;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>>.Data _IsCrmUIWorkflow;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>>.Data _Subprocess;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>>.Data _Scope;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>>.Data _StatusCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _ModifiedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, string>.Data _Description;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _OwningBusinessUnit;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>>.Data _StateCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _OwningUser;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Guid>.Data _WorkflowIdUnique;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Guid>.Data _SupportingSolutionId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Guid>.Data _SolutionId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _OverwriteTime;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>>.Data _ComponentState;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _CreatedOnBehalfBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _ModifiedOnBehalfBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, string>.Data _Xaml;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>>.Data _TriggerOnDelete;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>>.Data _TriggerOnCreate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, string>.Data _TriggerOnUpdateAttributeList;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>>.Data _Category;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<int>>.Data _LanguageCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::System.Nullable<bool>>.Data _IsManaged;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, bool>.Data _IsCustomizable;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, string>.Data _InputParameters;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::LightSwitchApplication.Workflow>.Data _workflow_active_workflow;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::LightSwitchApplication.Workflow>.Data _workflow_active_workflows;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::LightSwitchApplication.Team>.Data _team_workflow;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::LightSwitchApplication.Workflow>.Data _workflow_parent_workflow;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::LightSwitchApplication.Workflow>.Data _workflow_parent_workflows;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Workflow, global::LightSwitchApplication.Workflow.DetailsClass, global::LightSwitchApplication.WorkflowDependency>.Data _Workflow_dependencies;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
    public sealed partial class X360Configuration : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the X360Configuration entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public X360Configuration()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public X360Configuration(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.X360Configuration> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.X360Configuration.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void X360Configuration_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void X360Configuration_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Username
        {
            get
            {
                return global::LightSwitchApplication.X360Configuration.DetailsClass.GetValue(this, global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties.Username);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Username_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Username_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Username_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CredentialsUri
        {
            get
            {
                return global::LightSwitchApplication.X360Configuration.DetailsClass.GetValue(this, global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties.CredentialsUri);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CredentialsUri_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CredentialsUri_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CredentialsUri_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string DiscoveryUri
        {
            get
            {
                return global::LightSwitchApplication.X360Configuration.DetailsClass.GetValue(this, global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties.DiscoveryUri);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DiscoveryUri_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DiscoveryUri_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DiscoveryUri_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string OrganizationName
        {
            get
            {
                return global::LightSwitchApplication.X360Configuration.DetailsClass.GetValue(this, global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties.OrganizationName);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrganizationName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrganizationName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrganizationName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string OrganizationUri
        {
            get
            {
                return global::LightSwitchApplication.X360Configuration.DetailsClass.GetValue(this, global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties.OrganizationUri);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrganizationUri_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrganizationUri_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrganizationUri_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Timeout
        {
            get
            {
                return global::LightSwitchApplication.X360Configuration.DetailsClass.GetValue(this, global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties.Timeout);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Timeout_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Timeout_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Timeout_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string AuthenticationType
        {
            get
            {
                return global::LightSwitchApplication.X360Configuration.DetailsClass.GetValue(this, global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties.AuthenticationType);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuthenticationType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuthenticationType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuthenticationType_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string LicenseKey
        {
            get
            {
                return global::LightSwitchApplication.X360Configuration.DetailsClass.GetValue(this, global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties.LicenseKey);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LicenseKey_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LicenseKey_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LicenseKey_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string LicenseKeyStatus
        {
            get
            {
                return global::LightSwitchApplication.X360Configuration.DetailsClass.GetValue(this, global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties.LicenseKeyStatus);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LicenseKeyStatus_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LicenseKeyStatus_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LicenseKeyStatus_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string LastError
        {
            get
            {
                return global::LightSwitchApplication.X360Configuration.DetailsClass.GetValue(this, global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties.LastError);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastError_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastError_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastError_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.X360Configuration,
                global::LightSwitchApplication.X360Configuration.DetailsClass,
                global::LightSwitchApplication.X360Configuration.DetailsClass.IImplementation,
                global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties.Username;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass>.Entry
                __X360ConfigurationEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass>.Entry(
                    global::LightSwitchApplication.X360Configuration.DetailsClass.__X360Configuration_CreateNew,
                    global::LightSwitchApplication.X360Configuration.DetailsClass.__X360Configuration_Created,
                    global::LightSwitchApplication.X360Configuration.DetailsClass.__X360Configuration_AllowSaveWithErrors);
            private static global::LightSwitchApplication.X360Configuration __X360Configuration_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.X360Configuration> es)
            {
                return new global::LightSwitchApplication.X360Configuration(es);
            }
            private static void __X360Configuration_Created(global::LightSwitchApplication.X360Configuration e)
            {
                e.X360Configuration_Created();
            }
            private static bool __X360Configuration_AllowSaveWithErrors(global::LightSwitchApplication.X360Configuration e)
            {
                bool result = false;
                e.X360Configuration_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string> Username
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties.Username) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string> CredentialsUri
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties.CredentialsUri) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string> DiscoveryUri
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties.DiscoveryUri) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string> OrganizationName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties.OrganizationName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string> OrganizationUri
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties.OrganizationUri) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string> Timeout
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties.Timeout) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string> AuthenticationType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties.AuthenticationType) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string> LicenseKey
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties.LicenseKey) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string> LicenseKeyStatus
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties.LicenseKeyStatus) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string> LastError
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties.LastError) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new string Username { get; }
                new string CredentialsUri { get; }
                new string DiscoveryUri { get; }
                new string OrganizationName { get; }
                new string OrganizationUri { get; }
                new string Timeout { get; }
                new string AuthenticationType { get; }
                new string LicenseKey { get; }
                new string LicenseKeyStatus { get; }
                new string LastError { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Entry
                    Username = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Entry(
                        "Username",
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._Username_Stub,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._Username_ComputeIsReadOnly,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._Username_Validate,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._Username_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._Username_OnValueChanged);
                private static void _Username_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.X360Configuration.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Data> c, global::LightSwitchApplication.X360Configuration.DetailsClass d, object sf)
                {
                    c(d, ref d._Username, sf);
                }
                private static bool _Username_ComputeIsReadOnly(global::LightSwitchApplication.X360Configuration e)
                {
                    bool result = false;
                    e.Username_IsReadOnly(ref result);
                    return result;
                }
                private static void _Username_Validate(global::LightSwitchApplication.X360Configuration e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Username_Validate(r);
                }
                private static string _Username_GetImplementationValue(global::LightSwitchApplication.X360Configuration.DetailsClass d)
                {
                    return d.ImplementationEntity.Username;
                }
                private static void _Username_OnValueChanged(global::LightSwitchApplication.X360Configuration e)
                {
                    e.Username_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Entry
                    CredentialsUri = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Entry(
                        "CredentialsUri",
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._CredentialsUri_Stub,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._CredentialsUri_ComputeIsReadOnly,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._CredentialsUri_Validate,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._CredentialsUri_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._CredentialsUri_OnValueChanged);
                private static void _CredentialsUri_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.X360Configuration.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Data> c, global::LightSwitchApplication.X360Configuration.DetailsClass d, object sf)
                {
                    c(d, ref d._CredentialsUri, sf);
                }
                private static bool _CredentialsUri_ComputeIsReadOnly(global::LightSwitchApplication.X360Configuration e)
                {
                    bool result = false;
                    e.CredentialsUri_IsReadOnly(ref result);
                    return result;
                }
                private static void _CredentialsUri_Validate(global::LightSwitchApplication.X360Configuration e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CredentialsUri_Validate(r);
                }
                private static string _CredentialsUri_GetImplementationValue(global::LightSwitchApplication.X360Configuration.DetailsClass d)
                {
                    return d.ImplementationEntity.CredentialsUri;
                }
                private static void _CredentialsUri_OnValueChanged(global::LightSwitchApplication.X360Configuration e)
                {
                    e.CredentialsUri_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Entry
                    DiscoveryUri = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Entry(
                        "DiscoveryUri",
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._DiscoveryUri_Stub,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._DiscoveryUri_ComputeIsReadOnly,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._DiscoveryUri_Validate,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._DiscoveryUri_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._DiscoveryUri_OnValueChanged);
                private static void _DiscoveryUri_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.X360Configuration.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Data> c, global::LightSwitchApplication.X360Configuration.DetailsClass d, object sf)
                {
                    c(d, ref d._DiscoveryUri, sf);
                }
                private static bool _DiscoveryUri_ComputeIsReadOnly(global::LightSwitchApplication.X360Configuration e)
                {
                    bool result = false;
                    e.DiscoveryUri_IsReadOnly(ref result);
                    return result;
                }
                private static void _DiscoveryUri_Validate(global::LightSwitchApplication.X360Configuration e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DiscoveryUri_Validate(r);
                }
                private static string _DiscoveryUri_GetImplementationValue(global::LightSwitchApplication.X360Configuration.DetailsClass d)
                {
                    return d.ImplementationEntity.DiscoveryUri;
                }
                private static void _DiscoveryUri_OnValueChanged(global::LightSwitchApplication.X360Configuration e)
                {
                    e.DiscoveryUri_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Entry
                    OrganizationName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Entry(
                        "OrganizationName",
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._OrganizationName_Stub,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._OrganizationName_ComputeIsReadOnly,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._OrganizationName_Validate,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._OrganizationName_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._OrganizationName_OnValueChanged);
                private static void _OrganizationName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.X360Configuration.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Data> c, global::LightSwitchApplication.X360Configuration.DetailsClass d, object sf)
                {
                    c(d, ref d._OrganizationName, sf);
                }
                private static bool _OrganizationName_ComputeIsReadOnly(global::LightSwitchApplication.X360Configuration e)
                {
                    bool result = false;
                    e.OrganizationName_IsReadOnly(ref result);
                    return result;
                }
                private static void _OrganizationName_Validate(global::LightSwitchApplication.X360Configuration e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OrganizationName_Validate(r);
                }
                private static string _OrganizationName_GetImplementationValue(global::LightSwitchApplication.X360Configuration.DetailsClass d)
                {
                    return d.ImplementationEntity.OrganizationName;
                }
                private static void _OrganizationName_OnValueChanged(global::LightSwitchApplication.X360Configuration e)
                {
                    e.OrganizationName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Entry
                    OrganizationUri = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Entry(
                        "OrganizationUri",
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._OrganizationUri_Stub,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._OrganizationUri_ComputeIsReadOnly,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._OrganizationUri_Validate,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._OrganizationUri_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._OrganizationUri_OnValueChanged);
                private static void _OrganizationUri_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.X360Configuration.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Data> c, global::LightSwitchApplication.X360Configuration.DetailsClass d, object sf)
                {
                    c(d, ref d._OrganizationUri, sf);
                }
                private static bool _OrganizationUri_ComputeIsReadOnly(global::LightSwitchApplication.X360Configuration e)
                {
                    bool result = false;
                    e.OrganizationUri_IsReadOnly(ref result);
                    return result;
                }
                private static void _OrganizationUri_Validate(global::LightSwitchApplication.X360Configuration e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OrganizationUri_Validate(r);
                }
                private static string _OrganizationUri_GetImplementationValue(global::LightSwitchApplication.X360Configuration.DetailsClass d)
                {
                    return d.ImplementationEntity.OrganizationUri;
                }
                private static void _OrganizationUri_OnValueChanged(global::LightSwitchApplication.X360Configuration e)
                {
                    e.OrganizationUri_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Entry
                    Timeout = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Entry(
                        "Timeout",
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._Timeout_Stub,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._Timeout_ComputeIsReadOnly,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._Timeout_Validate,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._Timeout_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._Timeout_OnValueChanged);
                private static void _Timeout_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.X360Configuration.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Data> c, global::LightSwitchApplication.X360Configuration.DetailsClass d, object sf)
                {
                    c(d, ref d._Timeout, sf);
                }
                private static bool _Timeout_ComputeIsReadOnly(global::LightSwitchApplication.X360Configuration e)
                {
                    bool result = false;
                    e.Timeout_IsReadOnly(ref result);
                    return result;
                }
                private static void _Timeout_Validate(global::LightSwitchApplication.X360Configuration e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Timeout_Validate(r);
                }
                private static string _Timeout_GetImplementationValue(global::LightSwitchApplication.X360Configuration.DetailsClass d)
                {
                    return d.ImplementationEntity.Timeout;
                }
                private static void _Timeout_OnValueChanged(global::LightSwitchApplication.X360Configuration e)
                {
                    e.Timeout_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Entry
                    AuthenticationType = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Entry(
                        "AuthenticationType",
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._AuthenticationType_Stub,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._AuthenticationType_ComputeIsReadOnly,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._AuthenticationType_Validate,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._AuthenticationType_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._AuthenticationType_OnValueChanged);
                private static void _AuthenticationType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.X360Configuration.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Data> c, global::LightSwitchApplication.X360Configuration.DetailsClass d, object sf)
                {
                    c(d, ref d._AuthenticationType, sf);
                }
                private static bool _AuthenticationType_ComputeIsReadOnly(global::LightSwitchApplication.X360Configuration e)
                {
                    bool result = false;
                    e.AuthenticationType_IsReadOnly(ref result);
                    return result;
                }
                private static void _AuthenticationType_Validate(global::LightSwitchApplication.X360Configuration e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AuthenticationType_Validate(r);
                }
                private static string _AuthenticationType_GetImplementationValue(global::LightSwitchApplication.X360Configuration.DetailsClass d)
                {
                    return d.ImplementationEntity.AuthenticationType;
                }
                private static void _AuthenticationType_OnValueChanged(global::LightSwitchApplication.X360Configuration e)
                {
                    e.AuthenticationType_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Entry
                    LicenseKey = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Entry(
                        "LicenseKey",
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._LicenseKey_Stub,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._LicenseKey_ComputeIsReadOnly,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._LicenseKey_Validate,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._LicenseKey_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._LicenseKey_OnValueChanged);
                private static void _LicenseKey_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.X360Configuration.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Data> c, global::LightSwitchApplication.X360Configuration.DetailsClass d, object sf)
                {
                    c(d, ref d._LicenseKey, sf);
                }
                private static bool _LicenseKey_ComputeIsReadOnly(global::LightSwitchApplication.X360Configuration e)
                {
                    bool result = false;
                    e.LicenseKey_IsReadOnly(ref result);
                    return result;
                }
                private static void _LicenseKey_Validate(global::LightSwitchApplication.X360Configuration e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LicenseKey_Validate(r);
                }
                private static string _LicenseKey_GetImplementationValue(global::LightSwitchApplication.X360Configuration.DetailsClass d)
                {
                    return d.ImplementationEntity.LicenseKey;
                }
                private static void _LicenseKey_OnValueChanged(global::LightSwitchApplication.X360Configuration e)
                {
                    e.LicenseKey_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Entry
                    LicenseKeyStatus = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Entry(
                        "LicenseKeyStatus",
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._LicenseKeyStatus_Stub,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._LicenseKeyStatus_ComputeIsReadOnly,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._LicenseKeyStatus_Validate,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._LicenseKeyStatus_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._LicenseKeyStatus_OnValueChanged);
                private static void _LicenseKeyStatus_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.X360Configuration.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Data> c, global::LightSwitchApplication.X360Configuration.DetailsClass d, object sf)
                {
                    c(d, ref d._LicenseKeyStatus, sf);
                }
                private static bool _LicenseKeyStatus_ComputeIsReadOnly(global::LightSwitchApplication.X360Configuration e)
                {
                    bool result = false;
                    e.LicenseKeyStatus_IsReadOnly(ref result);
                    return result;
                }
                private static void _LicenseKeyStatus_Validate(global::LightSwitchApplication.X360Configuration e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LicenseKeyStatus_Validate(r);
                }
                private static string _LicenseKeyStatus_GetImplementationValue(global::LightSwitchApplication.X360Configuration.DetailsClass d)
                {
                    return d.ImplementationEntity.LicenseKeyStatus;
                }
                private static void _LicenseKeyStatus_OnValueChanged(global::LightSwitchApplication.X360Configuration e)
                {
                    e.LicenseKeyStatus_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Entry
                    LastError = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Entry(
                        "LastError",
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._LastError_Stub,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._LastError_ComputeIsReadOnly,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._LastError_Validate,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._LastError_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.X360Configuration.DetailsClass.PropertySetProperties._LastError_OnValueChanged);
                private static void _LastError_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.X360Configuration.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Data> c, global::LightSwitchApplication.X360Configuration.DetailsClass d, object sf)
                {
                    c(d, ref d._LastError, sf);
                }
                private static bool _LastError_ComputeIsReadOnly(global::LightSwitchApplication.X360Configuration e)
                {
                    bool result = false;
                    e.LastError_IsReadOnly(ref result);
                    return result;
                }
                private static void _LastError_Validate(global::LightSwitchApplication.X360Configuration e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LastError_Validate(r);
                }
                private static string _LastError_GetImplementationValue(global::LightSwitchApplication.X360Configuration.DetailsClass d)
                {
                    return d.ImplementationEntity.LastError;
                }
                private static void _LastError_OnValueChanged(global::LightSwitchApplication.X360Configuration e)
                {
                    e.LastError_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Data _Username;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Data _CredentialsUri;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Data _DiscoveryUri;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Data _OrganizationName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Data _OrganizationUri;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Data _Timeout;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Data _AuthenticationType;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Data _LicenseKey;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Data _LicenseKeyStatus;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.X360Configuration, global::LightSwitchApplication.X360Configuration.DetailsClass, string>.Data _LastError;
            
        }
    
        #endregion
    }
    
    #endregion
}
