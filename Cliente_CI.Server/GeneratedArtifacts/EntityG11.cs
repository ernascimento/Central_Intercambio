

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
    public sealed partial class QuoteClose : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the QuoteClose entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public QuoteClose()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public QuoteClose(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.QuoteClose> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.QuoteClose.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QuoteClose_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QuoteClose_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Subject
        {
            get
            {
                return global::LightSwitchApplication.QuoteClose.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.Subject);
            }
            set
            {
                global::LightSwitchApplication.QuoteClose.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.Subject, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Subject_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Subject_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Subject_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Guid ActivityId
        {
            get
            {
                return global::LightSwitchApplication.QuoteClose.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.ActivityId);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<long> VersionNumber
        {
            get
            {
                return global::LightSwitchApplication.QuoteClose.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.VersionNumber);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> OwnerId
        {
            get
            {
                return global::LightSwitchApplication.QuoteClose.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.OwnerId);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OwnerId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OwnerId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OwnerId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> IsWorkflowCreated
        {
            get
            {
                return global::LightSwitchApplication.QuoteClose.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.IsWorkflowCreated);
            }
            set
            {
                global::LightSwitchApplication.QuoteClose.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.IsWorkflowCreated, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsWorkflowCreated_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsWorkflowCreated_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsWorkflowCreated_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Description
        {
            get
            {
                return global::LightSwitchApplication.QuoteClose.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.Description);
            }
            set
            {
                global::LightSwitchApplication.QuoteClose.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.Description, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> Revision
        {
            get
            {
                return global::LightSwitchApplication.QuoteClose.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.Revision);
            }
            set
            {
                global::LightSwitchApplication.QuoteClose.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.Revision, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Revision_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Revision_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Revision_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return global::LightSwitchApplication.QuoteClose.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.ModifiedOn);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Subcategory
        {
            get
            {
                return global::LightSwitchApplication.QuoteClose.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.Subcategory);
            }
            set
            {
                global::LightSwitchApplication.QuoteClose.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.Subcategory, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Subcategory_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Subcategory_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Subcategory_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> IsBilled
        {
            get
            {
                return global::LightSwitchApplication.QuoteClose.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.IsBilled);
            }
            set
            {
                global::LightSwitchApplication.QuoteClose.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.IsBilled, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsBilled_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsBilled_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsBilled_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> StatusCode
        {
            get
            {
                return global::LightSwitchApplication.QuoteClose.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.StatusCode);
            }
            set
            {
                global::LightSwitchApplication.QuoteClose.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.StatusCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.QuoteClose.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.CreatedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ScheduledEnd
        {
            get
            {
                return global::LightSwitchApplication.QuoteClose.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.ScheduledEnd);
            }
            set
            {
                global::LightSwitchApplication.QuoteClose.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.ScheduledEnd, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduledEnd_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduledEnd_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduledEnd_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string QuoteNumber
        {
            get
            {
                return global::LightSwitchApplication.QuoteClose.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.QuoteNumber);
            }
            set
            {
                global::LightSwitchApplication.QuoteClose.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.QuoteNumber, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QuoteNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QuoteNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QuoteNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> StateCode
        {
            get
            {
                return global::LightSwitchApplication.QuoteClose.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.StateCode);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StateCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StateCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StateCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> ServiceId
        {
            get
            {
                return global::LightSwitchApplication.QuoteClose.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.ServiceId);
            }
            set
            {
                global::LightSwitchApplication.QuoteClose.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.ServiceId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ActualEnd
        {
            get
            {
                return global::LightSwitchApplication.QuoteClose.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.ActualEnd);
            }
            set
            {
                global::LightSwitchApplication.QuoteClose.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.ActualEnd, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualEnd_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualEnd_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualEnd_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return global::LightSwitchApplication.QuoteClose.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.ModifiedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Category
        {
            get
            {
                return global::LightSwitchApplication.QuoteClose.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.Category);
            }
            set
            {
                global::LightSwitchApplication.QuoteClose.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.Category, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Category_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Category_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Category_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ActualDurationMinutes
        {
            get
            {
                return global::LightSwitchApplication.QuoteClose.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.ActualDurationMinutes);
            }
            set
            {
                global::LightSwitchApplication.QuoteClose.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.ActualDurationMinutes, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualDurationMinutes_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualDurationMinutes_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualDurationMinutes_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ScheduledStart
        {
            get
            {
                return global::LightSwitchApplication.QuoteClose.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.ScheduledStart);
            }
            set
            {
                global::LightSwitchApplication.QuoteClose.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.ScheduledStart, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduledStart_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduledStart_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduledStart_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> OwningBusinessUnit
        {
            get
            {
                return global::LightSwitchApplication.QuoteClose.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.OwningBusinessUnit);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OwningBusinessUnit_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OwningBusinessUnit_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OwningBusinessUnit_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ScheduledDurationMinutes
        {
            get
            {
                return global::LightSwitchApplication.QuoteClose.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.ScheduledDurationMinutes);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduledDurationMinutes_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduledDurationMinutes_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ScheduledDurationMinutes_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ActualStart
        {
            get
            {
                return global::LightSwitchApplication.QuoteClose.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.ActualStart);
            }
            set
            {
                global::LightSwitchApplication.QuoteClose.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.ActualStart, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualStart_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualStart_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualStart_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return global::LightSwitchApplication.QuoteClose.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.CreatedOn);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> OwningUser
        {
            get
            {
                return global::LightSwitchApplication.QuoteClose.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.OwningUser);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OwningUser_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OwningUser_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OwningUser_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ImportSequenceNumber
        {
            get
            {
                return global::LightSwitchApplication.QuoteClose.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.ImportSequenceNumber);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ImportSequenceNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ImportSequenceNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ImportSequenceNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> UTCConversionTimeZoneCode
        {
            get
            {
                return global::LightSwitchApplication.QuoteClose.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.UTCConversionTimeZoneCode);
            }
            set
            {
                global::LightSwitchApplication.QuoteClose.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.UTCConversionTimeZoneCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UTCConversionTimeZoneCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UTCConversionTimeZoneCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UTCConversionTimeZoneCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> TimeZoneRuleVersionNumber
        {
            get
            {
                return global::LightSwitchApplication.QuoteClose.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.TimeZoneRuleVersionNumber);
            }
            set
            {
                global::LightSwitchApplication.QuoteClose.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.TimeZoneRuleVersionNumber, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeZoneRuleVersionNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeZoneRuleVersionNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeZoneRuleVersionNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> OverriddenCreatedOn
        {
            get
            {
                return global::LightSwitchApplication.QuoteClose.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.OverriddenCreatedOn);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OverriddenCreatedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OverriddenCreatedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OverriddenCreatedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> CreatedOnBehalfBy
        {
            get
            {
                return global::LightSwitchApplication.QuoteClose.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.CreatedOnBehalfBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOnBehalfBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOnBehalfBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOnBehalfBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> ModifiedOnBehalfBy
        {
            get
            {
                return global::LightSwitchApplication.QuoteClose.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.ModifiedOnBehalfBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedOnBehalfBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedOnBehalfBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedOnBehalfBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ActivityTypeCode
        {
            get
            {
                return global::LightSwitchApplication.QuoteClose.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.ActivityTypeCode);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityTypeCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityTypeCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityTypeCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> IsRegularActivity
        {
            get
            {
                return global::LightSwitchApplication.QuoteClose.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.IsRegularActivity);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsRegularActivity_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsRegularActivity_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsRegularActivity_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Quote Quote_QuoteClose
        {
            get
            {
                return global::LightSwitchApplication.QuoteClose.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.Quote_QuoteClose);
            }
            set
            {
                global::LightSwitchApplication.QuoteClose.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.Quote_QuoteClose, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Quote_QuoteClose_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Quote_QuoteClose_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Quote_QuoteClose_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Team team_quoteclose
        {
            get
            {
                return global::LightSwitchApplication.QuoteClose.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.team_quoteclose);
            }
            set
            {
                global::LightSwitchApplication.QuoteClose.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.team_quoteclose, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void team_quoteclose_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void team_quoteclose_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void team_quoteclose_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.QuoteClose,
                global::LightSwitchApplication.QuoteClose.DetailsClass,
                global::LightSwitchApplication.QuoteClose.DetailsClass.IImplementation,
                global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.Subject;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass>.Entry
                __QuoteCloseEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass>.Entry(
                    global::LightSwitchApplication.QuoteClose.DetailsClass.__QuoteClose_CreateNew,
                    global::LightSwitchApplication.QuoteClose.DetailsClass.__QuoteClose_Created,
                    global::LightSwitchApplication.QuoteClose.DetailsClass.__QuoteClose_AllowSaveWithErrors);
            private static global::LightSwitchApplication.QuoteClose __QuoteClose_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.QuoteClose> es)
            {
                return new global::LightSwitchApplication.QuoteClose(es);
            }
            private static void __QuoteClose_Created(global::LightSwitchApplication.QuoteClose e)
            {
                e.QuoteClose_Created();
            }
            private static bool __QuoteClose_AllowSaveWithErrors(global::LightSwitchApplication.QuoteClose e)
            {
                bool result = false;
                e.QuoteClose_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, string> Subject
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.Subject) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Guid> ActivityId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.ActivityId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Guid>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<long>> VersionNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.VersionNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<long>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>> OwnerId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.OwnerId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<bool>> IsWorkflowCreated
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.IsWorkflowCreated) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, string> Description
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.Description) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>> Revision
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.Revision) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>> ModifiedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.ModifiedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, string> Subcategory
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.Subcategory) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<bool>> IsBilled
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.IsBilled) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>> StatusCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.StatusCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>> CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>> ScheduledEnd
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.ScheduledEnd) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, string> QuoteNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.QuoteNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>> StateCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.StateCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>> ServiceId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.ServiceId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>> ActualEnd
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.ActualEnd) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>> ModifiedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.ModifiedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, string> Category
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.Category) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>> ActualDurationMinutes
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.ActualDurationMinutes) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>> ScheduledStart
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.ScheduledStart) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>> OwningBusinessUnit
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.OwningBusinessUnit) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>> ScheduledDurationMinutes
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.ScheduledDurationMinutes) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>> ActualStart
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.ActualStart) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>> CreatedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.CreatedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>> OwningUser
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.OwningUser) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>> ImportSequenceNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.ImportSequenceNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>> UTCConversionTimeZoneCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.UTCConversionTimeZoneCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>> TimeZoneRuleVersionNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.TimeZoneRuleVersionNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>> OverriddenCreatedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.OverriddenCreatedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>> CreatedOnBehalfBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.CreatedOnBehalfBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>> ModifiedOnBehalfBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.ModifiedOnBehalfBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, string> ActivityTypeCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.ActivityTypeCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<bool>> IsRegularActivity
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.IsRegularActivity) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::LightSwitchApplication.Quote> Quote_QuoteClose
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.Quote_QuoteClose) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::LightSwitchApplication.Quote>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::LightSwitchApplication.Team> team_quoteclose
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.team_quoteclose) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::LightSwitchApplication.Team>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new string Subject { get; set; }
                new global::System.Guid ActivityId { get; }
                new global::System.Nullable<long> VersionNumber { get; }
                new global::System.Nullable<global::System.Guid> OwnerId { get; }
                new global::System.Nullable<bool> IsWorkflowCreated { get; set; }
                new string Description { get; set; }
                new global::System.Nullable<int> Revision { get; set; }
                new global::System.Nullable<global::System.DateTime> ModifiedOn { get; }
                new string Subcategory { get; set; }
                new global::System.Nullable<bool> IsBilled { get; set; }
                new global::System.Nullable<int> StatusCode { get; set; }
                new global::System.Nullable<global::System.Guid> CreatedBy { get; }
                new global::System.Nullable<global::System.DateTime> ScheduledEnd { get; set; }
                new string QuoteNumber { get; set; }
                new global::System.Nullable<int> StateCode { get; }
                new global::System.Nullable<global::System.Guid> ServiceId { get; set; }
                new global::System.Nullable<global::System.DateTime> ActualEnd { get; set; }
                new global::System.Nullable<global::System.Guid> ModifiedBy { get; }
                new string Category { get; set; }
                new global::System.Nullable<int> ActualDurationMinutes { get; set; }
                new global::System.Nullable<global::System.DateTime> ScheduledStart { get; set; }
                new global::System.Nullable<global::System.Guid> OwningBusinessUnit { get; }
                new global::System.Nullable<int> ScheduledDurationMinutes { get; }
                new global::System.Nullable<global::System.DateTime> ActualStart { get; set; }
                new global::System.Nullable<global::System.DateTime> CreatedOn { get; }
                new global::System.Nullable<global::System.Guid> OwningUser { get; }
                new global::System.Nullable<int> ImportSequenceNumber { get; }
                new global::System.Nullable<int> UTCConversionTimeZoneCode { get; set; }
                new global::System.Nullable<int> TimeZoneRuleVersionNumber { get; set; }
                new global::System.Nullable<global::System.DateTime> OverriddenCreatedOn { get; }
                new global::System.Nullable<global::System.Guid> CreatedOnBehalfBy { get; }
                new global::System.Nullable<global::System.Guid> ModifiedOnBehalfBy { get; }
                new string ActivityTypeCode { get; }
                new global::System.Nullable<bool> IsRegularActivity { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Quote_QuoteClose { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation team_quoteclose { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, string>.Entry
                    Subject = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, string>.Entry(
                        "Subject",
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Subject_Stub,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Subject_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Subject_Validate,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Subject_GetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Subject_SetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Subject_OnValueChanged);
                private static void _Subject_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, string>.Data> c, global::LightSwitchApplication.QuoteClose.DetailsClass d, object sf)
                {
                    c(d, ref d._Subject, sf);
                }
                private static bool _Subject_ComputeIsReadOnly(global::LightSwitchApplication.QuoteClose e)
                {
                    bool result = false;
                    e.Subject_IsReadOnly(ref result);
                    return result;
                }
                private static void _Subject_Validate(global::LightSwitchApplication.QuoteClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Subject_Validate(r);
                }
                private static string _Subject_GetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.ImplementationEntity.Subject;
                }
                private static void _Subject_SetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Subject = v;
                }
                private static void _Subject_OnValueChanged(global::LightSwitchApplication.QuoteClose e)
                {
                    e.Subject_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Guid>.Entry
                    ActivityId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Guid>.Entry(
                        "ActivityId",
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ActivityId_Stub,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ActivityId_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ActivityId_Validate,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ActivityId_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ActivityId_OnValueChanged);
                private static void _ActivityId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Guid>.Data> c, global::LightSwitchApplication.QuoteClose.DetailsClass d, object sf)
                {
                    c(d, ref d._ActivityId, sf);
                }
                private static bool _ActivityId_ComputeIsReadOnly(global::LightSwitchApplication.QuoteClose e)
                {
                    bool result = false;
                    e.ActivityId_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActivityId_Validate(global::LightSwitchApplication.QuoteClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActivityId_Validate(r);
                }
                private static global::System.Guid _ActivityId_GetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.ImplementationEntity.ActivityId;
                }
                private static void _ActivityId_OnValueChanged(global::LightSwitchApplication.QuoteClose e)
                {
                    e.ActivityId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<long>>.Entry
                    VersionNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<long>>.Entry(
                        "VersionNumber",
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._VersionNumber_Stub,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._VersionNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._VersionNumber_Validate,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._VersionNumber_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._VersionNumber_OnValueChanged);
                private static void _VersionNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<long>>.Data> c, global::LightSwitchApplication.QuoteClose.DetailsClass d, object sf)
                {
                    c(d, ref d._VersionNumber, sf);
                }
                private static bool _VersionNumber_ComputeIsReadOnly(global::LightSwitchApplication.QuoteClose e)
                {
                    bool result = false;
                    e.VersionNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _VersionNumber_Validate(global::LightSwitchApplication.QuoteClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.VersionNumber_Validate(r);
                }
                private static global::System.Nullable<long> _VersionNumber_GetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.ImplementationEntity.VersionNumber;
                }
                private static void _VersionNumber_OnValueChanged(global::LightSwitchApplication.QuoteClose e)
                {
                    e.VersionNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    OwnerId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "OwnerId",
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._OwnerId_Stub,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._OwnerId_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._OwnerId_Validate,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._OwnerId_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._OwnerId_OnValueChanged);
                private static void _OwnerId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.QuoteClose.DetailsClass d, object sf)
                {
                    c(d, ref d._OwnerId, sf);
                }
                private static bool _OwnerId_ComputeIsReadOnly(global::LightSwitchApplication.QuoteClose e)
                {
                    bool result = false;
                    e.OwnerId_IsReadOnly(ref result);
                    return result;
                }
                private static void _OwnerId_Validate(global::LightSwitchApplication.QuoteClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OwnerId_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _OwnerId_GetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.ImplementationEntity.OwnerId;
                }
                private static void _OwnerId_OnValueChanged(global::LightSwitchApplication.QuoteClose e)
                {
                    e.OwnerId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<bool>>.Entry
                    IsWorkflowCreated = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "IsWorkflowCreated",
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._IsWorkflowCreated_Stub,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._IsWorkflowCreated_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._IsWorkflowCreated_Validate,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._IsWorkflowCreated_GetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._IsWorkflowCreated_SetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._IsWorkflowCreated_OnValueChanged);
                private static void _IsWorkflowCreated_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.QuoteClose.DetailsClass d, object sf)
                {
                    c(d, ref d._IsWorkflowCreated, sf);
                }
                private static bool _IsWorkflowCreated_ComputeIsReadOnly(global::LightSwitchApplication.QuoteClose e)
                {
                    bool result = false;
                    e.IsWorkflowCreated_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsWorkflowCreated_Validate(global::LightSwitchApplication.QuoteClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsWorkflowCreated_Validate(r);
                }
                private static global::System.Nullable<bool> _IsWorkflowCreated_GetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.ImplementationEntity.IsWorkflowCreated;
                }
                private static void _IsWorkflowCreated_SetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.IsWorkflowCreated = v;
                }
                private static void _IsWorkflowCreated_OnValueChanged(global::LightSwitchApplication.QuoteClose e)
                {
                    e.IsWorkflowCreated_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, string>.Entry
                    Description = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, string>.Entry(
                        "Description",
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Description_Stub,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Description_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Description_Validate,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Description_GetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Description_SetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Description_OnValueChanged);
                private static void _Description_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, string>.Data> c, global::LightSwitchApplication.QuoteClose.DetailsClass d, object sf)
                {
                    c(d, ref d._Description, sf);
                }
                private static bool _Description_ComputeIsReadOnly(global::LightSwitchApplication.QuoteClose e)
                {
                    bool result = false;
                    e.Description_IsReadOnly(ref result);
                    return result;
                }
                private static void _Description_Validate(global::LightSwitchApplication.QuoteClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Description_Validate(r);
                }
                private static string _Description_GetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.ImplementationEntity.Description;
                }
                private static void _Description_SetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Description = v;
                }
                private static void _Description_OnValueChanged(global::LightSwitchApplication.QuoteClose e)
                {
                    e.Description_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>.Entry
                    Revision = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>.Entry(
                        "Revision",
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Revision_Stub,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Revision_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Revision_Validate,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Revision_GetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Revision_SetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Revision_OnValueChanged);
                private static void _Revision_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.QuoteClose.DetailsClass d, object sf)
                {
                    c(d, ref d._Revision, sf);
                }
                private static bool _Revision_ComputeIsReadOnly(global::LightSwitchApplication.QuoteClose e)
                {
                    bool result = false;
                    e.Revision_IsReadOnly(ref result);
                    return result;
                }
                private static void _Revision_Validate(global::LightSwitchApplication.QuoteClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Revision_Validate(r);
                }
                private static global::System.Nullable<int> _Revision_GetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.ImplementationEntity.Revision;
                }
                private static void _Revision_SetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.Revision = v;
                }
                private static void _Revision_OnValueChanged(global::LightSwitchApplication.QuoteClose e)
                {
                    e.Revision_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ModifiedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ModifiedOn",
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ModifiedOn_Stub,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ModifiedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ModifiedOn_Validate,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ModifiedOn_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ModifiedOn_OnValueChanged);
                private static void _ModifiedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.QuoteClose.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedOn, sf);
                }
                private static bool _ModifiedOn_ComputeIsReadOnly(global::LightSwitchApplication.QuoteClose e)
                {
                    bool result = false;
                    e.ModifiedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedOn_Validate(global::LightSwitchApplication.QuoteClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedOn_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ModifiedOn_GetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedOn;
                }
                private static void _ModifiedOn_OnValueChanged(global::LightSwitchApplication.QuoteClose e)
                {
                    e.ModifiedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, string>.Entry
                    Subcategory = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, string>.Entry(
                        "Subcategory",
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Subcategory_Stub,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Subcategory_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Subcategory_Validate,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Subcategory_GetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Subcategory_SetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Subcategory_OnValueChanged);
                private static void _Subcategory_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, string>.Data> c, global::LightSwitchApplication.QuoteClose.DetailsClass d, object sf)
                {
                    c(d, ref d._Subcategory, sf);
                }
                private static bool _Subcategory_ComputeIsReadOnly(global::LightSwitchApplication.QuoteClose e)
                {
                    bool result = false;
                    e.Subcategory_IsReadOnly(ref result);
                    return result;
                }
                private static void _Subcategory_Validate(global::LightSwitchApplication.QuoteClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Subcategory_Validate(r);
                }
                private static string _Subcategory_GetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.ImplementationEntity.Subcategory;
                }
                private static void _Subcategory_SetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Subcategory = v;
                }
                private static void _Subcategory_OnValueChanged(global::LightSwitchApplication.QuoteClose e)
                {
                    e.Subcategory_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<bool>>.Entry
                    IsBilled = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "IsBilled",
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._IsBilled_Stub,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._IsBilled_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._IsBilled_Validate,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._IsBilled_GetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._IsBilled_SetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._IsBilled_OnValueChanged);
                private static void _IsBilled_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.QuoteClose.DetailsClass d, object sf)
                {
                    c(d, ref d._IsBilled, sf);
                }
                private static bool _IsBilled_ComputeIsReadOnly(global::LightSwitchApplication.QuoteClose e)
                {
                    bool result = false;
                    e.IsBilled_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsBilled_Validate(global::LightSwitchApplication.QuoteClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsBilled_Validate(r);
                }
                private static global::System.Nullable<bool> _IsBilled_GetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.ImplementationEntity.IsBilled;
                }
                private static void _IsBilled_SetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.IsBilled = v;
                }
                private static void _IsBilled_OnValueChanged(global::LightSwitchApplication.QuoteClose e)
                {
                    e.IsBilled_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>.Entry
                    StatusCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>.Entry(
                        "StatusCode",
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._StatusCode_Stub,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._StatusCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._StatusCode_Validate,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._StatusCode_GetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._StatusCode_SetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._StatusCode_OnValueChanged);
                private static void _StatusCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.QuoteClose.DetailsClass d, object sf)
                {
                    c(d, ref d._StatusCode, sf);
                }
                private static bool _StatusCode_ComputeIsReadOnly(global::LightSwitchApplication.QuoteClose e)
                {
                    bool result = false;
                    e.StatusCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _StatusCode_Validate(global::LightSwitchApplication.QuoteClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.StatusCode_Validate(r);
                }
                private static global::System.Nullable<int> _StatusCode_GetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.ImplementationEntity.StatusCode;
                }
                private static void _StatusCode_SetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.StatusCode = v;
                }
                private static void _StatusCode_OnValueChanged(global::LightSwitchApplication.QuoteClose e)
                {
                    e.StatusCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "CreatedBy",
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._CreatedBy_Stub,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._CreatedBy_Validate,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._CreatedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._CreatedBy_OnValueChanged);
                private static void _CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.QuoteClose.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedBy, sf);
                }
                private static bool _CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.QuoteClose e)
                {
                    bool result = false;
                    e.CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedBy_Validate(global::LightSwitchApplication.QuoteClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedBy_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _CreatedBy_GetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedBy;
                }
                private static void _CreatedBy_OnValueChanged(global::LightSwitchApplication.QuoteClose e)
                {
                    e.CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ScheduledEnd = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ScheduledEnd",
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ScheduledEnd_Stub,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ScheduledEnd_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ScheduledEnd_Validate,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ScheduledEnd_GetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ScheduledEnd_SetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ScheduledEnd_OnValueChanged);
                private static void _ScheduledEnd_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.QuoteClose.DetailsClass d, object sf)
                {
                    c(d, ref d._ScheduledEnd, sf);
                }
                private static bool _ScheduledEnd_ComputeIsReadOnly(global::LightSwitchApplication.QuoteClose e)
                {
                    bool result = false;
                    e.ScheduledEnd_IsReadOnly(ref result);
                    return result;
                }
                private static void _ScheduledEnd_Validate(global::LightSwitchApplication.QuoteClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ScheduledEnd_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ScheduledEnd_GetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.ImplementationEntity.ScheduledEnd;
                }
                private static void _ScheduledEnd_SetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.ScheduledEnd = global::LightSwitchApplication.QuoteClose.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _ScheduledEnd_OnValueChanged(global::LightSwitchApplication.QuoteClose e)
                {
                    e.ScheduledEnd_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, string>.Entry
                    QuoteNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, string>.Entry(
                        "QuoteNumber",
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._QuoteNumber_Stub,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._QuoteNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._QuoteNumber_Validate,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._QuoteNumber_GetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._QuoteNumber_SetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._QuoteNumber_OnValueChanged);
                private static void _QuoteNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, string>.Data> c, global::LightSwitchApplication.QuoteClose.DetailsClass d, object sf)
                {
                    c(d, ref d._QuoteNumber, sf);
                }
                private static bool _QuoteNumber_ComputeIsReadOnly(global::LightSwitchApplication.QuoteClose e)
                {
                    bool result = false;
                    e.QuoteNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _QuoteNumber_Validate(global::LightSwitchApplication.QuoteClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.QuoteNumber_Validate(r);
                }
                private static string _QuoteNumber_GetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.ImplementationEntity.QuoteNumber;
                }
                private static void _QuoteNumber_SetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d, string v)
                {
                    d.ImplementationEntity.QuoteNumber = v;
                }
                private static void _QuoteNumber_OnValueChanged(global::LightSwitchApplication.QuoteClose e)
                {
                    e.QuoteNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>.Entry
                    StateCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>.Entry(
                        "StateCode",
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._StateCode_Stub,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._StateCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._StateCode_Validate,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._StateCode_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._StateCode_OnValueChanged);
                private static void _StateCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.QuoteClose.DetailsClass d, object sf)
                {
                    c(d, ref d._StateCode, sf);
                }
                private static bool _StateCode_ComputeIsReadOnly(global::LightSwitchApplication.QuoteClose e)
                {
                    bool result = false;
                    e.StateCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _StateCode_Validate(global::LightSwitchApplication.QuoteClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.StateCode_Validate(r);
                }
                private static global::System.Nullable<int> _StateCode_GetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.ImplementationEntity.StateCode;
                }
                private static void _StateCode_OnValueChanged(global::LightSwitchApplication.QuoteClose e)
                {
                    e.StateCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    ServiceId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "ServiceId",
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ServiceId_Stub,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ServiceId_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ServiceId_Validate,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ServiceId_GetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ServiceId_SetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ServiceId_OnValueChanged);
                private static void _ServiceId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.QuoteClose.DetailsClass d, object sf)
                {
                    c(d, ref d._ServiceId, sf);
                }
                private static bool _ServiceId_ComputeIsReadOnly(global::LightSwitchApplication.QuoteClose e)
                {
                    bool result = false;
                    e.ServiceId_IsReadOnly(ref result);
                    return result;
                }
                private static void _ServiceId_Validate(global::LightSwitchApplication.QuoteClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ServiceId_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _ServiceId_GetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.ImplementationEntity.ServiceId;
                }
                private static void _ServiceId_SetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d, global::System.Nullable<global::System.Guid> v)
                {
                    d.ImplementationEntity.ServiceId = v;
                }
                private static void _ServiceId_OnValueChanged(global::LightSwitchApplication.QuoteClose e)
                {
                    e.ServiceId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ActualEnd = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ActualEnd",
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ActualEnd_Stub,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ActualEnd_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ActualEnd_Validate,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ActualEnd_GetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ActualEnd_SetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ActualEnd_OnValueChanged);
                private static void _ActualEnd_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.QuoteClose.DetailsClass d, object sf)
                {
                    c(d, ref d._ActualEnd, sf);
                }
                private static bool _ActualEnd_ComputeIsReadOnly(global::LightSwitchApplication.QuoteClose e)
                {
                    bool result = false;
                    e.ActualEnd_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActualEnd_Validate(global::LightSwitchApplication.QuoteClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActualEnd_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ActualEnd_GetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.ImplementationEntity.ActualEnd;
                }
                private static void _ActualEnd_SetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.ActualEnd = global::LightSwitchApplication.QuoteClose.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _ActualEnd_OnValueChanged(global::LightSwitchApplication.QuoteClose e)
                {
                    e.ActualEnd_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    ModifiedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "ModifiedBy",
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ModifiedBy_Stub,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ModifiedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ModifiedBy_Validate,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ModifiedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ModifiedBy_OnValueChanged);
                private static void _ModifiedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.QuoteClose.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedBy, sf);
                }
                private static bool _ModifiedBy_ComputeIsReadOnly(global::LightSwitchApplication.QuoteClose e)
                {
                    bool result = false;
                    e.ModifiedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedBy_Validate(global::LightSwitchApplication.QuoteClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedBy_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _ModifiedBy_GetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedBy;
                }
                private static void _ModifiedBy_OnValueChanged(global::LightSwitchApplication.QuoteClose e)
                {
                    e.ModifiedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, string>.Entry
                    Category = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, string>.Entry(
                        "Category",
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Category_Stub,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Category_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Category_Validate,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Category_GetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Category_SetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Category_OnValueChanged);
                private static void _Category_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, string>.Data> c, global::LightSwitchApplication.QuoteClose.DetailsClass d, object sf)
                {
                    c(d, ref d._Category, sf);
                }
                private static bool _Category_ComputeIsReadOnly(global::LightSwitchApplication.QuoteClose e)
                {
                    bool result = false;
                    e.Category_IsReadOnly(ref result);
                    return result;
                }
                private static void _Category_Validate(global::LightSwitchApplication.QuoteClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Category_Validate(r);
                }
                private static string _Category_GetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.ImplementationEntity.Category;
                }
                private static void _Category_SetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Category = v;
                }
                private static void _Category_OnValueChanged(global::LightSwitchApplication.QuoteClose e)
                {
                    e.Category_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>.Entry
                    ActualDurationMinutes = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ActualDurationMinutes",
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ActualDurationMinutes_Stub,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ActualDurationMinutes_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ActualDurationMinutes_Validate,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ActualDurationMinutes_GetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ActualDurationMinutes_SetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ActualDurationMinutes_OnValueChanged);
                private static void _ActualDurationMinutes_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.QuoteClose.DetailsClass d, object sf)
                {
                    c(d, ref d._ActualDurationMinutes, sf);
                }
                private static bool _ActualDurationMinutes_ComputeIsReadOnly(global::LightSwitchApplication.QuoteClose e)
                {
                    bool result = false;
                    e.ActualDurationMinutes_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActualDurationMinutes_Validate(global::LightSwitchApplication.QuoteClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActualDurationMinutes_Validate(r);
                }
                private static global::System.Nullable<int> _ActualDurationMinutes_GetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.ImplementationEntity.ActualDurationMinutes;
                }
                private static void _ActualDurationMinutes_SetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ActualDurationMinutes = v;
                }
                private static void _ActualDurationMinutes_OnValueChanged(global::LightSwitchApplication.QuoteClose e)
                {
                    e.ActualDurationMinutes_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ScheduledStart = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ScheduledStart",
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ScheduledStart_Stub,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ScheduledStart_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ScheduledStart_Validate,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ScheduledStart_GetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ScheduledStart_SetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ScheduledStart_OnValueChanged);
                private static void _ScheduledStart_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.QuoteClose.DetailsClass d, object sf)
                {
                    c(d, ref d._ScheduledStart, sf);
                }
                private static bool _ScheduledStart_ComputeIsReadOnly(global::LightSwitchApplication.QuoteClose e)
                {
                    bool result = false;
                    e.ScheduledStart_IsReadOnly(ref result);
                    return result;
                }
                private static void _ScheduledStart_Validate(global::LightSwitchApplication.QuoteClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ScheduledStart_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ScheduledStart_GetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.ImplementationEntity.ScheduledStart;
                }
                private static void _ScheduledStart_SetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.ScheduledStart = global::LightSwitchApplication.QuoteClose.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _ScheduledStart_OnValueChanged(global::LightSwitchApplication.QuoteClose e)
                {
                    e.ScheduledStart_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    OwningBusinessUnit = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "OwningBusinessUnit",
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._OwningBusinessUnit_Stub,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._OwningBusinessUnit_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._OwningBusinessUnit_Validate,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._OwningBusinessUnit_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._OwningBusinessUnit_OnValueChanged);
                private static void _OwningBusinessUnit_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.QuoteClose.DetailsClass d, object sf)
                {
                    c(d, ref d._OwningBusinessUnit, sf);
                }
                private static bool _OwningBusinessUnit_ComputeIsReadOnly(global::LightSwitchApplication.QuoteClose e)
                {
                    bool result = false;
                    e.OwningBusinessUnit_IsReadOnly(ref result);
                    return result;
                }
                private static void _OwningBusinessUnit_Validate(global::LightSwitchApplication.QuoteClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OwningBusinessUnit_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _OwningBusinessUnit_GetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.ImplementationEntity.OwningBusinessUnit;
                }
                private static void _OwningBusinessUnit_OnValueChanged(global::LightSwitchApplication.QuoteClose e)
                {
                    e.OwningBusinessUnit_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>.Entry
                    ScheduledDurationMinutes = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ScheduledDurationMinutes",
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ScheduledDurationMinutes_Stub,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ScheduledDurationMinutes_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ScheduledDurationMinutes_Validate,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ScheduledDurationMinutes_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ScheduledDurationMinutes_OnValueChanged);
                private static void _ScheduledDurationMinutes_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.QuoteClose.DetailsClass d, object sf)
                {
                    c(d, ref d._ScheduledDurationMinutes, sf);
                }
                private static bool _ScheduledDurationMinutes_ComputeIsReadOnly(global::LightSwitchApplication.QuoteClose e)
                {
                    bool result = false;
                    e.ScheduledDurationMinutes_IsReadOnly(ref result);
                    return result;
                }
                private static void _ScheduledDurationMinutes_Validate(global::LightSwitchApplication.QuoteClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ScheduledDurationMinutes_Validate(r);
                }
                private static global::System.Nullable<int> _ScheduledDurationMinutes_GetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.ImplementationEntity.ScheduledDurationMinutes;
                }
                private static void _ScheduledDurationMinutes_OnValueChanged(global::LightSwitchApplication.QuoteClose e)
                {
                    e.ScheduledDurationMinutes_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ActualStart = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ActualStart",
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ActualStart_Stub,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ActualStart_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ActualStart_Validate,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ActualStart_GetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ActualStart_SetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ActualStart_OnValueChanged);
                private static void _ActualStart_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.QuoteClose.DetailsClass d, object sf)
                {
                    c(d, ref d._ActualStart, sf);
                }
                private static bool _ActualStart_ComputeIsReadOnly(global::LightSwitchApplication.QuoteClose e)
                {
                    bool result = false;
                    e.ActualStart_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActualStart_Validate(global::LightSwitchApplication.QuoteClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActualStart_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ActualStart_GetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.ImplementationEntity.ActualStart;
                }
                private static void _ActualStart_SetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.ActualStart = global::LightSwitchApplication.QuoteClose.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _ActualStart_OnValueChanged(global::LightSwitchApplication.QuoteClose e)
                {
                    e.ActualStart_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    CreatedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "CreatedOn",
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._CreatedOn_Stub,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._CreatedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._CreatedOn_Validate,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._CreatedOn_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._CreatedOn_OnValueChanged);
                private static void _CreatedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.QuoteClose.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedOn, sf);
                }
                private static bool _CreatedOn_ComputeIsReadOnly(global::LightSwitchApplication.QuoteClose e)
                {
                    bool result = false;
                    e.CreatedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedOn_Validate(global::LightSwitchApplication.QuoteClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedOn_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _CreatedOn_GetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedOn;
                }
                private static void _CreatedOn_OnValueChanged(global::LightSwitchApplication.QuoteClose e)
                {
                    e.CreatedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    OwningUser = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "OwningUser",
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._OwningUser_Stub,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._OwningUser_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._OwningUser_Validate,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._OwningUser_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._OwningUser_OnValueChanged);
                private static void _OwningUser_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.QuoteClose.DetailsClass d, object sf)
                {
                    c(d, ref d._OwningUser, sf);
                }
                private static bool _OwningUser_ComputeIsReadOnly(global::LightSwitchApplication.QuoteClose e)
                {
                    bool result = false;
                    e.OwningUser_IsReadOnly(ref result);
                    return result;
                }
                private static void _OwningUser_Validate(global::LightSwitchApplication.QuoteClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OwningUser_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _OwningUser_GetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.ImplementationEntity.OwningUser;
                }
                private static void _OwningUser_OnValueChanged(global::LightSwitchApplication.QuoteClose e)
                {
                    e.OwningUser_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>.Entry
                    ImportSequenceNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ImportSequenceNumber",
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ImportSequenceNumber_Stub,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ImportSequenceNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ImportSequenceNumber_Validate,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ImportSequenceNumber_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ImportSequenceNumber_OnValueChanged);
                private static void _ImportSequenceNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.QuoteClose.DetailsClass d, object sf)
                {
                    c(d, ref d._ImportSequenceNumber, sf);
                }
                private static bool _ImportSequenceNumber_ComputeIsReadOnly(global::LightSwitchApplication.QuoteClose e)
                {
                    bool result = false;
                    e.ImportSequenceNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _ImportSequenceNumber_Validate(global::LightSwitchApplication.QuoteClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ImportSequenceNumber_Validate(r);
                }
                private static global::System.Nullable<int> _ImportSequenceNumber_GetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.ImplementationEntity.ImportSequenceNumber;
                }
                private static void _ImportSequenceNumber_OnValueChanged(global::LightSwitchApplication.QuoteClose e)
                {
                    e.ImportSequenceNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>.Entry
                    UTCConversionTimeZoneCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>.Entry(
                        "UTCConversionTimeZoneCode",
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._UTCConversionTimeZoneCode_Stub,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._UTCConversionTimeZoneCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._UTCConversionTimeZoneCode_Validate,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._UTCConversionTimeZoneCode_GetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._UTCConversionTimeZoneCode_SetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._UTCConversionTimeZoneCode_OnValueChanged);
                private static void _UTCConversionTimeZoneCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.QuoteClose.DetailsClass d, object sf)
                {
                    c(d, ref d._UTCConversionTimeZoneCode, sf);
                }
                private static bool _UTCConversionTimeZoneCode_ComputeIsReadOnly(global::LightSwitchApplication.QuoteClose e)
                {
                    bool result = false;
                    e.UTCConversionTimeZoneCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _UTCConversionTimeZoneCode_Validate(global::LightSwitchApplication.QuoteClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.UTCConversionTimeZoneCode_Validate(r);
                }
                private static global::System.Nullable<int> _UTCConversionTimeZoneCode_GetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.ImplementationEntity.UTCConversionTimeZoneCode;
                }
                private static void _UTCConversionTimeZoneCode_SetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.UTCConversionTimeZoneCode = v;
                }
                private static void _UTCConversionTimeZoneCode_OnValueChanged(global::LightSwitchApplication.QuoteClose e)
                {
                    e.UTCConversionTimeZoneCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>.Entry
                    TimeZoneRuleVersionNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>.Entry(
                        "TimeZoneRuleVersionNumber",
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._TimeZoneRuleVersionNumber_Stub,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._TimeZoneRuleVersionNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._TimeZoneRuleVersionNumber_Validate,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._TimeZoneRuleVersionNumber_GetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._TimeZoneRuleVersionNumber_SetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._TimeZoneRuleVersionNumber_OnValueChanged);
                private static void _TimeZoneRuleVersionNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.QuoteClose.DetailsClass d, object sf)
                {
                    c(d, ref d._TimeZoneRuleVersionNumber, sf);
                }
                private static bool _TimeZoneRuleVersionNumber_ComputeIsReadOnly(global::LightSwitchApplication.QuoteClose e)
                {
                    bool result = false;
                    e.TimeZoneRuleVersionNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _TimeZoneRuleVersionNumber_Validate(global::LightSwitchApplication.QuoteClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TimeZoneRuleVersionNumber_Validate(r);
                }
                private static global::System.Nullable<int> _TimeZoneRuleVersionNumber_GetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.ImplementationEntity.TimeZoneRuleVersionNumber;
                }
                private static void _TimeZoneRuleVersionNumber_SetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.TimeZoneRuleVersionNumber = v;
                }
                private static void _TimeZoneRuleVersionNumber_OnValueChanged(global::LightSwitchApplication.QuoteClose e)
                {
                    e.TimeZoneRuleVersionNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    OverriddenCreatedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "OverriddenCreatedOn",
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._OverriddenCreatedOn_Stub,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._OverriddenCreatedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._OverriddenCreatedOn_Validate,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._OverriddenCreatedOn_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._OverriddenCreatedOn_OnValueChanged);
                private static void _OverriddenCreatedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.QuoteClose.DetailsClass d, object sf)
                {
                    c(d, ref d._OverriddenCreatedOn, sf);
                }
                private static bool _OverriddenCreatedOn_ComputeIsReadOnly(global::LightSwitchApplication.QuoteClose e)
                {
                    bool result = false;
                    e.OverriddenCreatedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _OverriddenCreatedOn_Validate(global::LightSwitchApplication.QuoteClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OverriddenCreatedOn_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _OverriddenCreatedOn_GetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.ImplementationEntity.OverriddenCreatedOn;
                }
                private static void _OverriddenCreatedOn_OnValueChanged(global::LightSwitchApplication.QuoteClose e)
                {
                    e.OverriddenCreatedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    CreatedOnBehalfBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "CreatedOnBehalfBy",
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._CreatedOnBehalfBy_Stub,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._CreatedOnBehalfBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._CreatedOnBehalfBy_Validate,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._CreatedOnBehalfBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._CreatedOnBehalfBy_OnValueChanged);
                private static void _CreatedOnBehalfBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.QuoteClose.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedOnBehalfBy, sf);
                }
                private static bool _CreatedOnBehalfBy_ComputeIsReadOnly(global::LightSwitchApplication.QuoteClose e)
                {
                    bool result = false;
                    e.CreatedOnBehalfBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedOnBehalfBy_Validate(global::LightSwitchApplication.QuoteClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedOnBehalfBy_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _CreatedOnBehalfBy_GetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedOnBehalfBy;
                }
                private static void _CreatedOnBehalfBy_OnValueChanged(global::LightSwitchApplication.QuoteClose e)
                {
                    e.CreatedOnBehalfBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    ModifiedOnBehalfBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "ModifiedOnBehalfBy",
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ModifiedOnBehalfBy_Stub,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ModifiedOnBehalfBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ModifiedOnBehalfBy_Validate,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ModifiedOnBehalfBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ModifiedOnBehalfBy_OnValueChanged);
                private static void _ModifiedOnBehalfBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.QuoteClose.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedOnBehalfBy, sf);
                }
                private static bool _ModifiedOnBehalfBy_ComputeIsReadOnly(global::LightSwitchApplication.QuoteClose e)
                {
                    bool result = false;
                    e.ModifiedOnBehalfBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedOnBehalfBy_Validate(global::LightSwitchApplication.QuoteClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedOnBehalfBy_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _ModifiedOnBehalfBy_GetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedOnBehalfBy;
                }
                private static void _ModifiedOnBehalfBy_OnValueChanged(global::LightSwitchApplication.QuoteClose e)
                {
                    e.ModifiedOnBehalfBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, string>.Entry
                    ActivityTypeCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, string>.Entry(
                        "ActivityTypeCode",
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ActivityTypeCode_Stub,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ActivityTypeCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ActivityTypeCode_Validate,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ActivityTypeCode_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._ActivityTypeCode_OnValueChanged);
                private static void _ActivityTypeCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, string>.Data> c, global::LightSwitchApplication.QuoteClose.DetailsClass d, object sf)
                {
                    c(d, ref d._ActivityTypeCode, sf);
                }
                private static bool _ActivityTypeCode_ComputeIsReadOnly(global::LightSwitchApplication.QuoteClose e)
                {
                    bool result = false;
                    e.ActivityTypeCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActivityTypeCode_Validate(global::LightSwitchApplication.QuoteClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActivityTypeCode_Validate(r);
                }
                private static string _ActivityTypeCode_GetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.ImplementationEntity.ActivityTypeCode;
                }
                private static void _ActivityTypeCode_OnValueChanged(global::LightSwitchApplication.QuoteClose e)
                {
                    e.ActivityTypeCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<bool>>.Entry
                    IsRegularActivity = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "IsRegularActivity",
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._IsRegularActivity_Stub,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._IsRegularActivity_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._IsRegularActivity_Validate,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._IsRegularActivity_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._IsRegularActivity_OnValueChanged);
                private static void _IsRegularActivity_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.QuoteClose.DetailsClass d, object sf)
                {
                    c(d, ref d._IsRegularActivity, sf);
                }
                private static bool _IsRegularActivity_ComputeIsReadOnly(global::LightSwitchApplication.QuoteClose e)
                {
                    bool result = false;
                    e.IsRegularActivity_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsRegularActivity_Validate(global::LightSwitchApplication.QuoteClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsRegularActivity_Validate(r);
                }
                private static global::System.Nullable<bool> _IsRegularActivity_GetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.ImplementationEntity.IsRegularActivity;
                }
                private static void _IsRegularActivity_OnValueChanged(global::LightSwitchApplication.QuoteClose e)
                {
                    e.IsRegularActivity_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::LightSwitchApplication.Quote>.Entry
                    Quote_QuoteClose = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::LightSwitchApplication.Quote>.Entry(
                        "Quote_QuoteClose",
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Quote_QuoteClose_Stub,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Quote_QuoteClose_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Quote_QuoteClose_Validate,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Quote_QuoteClose_GetCoreImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Quote_QuoteClose_GetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Quote_QuoteClose_SetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Quote_QuoteClose_Refresh,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._Quote_QuoteClose_OnValueChanged);
                private static void _Quote_QuoteClose_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::LightSwitchApplication.Quote>.Data> c, global::LightSwitchApplication.QuoteClose.DetailsClass d, object sf)
                {
                    c(d, ref d._Quote_QuoteClose, sf);
                }
                private static bool _Quote_QuoteClose_ComputeIsReadOnly(global::LightSwitchApplication.QuoteClose e)
                {
                    bool result = false;
                    e.Quote_QuoteClose_IsReadOnly(ref result);
                    return result;
                }
                private static void _Quote_QuoteClose_Validate(global::LightSwitchApplication.QuoteClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Quote_QuoteClose_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Quote_QuoteClose_GetCoreImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.ImplementationEntity.Quote_QuoteClose;
                }
                private static global::LightSwitchApplication.Quote _Quote_QuoteClose_GetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Quote, global::LightSwitchApplication.Quote.DetailsClass>(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.Quote_QuoteClose, ref d._Quote_QuoteClose);
                }
                private static void _Quote_QuoteClose_SetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d, global::LightSwitchApplication.Quote v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.Quote_QuoteClose, ref d._Quote_QuoteClose, (i, ev) => i.Quote_QuoteClose = ev, v);
                }
                private static void _Quote_QuoteClose_Refresh(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.Quote_QuoteClose, ref d._Quote_QuoteClose);
                }
                private static void _Quote_QuoteClose_OnValueChanged(global::LightSwitchApplication.QuoteClose e)
                {
                    e.Quote_QuoteClose_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::LightSwitchApplication.Team>.Entry
                    team_quoteclose = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::LightSwitchApplication.Team>.Entry(
                        "team_quoteclose",
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._team_quoteclose_Stub,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._team_quoteclose_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._team_quoteclose_Validate,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._team_quoteclose_GetCoreImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._team_quoteclose_GetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._team_quoteclose_SetImplementationValue,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._team_quoteclose_Refresh,
                        global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties._team_quoteclose_OnValueChanged);
                private static void _team_quoteclose_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteClose.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::LightSwitchApplication.Team>.Data> c, global::LightSwitchApplication.QuoteClose.DetailsClass d, object sf)
                {
                    c(d, ref d._team_quoteclose, sf);
                }
                private static bool _team_quoteclose_ComputeIsReadOnly(global::LightSwitchApplication.QuoteClose e)
                {
                    bool result = false;
                    e.team_quoteclose_IsReadOnly(ref result);
                    return result;
                }
                private static void _team_quoteclose_Validate(global::LightSwitchApplication.QuoteClose e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.team_quoteclose_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _team_quoteclose_GetCoreImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.ImplementationEntity.team_quoteclose;
                }
                private static global::LightSwitchApplication.Team _team_quoteclose_GetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Team, global::LightSwitchApplication.Team.DetailsClass>(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.team_quoteclose, ref d._team_quoteclose);
                }
                private static void _team_quoteclose_SetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass d, global::LightSwitchApplication.Team v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.team_quoteclose, ref d._team_quoteclose, (i, ev) => i.team_quoteclose = ev, v);
                }
                private static void _team_quoteclose_Refresh(global::LightSwitchApplication.QuoteClose.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.QuoteClose.DetailsClass.PropertySetProperties.team_quoteclose, ref d._team_quoteclose);
                }
                private static void _team_quoteclose_OnValueChanged(global::LightSwitchApplication.QuoteClose e)
                {
                    e.team_quoteclose_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, string>.Data _Subject;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Guid>.Data _ActivityId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<long>>.Data _VersionNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _OwnerId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<bool>>.Data _IsWorkflowCreated;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, string>.Data _Description;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>.Data _Revision;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ModifiedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, string>.Data _Subcategory;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<bool>>.Data _IsBilled;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>.Data _StatusCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ScheduledEnd;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, string>.Data _QuoteNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>.Data _StateCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _ServiceId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ActualEnd;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _ModifiedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, string>.Data _Category;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>.Data _ActualDurationMinutes;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ScheduledStart;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _OwningBusinessUnit;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>.Data _ScheduledDurationMinutes;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ActualStart;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _CreatedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _OwningUser;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>.Data _ImportSequenceNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>.Data _UTCConversionTimeZoneCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<int>>.Data _TimeZoneRuleVersionNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _OverriddenCreatedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _CreatedOnBehalfBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _ModifiedOnBehalfBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, string>.Data _ActivityTypeCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::System.Nullable<bool>>.Data _IsRegularActivity;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::LightSwitchApplication.Quote>.Data _Quote_QuoteClose;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.QuoteClose, global::LightSwitchApplication.QuoteClose.DetailsClass, global::LightSwitchApplication.Team>.Data _team_quoteclose;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
    public sealed partial class QuoteDetail : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the QuoteDetail entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public QuoteDetail()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public QuoteDetail(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.QuoteDetail> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.QuoteDetail.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QuoteDetail_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QuoteDetail_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Guid QuoteDetailId
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.QuoteDetailId);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QuoteDetailId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QuoteDetailId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QuoteDetailId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> SalesRepId
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.SalesRepId);
            }
            set
            {
                global::LightSwitchApplication.QuoteDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.SalesRepId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SalesRepId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SalesRepId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SalesRepId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> LineItemNumber
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.LineItemNumber);
            }
            set
            {
                global::LightSwitchApplication.QuoteDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.LineItemNumber, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LineItemNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LineItemNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LineItemNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> RequestDeliveryBy
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.RequestDeliveryBy);
            }
            set
            {
                global::LightSwitchApplication.QuoteDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.RequestDeliveryBy, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RequestDeliveryBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RequestDeliveryBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RequestDeliveryBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> Quantity
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.Quantity);
            }
            set
            {
                global::LightSwitchApplication.QuoteDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.Quantity, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Quantity_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Quantity_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Quantity_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> PricingErrorCode
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.PricingErrorCode);
            }
            set
            {
                global::LightSwitchApplication.QuoteDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.PricingErrorCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PricingErrorCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PricingErrorCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PricingErrorCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> ManualDiscountAmount
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ManualDiscountAmount);
            }
            set
            {
                global::LightSwitchApplication.QuoteDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ManualDiscountAmount, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManualDiscountAmount_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManualDiscountAmount_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManualDiscountAmount_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProductDescription
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ProductDescription);
            }
            set
            {
                global::LightSwitchApplication.QuoteDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ProductDescription, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductDescription_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductDescription_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductDescription_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> VolumeDiscountAmount
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.VolumeDiscountAmount);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VolumeDiscountAmount_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VolumeDiscountAmount_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VolumeDiscountAmount_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> PricePerUnit
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.PricePerUnit);
            }
            set
            {
                global::LightSwitchApplication.QuoteDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.PricePerUnit, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PricePerUnit_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PricePerUnit_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PricePerUnit_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> BaseAmount
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.BaseAmount);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BaseAmount_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BaseAmount_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BaseAmount_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> ExtendedAmount
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ExtendedAmount);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExtendedAmount_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExtendedAmount_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExtendedAmount_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Description
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.Description);
            }
            set
            {
                global::LightSwitchApplication.QuoteDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.Description, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ShipTo_Name
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_Name);
            }
            set
            {
                global::LightSwitchApplication.QuoteDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> IsPriceOverridden
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.IsPriceOverridden);
            }
            set
            {
                global::LightSwitchApplication.QuoteDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.IsPriceOverridden, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsPriceOverridden_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsPriceOverridden_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsPriceOverridden_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> Tax
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.Tax);
            }
            set
            {
                global::LightSwitchApplication.QuoteDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.Tax, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tax_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tax_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tax_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ShipTo_Line1
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_Line1);
            }
            set
            {
                global::LightSwitchApplication.QuoteDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_Line1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_Line1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_Line1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_Line1_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.CreatedOn);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ShipTo_Line2
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_Line2);
            }
            set
            {
                global::LightSwitchApplication.QuoteDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_Line2, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_Line2_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_Line2_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_Line2_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.CreatedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ModifiedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ShipTo_Line3
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_Line3);
            }
            set
            {
                global::LightSwitchApplication.QuoteDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_Line3, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_Line3_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_Line3_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_Line3_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ShipTo_City
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_City);
            }
            set
            {
                global::LightSwitchApplication.QuoteDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_City, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_City_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_City_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_City_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ModifiedOn);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ShipTo_StateOrProvince
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_StateOrProvince);
            }
            set
            {
                global::LightSwitchApplication.QuoteDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_StateOrProvince, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_StateOrProvince_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_StateOrProvince_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_StateOrProvince_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ShipTo_Country
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_Country);
            }
            set
            {
                global::LightSwitchApplication.QuoteDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_Country, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_Country_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_Country_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_Country_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ShipTo_PostalCode
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_PostalCode);
            }
            set
            {
                global::LightSwitchApplication.QuoteDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_PostalCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_PostalCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_PostalCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_PostalCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> WillCall
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.WillCall);
            }
            set
            {
                global::LightSwitchApplication.QuoteDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.WillCall, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WillCall_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WillCall_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WillCall_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> IsProductOverridden
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.IsProductOverridden);
            }
            set
            {
                global::LightSwitchApplication.QuoteDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.IsProductOverridden, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsProductOverridden_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsProductOverridden_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsProductOverridden_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ShipTo_Telephone
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_Telephone);
            }
            set
            {
                global::LightSwitchApplication.QuoteDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_Telephone, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_Telephone_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_Telephone_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_Telephone_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ShipTo_Fax
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_Fax);
            }
            set
            {
                global::LightSwitchApplication.QuoteDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_Fax, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_Fax_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_Fax_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_Fax_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ShipTo_FreightTermsCode
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_FreightTermsCode);
            }
            set
            {
                global::LightSwitchApplication.QuoteDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_FreightTermsCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_FreightTermsCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_FreightTermsCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_FreightTermsCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> QuoteStateCode
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.QuoteStateCode);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QuoteStateCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QuoteStateCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QuoteStateCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Guid OwningUser
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.OwningUser);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OwningUser_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OwningUser_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OwningUser_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Guid ShipTo_AddressId
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_AddressId);
            }
            set
            {
                global::LightSwitchApplication.QuoteDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_AddressId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_AddressId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_AddressId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_AddressId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ShipTo_ContactName
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_ContactName);
            }
            set
            {
                global::LightSwitchApplication.QuoteDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_ContactName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_ContactName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_ContactName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipTo_ContactName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Guid OwningBusinessUnit
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.OwningBusinessUnit);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OwningBusinessUnit_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OwningBusinessUnit_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OwningBusinessUnit_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<long> VersionNumber
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.VersionNumber);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ImportSequenceNumber
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ImportSequenceNumber);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ImportSequenceNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ImportSequenceNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ImportSequenceNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> UTCConversionTimeZoneCode
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.UTCConversionTimeZoneCode);
            }
            set
            {
                global::LightSwitchApplication.QuoteDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.UTCConversionTimeZoneCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UTCConversionTimeZoneCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UTCConversionTimeZoneCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UTCConversionTimeZoneCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> OverriddenCreatedOn
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.OverriddenCreatedOn);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OverriddenCreatedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OverriddenCreatedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OverriddenCreatedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> TransactionCurrencyId
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.TransactionCurrencyId);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransactionCurrencyId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransactionCurrencyId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransactionCurrencyId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> ExchangeRate
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ExchangeRate);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExchangeRate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExchangeRate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExchangeRate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> TimeZoneRuleVersionNumber
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.TimeZoneRuleVersionNumber);
            }
            set
            {
                global::LightSwitchApplication.QuoteDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.TimeZoneRuleVersionNumber, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeZoneRuleVersionNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeZoneRuleVersionNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeZoneRuleVersionNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> Tax_Base
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.Tax_Base);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tax_Base_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tax_Base_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tax_Base_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> ExtendedAmount_Base
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ExtendedAmount_Base);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExtendedAmount_Base_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExtendedAmount_Base_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExtendedAmount_Base_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> PricePerUnit_Base
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.PricePerUnit_Base);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PricePerUnit_Base_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PricePerUnit_Base_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PricePerUnit_Base_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> BaseAmount_Base
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.BaseAmount_Base);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BaseAmount_Base_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BaseAmount_Base_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BaseAmount_Base_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> ManualDiscountAmount_Base
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ManualDiscountAmount_Base);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManualDiscountAmount_Base_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManualDiscountAmount_Base_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManualDiscountAmount_Base_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> VolumeDiscountAmount_Base
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.VolumeDiscountAmount_Base);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VolumeDiscountAmount_Base_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VolumeDiscountAmount_Base_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VolumeDiscountAmount_Base_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> OwnerId
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.OwnerId);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OwnerId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OwnerId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OwnerId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> CreatedOnBehalfBy
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.CreatedOnBehalfBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOnBehalfBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOnBehalfBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOnBehalfBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> ModifiedOnBehalfBy
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ModifiedOnBehalfBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedOnBehalfBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedOnBehalfBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedOnBehalfBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.UoM unit_of_measurement_quote_details
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.unit_of_measurement_quote_details);
            }
            set
            {
                global::LightSwitchApplication.QuoteDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.unit_of_measurement_quote_details, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void unit_of_measurement_quote_details_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void unit_of_measurement_quote_details_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void unit_of_measurement_quote_details_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Quote quote_details
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.quote_details);
            }
            set
            {
                global::LightSwitchApplication.QuoteDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.quote_details, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void quote_details_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void quote_details_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void quote_details_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Product product_quote_details
        {
            get
            {
                return global::LightSwitchApplication.QuoteDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.product_quote_details);
            }
            set
            {
                global::LightSwitchApplication.QuoteDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.product_quote_details, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void product_quote_details_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void product_quote_details_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void product_quote_details_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.QuoteDetail,
                global::LightSwitchApplication.QuoteDetail.DetailsClass,
                global::LightSwitchApplication.QuoteDetail.DetailsClass.IImplementation,
                global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.QuoteDetailId;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass>.Entry
                __QuoteDetailEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass>.Entry(
                    global::LightSwitchApplication.QuoteDetail.DetailsClass.__QuoteDetail_CreateNew,
                    global::LightSwitchApplication.QuoteDetail.DetailsClass.__QuoteDetail_Created,
                    global::LightSwitchApplication.QuoteDetail.DetailsClass.__QuoteDetail_AllowSaveWithErrors);
            private static global::LightSwitchApplication.QuoteDetail __QuoteDetail_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.QuoteDetail> es)
            {
                return new global::LightSwitchApplication.QuoteDetail(es);
            }
            private static void __QuoteDetail_Created(global::LightSwitchApplication.QuoteDetail e)
            {
                e.QuoteDetail_Created();
            }
            private static bool __QuoteDetail_AllowSaveWithErrors(global::LightSwitchApplication.QuoteDetail e)
            {
                bool result = false;
                e.QuoteDetail_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Guid> QuoteDetailId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.QuoteDetailId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Guid>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>> SalesRepId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.SalesRepId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>> LineItemNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.LineItemNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.DateTime>> RequestDeliveryBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.RequestDeliveryBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>> Quantity
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.Quantity) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>> PricingErrorCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.PricingErrorCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>> ManualDiscountAmount
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ManualDiscountAmount) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string> ProductDescription
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ProductDescription) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>> VolumeDiscountAmount
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.VolumeDiscountAmount) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>> PricePerUnit
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.PricePerUnit) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>> BaseAmount
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.BaseAmount) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>> ExtendedAmount
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ExtendedAmount) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string> Description
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.Description) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string> ShipTo_Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<bool>> IsPriceOverridden
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.IsPriceOverridden) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>> Tax
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.Tax) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string> ShipTo_Line1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_Line1) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.DateTime>> CreatedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.CreatedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string> ShipTo_Line2
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_Line2) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>> CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>> ModifiedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ModifiedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string> ShipTo_Line3
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_Line3) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string> ShipTo_City
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_City) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.DateTime>> ModifiedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ModifiedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string> ShipTo_StateOrProvince
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_StateOrProvince) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string> ShipTo_Country
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_Country) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string> ShipTo_PostalCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_PostalCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<bool>> WillCall
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.WillCall) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<bool>> IsProductOverridden
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.IsProductOverridden) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string> ShipTo_Telephone
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_Telephone) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string> ShipTo_Fax
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_Fax) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>> ShipTo_FreightTermsCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_FreightTermsCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>> QuoteStateCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.QuoteStateCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Guid> OwningUser
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.OwningUser) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Guid>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Guid> ShipTo_AddressId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_AddressId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Guid>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string> ShipTo_ContactName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ShipTo_ContactName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Guid> OwningBusinessUnit
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.OwningBusinessUnit) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Guid>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<long>> VersionNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.VersionNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<long>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>> ImportSequenceNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ImportSequenceNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>> UTCConversionTimeZoneCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.UTCConversionTimeZoneCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.DateTime>> OverriddenCreatedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.OverriddenCreatedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>> TransactionCurrencyId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.TransactionCurrencyId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>> ExchangeRate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ExchangeRate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>> TimeZoneRuleVersionNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.TimeZoneRuleVersionNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>> Tax_Base
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.Tax_Base) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>> ExtendedAmount_Base
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ExtendedAmount_Base) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>> PricePerUnit_Base
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.PricePerUnit_Base) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>> BaseAmount_Base
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.BaseAmount_Base) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>> ManualDiscountAmount_Base
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ManualDiscountAmount_Base) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>> VolumeDiscountAmount_Base
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.VolumeDiscountAmount_Base) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>> OwnerId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.OwnerId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>> CreatedOnBehalfBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.CreatedOnBehalfBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>> ModifiedOnBehalfBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.ModifiedOnBehalfBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::LightSwitchApplication.UoM> unit_of_measurement_quote_details
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.unit_of_measurement_quote_details) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::LightSwitchApplication.UoM>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::LightSwitchApplication.Quote> quote_details
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.quote_details) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::LightSwitchApplication.Quote>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::LightSwitchApplication.Product> product_quote_details
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.product_quote_details) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::LightSwitchApplication.Product>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new global::System.Guid QuoteDetailId { get; }
                new global::System.Nullable<global::System.Guid> SalesRepId { get; set; }
                new global::System.Nullable<int> LineItemNumber { get; set; }
                new global::System.Nullable<global::System.DateTime> RequestDeliveryBy { get; set; }
                new global::System.Nullable<decimal> Quantity { get; set; }
                new global::System.Nullable<int> PricingErrorCode { get; set; }
                new global::System.Nullable<decimal> ManualDiscountAmount { get; set; }
                new string ProductDescription { get; set; }
                new global::System.Nullable<decimal> VolumeDiscountAmount { get; }
                new global::System.Nullable<decimal> PricePerUnit { get; set; }
                new global::System.Nullable<decimal> BaseAmount { get; }
                new global::System.Nullable<decimal> ExtendedAmount { get; }
                new string Description { get; set; }
                new string ShipTo_Name { get; set; }
                new global::System.Nullable<bool> IsPriceOverridden { get; set; }
                new global::System.Nullable<decimal> Tax { get; set; }
                new string ShipTo_Line1 { get; set; }
                new global::System.Nullable<global::System.DateTime> CreatedOn { get; }
                new string ShipTo_Line2 { get; set; }
                new global::System.Nullable<global::System.Guid> CreatedBy { get; }
                new global::System.Nullable<global::System.Guid> ModifiedBy { get; }
                new string ShipTo_Line3 { get; set; }
                new string ShipTo_City { get; set; }
                new global::System.Nullable<global::System.DateTime> ModifiedOn { get; }
                new string ShipTo_StateOrProvince { get; set; }
                new string ShipTo_Country { get; set; }
                new string ShipTo_PostalCode { get; set; }
                new global::System.Nullable<bool> WillCall { get; set; }
                new global::System.Nullable<bool> IsProductOverridden { get; set; }
                new string ShipTo_Telephone { get; set; }
                new string ShipTo_Fax { get; set; }
                new global::System.Nullable<int> ShipTo_FreightTermsCode { get; set; }
                new global::System.Nullable<int> QuoteStateCode { get; }
                new global::System.Guid OwningUser { get; }
                new global::System.Guid ShipTo_AddressId { get; set; }
                new string ShipTo_ContactName { get; set; }
                new global::System.Guid OwningBusinessUnit { get; }
                new global::System.Nullable<long> VersionNumber { get; }
                new global::System.Nullable<int> ImportSequenceNumber { get; }
                new global::System.Nullable<int> UTCConversionTimeZoneCode { get; set; }
                new global::System.Nullable<global::System.DateTime> OverriddenCreatedOn { get; }
                new global::System.Nullable<global::System.Guid> TransactionCurrencyId { get; }
                new global::System.Nullable<decimal> ExchangeRate { get; }
                new global::System.Nullable<int> TimeZoneRuleVersionNumber { get; set; }
                new global::System.Nullable<decimal> Tax_Base { get; }
                new global::System.Nullable<decimal> ExtendedAmount_Base { get; }
                new global::System.Nullable<decimal> PricePerUnit_Base { get; }
                new global::System.Nullable<decimal> BaseAmount_Base { get; }
                new global::System.Nullable<decimal> ManualDiscountAmount_Base { get; }
                new global::System.Nullable<decimal> VolumeDiscountAmount_Base { get; }
                new global::System.Nullable<global::System.Guid> OwnerId { get; }
                new global::System.Nullable<global::System.Guid> CreatedOnBehalfBy { get; }
                new global::System.Nullable<global::System.Guid> ModifiedOnBehalfBy { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation unit_of_measurement_quote_details { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation quote_details { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation product_quote_details { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Guid>.Entry
                    QuoteDetailId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Guid>.Entry(
                        "QuoteDetailId",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._QuoteDetailId_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._QuoteDetailId_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._QuoteDetailId_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._QuoteDetailId_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._QuoteDetailId_OnValueChanged);
                private static void _QuoteDetailId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Guid>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._QuoteDetailId, sf);
                }
                private static bool _QuoteDetailId_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.QuoteDetailId_IsReadOnly(ref result);
                    return result;
                }
                private static void _QuoteDetailId_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.QuoteDetailId_Validate(r);
                }
                private static global::System.Guid _QuoteDetailId_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.QuoteDetailId;
                }
                private static void _QuoteDetailId_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.QuoteDetailId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    SalesRepId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "SalesRepId",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._SalesRepId_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._SalesRepId_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._SalesRepId_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._SalesRepId_GetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._SalesRepId_SetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._SalesRepId_OnValueChanged);
                private static void _SalesRepId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._SalesRepId, sf);
                }
                private static bool _SalesRepId_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.SalesRepId_IsReadOnly(ref result);
                    return result;
                }
                private static void _SalesRepId_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SalesRepId_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _SalesRepId_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.SalesRepId;
                }
                private static void _SalesRepId_SetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d, global::System.Nullable<global::System.Guid> v)
                {
                    d.ImplementationEntity.SalesRepId = v;
                }
                private static void _SalesRepId_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.SalesRepId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>>.Entry
                    LineItemNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>>.Entry(
                        "LineItemNumber",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._LineItemNumber_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._LineItemNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._LineItemNumber_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._LineItemNumber_GetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._LineItemNumber_SetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._LineItemNumber_OnValueChanged);
                private static void _LineItemNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._LineItemNumber, sf);
                }
                private static bool _LineItemNumber_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.LineItemNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _LineItemNumber_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LineItemNumber_Validate(r);
                }
                private static global::System.Nullable<int> _LineItemNumber_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.LineItemNumber;
                }
                private static void _LineItemNumber_SetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.LineItemNumber = v;
                }
                private static void _LineItemNumber_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.LineItemNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    RequestDeliveryBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "RequestDeliveryBy",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._RequestDeliveryBy_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._RequestDeliveryBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._RequestDeliveryBy_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._RequestDeliveryBy_GetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._RequestDeliveryBy_SetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._RequestDeliveryBy_OnValueChanged);
                private static void _RequestDeliveryBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._RequestDeliveryBy, sf);
                }
                private static bool _RequestDeliveryBy_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.RequestDeliveryBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _RequestDeliveryBy_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RequestDeliveryBy_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _RequestDeliveryBy_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.RequestDeliveryBy;
                }
                private static void _RequestDeliveryBy_SetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.RequestDeliveryBy = global::LightSwitchApplication.QuoteDetail.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _RequestDeliveryBy_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.RequestDeliveryBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Entry
                    Quantity = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "Quantity",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._Quantity_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._Quantity_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._Quantity_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._Quantity_GetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._Quantity_SetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._Quantity_OnValueChanged);
                private static void _Quantity_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Quantity, sf);
                }
                private static bool _Quantity_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.Quantity_IsReadOnly(ref result);
                    return result;
                }
                private static void _Quantity_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Quantity_Validate(r);
                }
                private static global::System.Nullable<decimal> _Quantity_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.Quantity;
                }
                private static void _Quantity_SetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.Quantity = v;
                }
                private static void _Quantity_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.Quantity_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>>.Entry
                    PricingErrorCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>>.Entry(
                        "PricingErrorCode",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._PricingErrorCode_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._PricingErrorCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._PricingErrorCode_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._PricingErrorCode_GetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._PricingErrorCode_SetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._PricingErrorCode_OnValueChanged);
                private static void _PricingErrorCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._PricingErrorCode, sf);
                }
                private static bool _PricingErrorCode_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.PricingErrorCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _PricingErrorCode_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PricingErrorCode_Validate(r);
                }
                private static global::System.Nullable<int> _PricingErrorCode_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.PricingErrorCode;
                }
                private static void _PricingErrorCode_SetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.PricingErrorCode = v;
                }
                private static void _PricingErrorCode_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.PricingErrorCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Entry
                    ManualDiscountAmount = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "ManualDiscountAmount",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ManualDiscountAmount_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ManualDiscountAmount_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ManualDiscountAmount_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ManualDiscountAmount_GetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ManualDiscountAmount_SetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ManualDiscountAmount_OnValueChanged);
                private static void _ManualDiscountAmount_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ManualDiscountAmount, sf);
                }
                private static bool _ManualDiscountAmount_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.ManualDiscountAmount_IsReadOnly(ref result);
                    return result;
                }
                private static void _ManualDiscountAmount_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ManualDiscountAmount_Validate(r);
                }
                private static global::System.Nullable<decimal> _ManualDiscountAmount_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.ManualDiscountAmount;
                }
                private static void _ManualDiscountAmount_SetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.ManualDiscountAmount = v;
                }
                private static void _ManualDiscountAmount_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.ManualDiscountAmount_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Entry
                    ProductDescription = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Entry(
                        "ProductDescription",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ProductDescription_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ProductDescription_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ProductDescription_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ProductDescription_GetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ProductDescription_SetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ProductDescription_OnValueChanged);
                private static void _ProductDescription_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ProductDescription, sf);
                }
                private static bool _ProductDescription_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.ProductDescription_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProductDescription_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProductDescription_Validate(r);
                }
                private static string _ProductDescription_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.ProductDescription;
                }
                private static void _ProductDescription_SetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ProductDescription = v;
                }
                private static void _ProductDescription_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.ProductDescription_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Entry
                    VolumeDiscountAmount = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "VolumeDiscountAmount",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._VolumeDiscountAmount_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._VolumeDiscountAmount_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._VolumeDiscountAmount_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._VolumeDiscountAmount_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._VolumeDiscountAmount_OnValueChanged);
                private static void _VolumeDiscountAmount_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._VolumeDiscountAmount, sf);
                }
                private static bool _VolumeDiscountAmount_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.VolumeDiscountAmount_IsReadOnly(ref result);
                    return result;
                }
                private static void _VolumeDiscountAmount_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.VolumeDiscountAmount_Validate(r);
                }
                private static global::System.Nullable<decimal> _VolumeDiscountAmount_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.VolumeDiscountAmount;
                }
                private static void _VolumeDiscountAmount_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.VolumeDiscountAmount_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Entry
                    PricePerUnit = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "PricePerUnit",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._PricePerUnit_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._PricePerUnit_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._PricePerUnit_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._PricePerUnit_GetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._PricePerUnit_SetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._PricePerUnit_OnValueChanged);
                private static void _PricePerUnit_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._PricePerUnit, sf);
                }
                private static bool _PricePerUnit_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.PricePerUnit_IsReadOnly(ref result);
                    return result;
                }
                private static void _PricePerUnit_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PricePerUnit_Validate(r);
                }
                private static global::System.Nullable<decimal> _PricePerUnit_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.PricePerUnit;
                }
                private static void _PricePerUnit_SetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.PricePerUnit = v;
                }
                private static void _PricePerUnit_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.PricePerUnit_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Entry
                    BaseAmount = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "BaseAmount",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._BaseAmount_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._BaseAmount_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._BaseAmount_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._BaseAmount_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._BaseAmount_OnValueChanged);
                private static void _BaseAmount_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._BaseAmount, sf);
                }
                private static bool _BaseAmount_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.BaseAmount_IsReadOnly(ref result);
                    return result;
                }
                private static void _BaseAmount_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BaseAmount_Validate(r);
                }
                private static global::System.Nullable<decimal> _BaseAmount_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.BaseAmount;
                }
                private static void _BaseAmount_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.BaseAmount_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Entry
                    ExtendedAmount = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "ExtendedAmount",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ExtendedAmount_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ExtendedAmount_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ExtendedAmount_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ExtendedAmount_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ExtendedAmount_OnValueChanged);
                private static void _ExtendedAmount_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ExtendedAmount, sf);
                }
                private static bool _ExtendedAmount_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.ExtendedAmount_IsReadOnly(ref result);
                    return result;
                }
                private static void _ExtendedAmount_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ExtendedAmount_Validate(r);
                }
                private static global::System.Nullable<decimal> _ExtendedAmount_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.ExtendedAmount;
                }
                private static void _ExtendedAmount_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.ExtendedAmount_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Entry
                    Description = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Entry(
                        "Description",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._Description_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._Description_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._Description_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._Description_GetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._Description_SetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._Description_OnValueChanged);
                private static void _Description_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Description, sf);
                }
                private static bool _Description_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.Description_IsReadOnly(ref result);
                    return result;
                }
                private static void _Description_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Description_Validate(r);
                }
                private static string _Description_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.Description;
                }
                private static void _Description_SetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Description = v;
                }
                private static void _Description_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.Description_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Entry
                    ShipTo_Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Entry(
                        "ShipTo_Name",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Name_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Name_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Name_GetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Name_SetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Name_OnValueChanged);
                private static void _ShipTo_Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ShipTo_Name, sf);
                }
                private static bool _ShipTo_Name_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.ShipTo_Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _ShipTo_Name_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ShipTo_Name_Validate(r);
                }
                private static string _ShipTo_Name_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.ShipTo_Name;
                }
                private static void _ShipTo_Name_SetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ShipTo_Name = v;
                }
                private static void _ShipTo_Name_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.ShipTo_Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<bool>>.Entry
                    IsPriceOverridden = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "IsPriceOverridden",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._IsPriceOverridden_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._IsPriceOverridden_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._IsPriceOverridden_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._IsPriceOverridden_GetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._IsPriceOverridden_SetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._IsPriceOverridden_OnValueChanged);
                private static void _IsPriceOverridden_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._IsPriceOverridden, sf);
                }
                private static bool _IsPriceOverridden_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.IsPriceOverridden_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsPriceOverridden_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsPriceOverridden_Validate(r);
                }
                private static global::System.Nullable<bool> _IsPriceOverridden_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.IsPriceOverridden;
                }
                private static void _IsPriceOverridden_SetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.IsPriceOverridden = v;
                }
                private static void _IsPriceOverridden_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.IsPriceOverridden_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Entry
                    Tax = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "Tax",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._Tax_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._Tax_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._Tax_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._Tax_GetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._Tax_SetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._Tax_OnValueChanged);
                private static void _Tax_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Tax, sf);
                }
                private static bool _Tax_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.Tax_IsReadOnly(ref result);
                    return result;
                }
                private static void _Tax_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Tax_Validate(r);
                }
                private static global::System.Nullable<decimal> _Tax_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.Tax;
                }
                private static void _Tax_SetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.Tax = v;
                }
                private static void _Tax_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.Tax_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Entry
                    ShipTo_Line1 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Entry(
                        "ShipTo_Line1",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Line1_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Line1_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Line1_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Line1_GetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Line1_SetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Line1_OnValueChanged);
                private static void _ShipTo_Line1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ShipTo_Line1, sf);
                }
                private static bool _ShipTo_Line1_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.ShipTo_Line1_IsReadOnly(ref result);
                    return result;
                }
                private static void _ShipTo_Line1_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ShipTo_Line1_Validate(r);
                }
                private static string _ShipTo_Line1_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.ShipTo_Line1;
                }
                private static void _ShipTo_Line1_SetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ShipTo_Line1 = v;
                }
                private static void _ShipTo_Line1_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.ShipTo_Line1_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    CreatedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "CreatedOn",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._CreatedOn_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._CreatedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._CreatedOn_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._CreatedOn_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._CreatedOn_OnValueChanged);
                private static void _CreatedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedOn, sf);
                }
                private static bool _CreatedOn_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.CreatedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedOn_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedOn_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _CreatedOn_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedOn;
                }
                private static void _CreatedOn_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.CreatedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Entry
                    ShipTo_Line2 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Entry(
                        "ShipTo_Line2",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Line2_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Line2_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Line2_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Line2_GetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Line2_SetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Line2_OnValueChanged);
                private static void _ShipTo_Line2_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ShipTo_Line2, sf);
                }
                private static bool _ShipTo_Line2_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.ShipTo_Line2_IsReadOnly(ref result);
                    return result;
                }
                private static void _ShipTo_Line2_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ShipTo_Line2_Validate(r);
                }
                private static string _ShipTo_Line2_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.ShipTo_Line2;
                }
                private static void _ShipTo_Line2_SetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ShipTo_Line2 = v;
                }
                private static void _ShipTo_Line2_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.ShipTo_Line2_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "CreatedBy",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._CreatedBy_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._CreatedBy_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._CreatedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._CreatedBy_OnValueChanged);
                private static void _CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedBy, sf);
                }
                private static bool _CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedBy_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedBy_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _CreatedBy_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedBy;
                }
                private static void _CreatedBy_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    ModifiedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "ModifiedBy",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ModifiedBy_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ModifiedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ModifiedBy_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ModifiedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ModifiedBy_OnValueChanged);
                private static void _ModifiedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedBy, sf);
                }
                private static bool _ModifiedBy_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.ModifiedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedBy_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedBy_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _ModifiedBy_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedBy;
                }
                private static void _ModifiedBy_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.ModifiedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Entry
                    ShipTo_Line3 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Entry(
                        "ShipTo_Line3",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Line3_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Line3_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Line3_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Line3_GetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Line3_SetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Line3_OnValueChanged);
                private static void _ShipTo_Line3_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ShipTo_Line3, sf);
                }
                private static bool _ShipTo_Line3_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.ShipTo_Line3_IsReadOnly(ref result);
                    return result;
                }
                private static void _ShipTo_Line3_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ShipTo_Line3_Validate(r);
                }
                private static string _ShipTo_Line3_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.ShipTo_Line3;
                }
                private static void _ShipTo_Line3_SetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ShipTo_Line3 = v;
                }
                private static void _ShipTo_Line3_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.ShipTo_Line3_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Entry
                    ShipTo_City = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Entry(
                        "ShipTo_City",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_City_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_City_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_City_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_City_GetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_City_SetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_City_OnValueChanged);
                private static void _ShipTo_City_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ShipTo_City, sf);
                }
                private static bool _ShipTo_City_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.ShipTo_City_IsReadOnly(ref result);
                    return result;
                }
                private static void _ShipTo_City_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ShipTo_City_Validate(r);
                }
                private static string _ShipTo_City_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.ShipTo_City;
                }
                private static void _ShipTo_City_SetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ShipTo_City = v;
                }
                private static void _ShipTo_City_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.ShipTo_City_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ModifiedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ModifiedOn",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ModifiedOn_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ModifiedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ModifiedOn_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ModifiedOn_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ModifiedOn_OnValueChanged);
                private static void _ModifiedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedOn, sf);
                }
                private static bool _ModifiedOn_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.ModifiedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedOn_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedOn_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ModifiedOn_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedOn;
                }
                private static void _ModifiedOn_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.ModifiedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Entry
                    ShipTo_StateOrProvince = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Entry(
                        "ShipTo_StateOrProvince",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_StateOrProvince_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_StateOrProvince_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_StateOrProvince_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_StateOrProvince_GetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_StateOrProvince_SetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_StateOrProvince_OnValueChanged);
                private static void _ShipTo_StateOrProvince_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ShipTo_StateOrProvince, sf);
                }
                private static bool _ShipTo_StateOrProvince_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.ShipTo_StateOrProvince_IsReadOnly(ref result);
                    return result;
                }
                private static void _ShipTo_StateOrProvince_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ShipTo_StateOrProvince_Validate(r);
                }
                private static string _ShipTo_StateOrProvince_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.ShipTo_StateOrProvince;
                }
                private static void _ShipTo_StateOrProvince_SetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ShipTo_StateOrProvince = v;
                }
                private static void _ShipTo_StateOrProvince_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.ShipTo_StateOrProvince_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Entry
                    ShipTo_Country = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Entry(
                        "ShipTo_Country",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Country_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Country_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Country_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Country_GetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Country_SetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Country_OnValueChanged);
                private static void _ShipTo_Country_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ShipTo_Country, sf);
                }
                private static bool _ShipTo_Country_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.ShipTo_Country_IsReadOnly(ref result);
                    return result;
                }
                private static void _ShipTo_Country_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ShipTo_Country_Validate(r);
                }
                private static string _ShipTo_Country_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.ShipTo_Country;
                }
                private static void _ShipTo_Country_SetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ShipTo_Country = v;
                }
                private static void _ShipTo_Country_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.ShipTo_Country_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Entry
                    ShipTo_PostalCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Entry(
                        "ShipTo_PostalCode",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_PostalCode_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_PostalCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_PostalCode_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_PostalCode_GetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_PostalCode_SetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_PostalCode_OnValueChanged);
                private static void _ShipTo_PostalCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ShipTo_PostalCode, sf);
                }
                private static bool _ShipTo_PostalCode_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.ShipTo_PostalCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _ShipTo_PostalCode_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ShipTo_PostalCode_Validate(r);
                }
                private static string _ShipTo_PostalCode_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.ShipTo_PostalCode;
                }
                private static void _ShipTo_PostalCode_SetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ShipTo_PostalCode = v;
                }
                private static void _ShipTo_PostalCode_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.ShipTo_PostalCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<bool>>.Entry
                    WillCall = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "WillCall",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._WillCall_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._WillCall_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._WillCall_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._WillCall_GetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._WillCall_SetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._WillCall_OnValueChanged);
                private static void _WillCall_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._WillCall, sf);
                }
                private static bool _WillCall_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.WillCall_IsReadOnly(ref result);
                    return result;
                }
                private static void _WillCall_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.WillCall_Validate(r);
                }
                private static global::System.Nullable<bool> _WillCall_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.WillCall;
                }
                private static void _WillCall_SetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.WillCall = v;
                }
                private static void _WillCall_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.WillCall_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<bool>>.Entry
                    IsProductOverridden = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "IsProductOverridden",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._IsProductOverridden_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._IsProductOverridden_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._IsProductOverridden_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._IsProductOverridden_GetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._IsProductOverridden_SetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._IsProductOverridden_OnValueChanged);
                private static void _IsProductOverridden_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._IsProductOverridden, sf);
                }
                private static bool _IsProductOverridden_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.IsProductOverridden_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsProductOverridden_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsProductOverridden_Validate(r);
                }
                private static global::System.Nullable<bool> _IsProductOverridden_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.IsProductOverridden;
                }
                private static void _IsProductOverridden_SetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.IsProductOverridden = v;
                }
                private static void _IsProductOverridden_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.IsProductOverridden_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Entry
                    ShipTo_Telephone = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Entry(
                        "ShipTo_Telephone",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Telephone_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Telephone_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Telephone_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Telephone_GetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Telephone_SetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Telephone_OnValueChanged);
                private static void _ShipTo_Telephone_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ShipTo_Telephone, sf);
                }
                private static bool _ShipTo_Telephone_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.ShipTo_Telephone_IsReadOnly(ref result);
                    return result;
                }
                private static void _ShipTo_Telephone_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ShipTo_Telephone_Validate(r);
                }
                private static string _ShipTo_Telephone_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.ShipTo_Telephone;
                }
                private static void _ShipTo_Telephone_SetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ShipTo_Telephone = v;
                }
                private static void _ShipTo_Telephone_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.ShipTo_Telephone_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Entry
                    ShipTo_Fax = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Entry(
                        "ShipTo_Fax",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Fax_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Fax_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Fax_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Fax_GetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Fax_SetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_Fax_OnValueChanged);
                private static void _ShipTo_Fax_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ShipTo_Fax, sf);
                }
                private static bool _ShipTo_Fax_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.ShipTo_Fax_IsReadOnly(ref result);
                    return result;
                }
                private static void _ShipTo_Fax_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ShipTo_Fax_Validate(r);
                }
                private static string _ShipTo_Fax_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.ShipTo_Fax;
                }
                private static void _ShipTo_Fax_SetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ShipTo_Fax = v;
                }
                private static void _ShipTo_Fax_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.ShipTo_Fax_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>>.Entry
                    ShipTo_FreightTermsCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ShipTo_FreightTermsCode",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_FreightTermsCode_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_FreightTermsCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_FreightTermsCode_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_FreightTermsCode_GetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_FreightTermsCode_SetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_FreightTermsCode_OnValueChanged);
                private static void _ShipTo_FreightTermsCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ShipTo_FreightTermsCode, sf);
                }
                private static bool _ShipTo_FreightTermsCode_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.ShipTo_FreightTermsCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _ShipTo_FreightTermsCode_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ShipTo_FreightTermsCode_Validate(r);
                }
                private static global::System.Nullable<int> _ShipTo_FreightTermsCode_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.ShipTo_FreightTermsCode;
                }
                private static void _ShipTo_FreightTermsCode_SetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ShipTo_FreightTermsCode = v;
                }
                private static void _ShipTo_FreightTermsCode_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.ShipTo_FreightTermsCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>>.Entry
                    QuoteStateCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>>.Entry(
                        "QuoteStateCode",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._QuoteStateCode_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._QuoteStateCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._QuoteStateCode_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._QuoteStateCode_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._QuoteStateCode_OnValueChanged);
                private static void _QuoteStateCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._QuoteStateCode, sf);
                }
                private static bool _QuoteStateCode_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.QuoteStateCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _QuoteStateCode_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.QuoteStateCode_Validate(r);
                }
                private static global::System.Nullable<int> _QuoteStateCode_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.QuoteStateCode;
                }
                private static void _QuoteStateCode_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.QuoteStateCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Guid>.Entry
                    OwningUser = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Guid>.Entry(
                        "OwningUser",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._OwningUser_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._OwningUser_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._OwningUser_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._OwningUser_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._OwningUser_OnValueChanged);
                private static void _OwningUser_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Guid>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._OwningUser, sf);
                }
                private static bool _OwningUser_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.OwningUser_IsReadOnly(ref result);
                    return result;
                }
                private static void _OwningUser_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OwningUser_Validate(r);
                }
                private static global::System.Guid _OwningUser_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.OwningUser;
                }
                private static void _OwningUser_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.OwningUser_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Guid>.Entry
                    ShipTo_AddressId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Guid>.Entry(
                        "ShipTo_AddressId",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_AddressId_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_AddressId_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_AddressId_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_AddressId_GetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_AddressId_SetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_AddressId_OnValueChanged);
                private static void _ShipTo_AddressId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Guid>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ShipTo_AddressId, sf);
                }
                private static bool _ShipTo_AddressId_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.ShipTo_AddressId_IsReadOnly(ref result);
                    return result;
                }
                private static void _ShipTo_AddressId_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ShipTo_AddressId_Validate(r);
                }
                private static global::System.Guid _ShipTo_AddressId_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.ShipTo_AddressId;
                }
                private static void _ShipTo_AddressId_SetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d, global::System.Guid v)
                {
                    d.ImplementationEntity.ShipTo_AddressId = v;
                }
                private static void _ShipTo_AddressId_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.ShipTo_AddressId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Entry
                    ShipTo_ContactName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Entry(
                        "ShipTo_ContactName",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_ContactName_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_ContactName_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_ContactName_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_ContactName_GetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_ContactName_SetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ShipTo_ContactName_OnValueChanged);
                private static void _ShipTo_ContactName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ShipTo_ContactName, sf);
                }
                private static bool _ShipTo_ContactName_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.ShipTo_ContactName_IsReadOnly(ref result);
                    return result;
                }
                private static void _ShipTo_ContactName_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ShipTo_ContactName_Validate(r);
                }
                private static string _ShipTo_ContactName_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.ShipTo_ContactName;
                }
                private static void _ShipTo_ContactName_SetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ShipTo_ContactName = v;
                }
                private static void _ShipTo_ContactName_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.ShipTo_ContactName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Guid>.Entry
                    OwningBusinessUnit = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Guid>.Entry(
                        "OwningBusinessUnit",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._OwningBusinessUnit_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._OwningBusinessUnit_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._OwningBusinessUnit_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._OwningBusinessUnit_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._OwningBusinessUnit_OnValueChanged);
                private static void _OwningBusinessUnit_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Guid>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._OwningBusinessUnit, sf);
                }
                private static bool _OwningBusinessUnit_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.OwningBusinessUnit_IsReadOnly(ref result);
                    return result;
                }
                private static void _OwningBusinessUnit_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OwningBusinessUnit_Validate(r);
                }
                private static global::System.Guid _OwningBusinessUnit_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.OwningBusinessUnit;
                }
                private static void _OwningBusinessUnit_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.OwningBusinessUnit_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<long>>.Entry
                    VersionNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<long>>.Entry(
                        "VersionNumber",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._VersionNumber_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._VersionNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._VersionNumber_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._VersionNumber_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._VersionNumber_OnValueChanged);
                private static void _VersionNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<long>>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._VersionNumber, sf);
                }
                private static bool _VersionNumber_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.VersionNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _VersionNumber_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.VersionNumber_Validate(r);
                }
                private static global::System.Nullable<long> _VersionNumber_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.VersionNumber;
                }
                private static void _VersionNumber_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.VersionNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>>.Entry
                    ImportSequenceNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ImportSequenceNumber",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ImportSequenceNumber_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ImportSequenceNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ImportSequenceNumber_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ImportSequenceNumber_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ImportSequenceNumber_OnValueChanged);
                private static void _ImportSequenceNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ImportSequenceNumber, sf);
                }
                private static bool _ImportSequenceNumber_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.ImportSequenceNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _ImportSequenceNumber_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ImportSequenceNumber_Validate(r);
                }
                private static global::System.Nullable<int> _ImportSequenceNumber_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.ImportSequenceNumber;
                }
                private static void _ImportSequenceNumber_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.ImportSequenceNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>>.Entry
                    UTCConversionTimeZoneCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>>.Entry(
                        "UTCConversionTimeZoneCode",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._UTCConversionTimeZoneCode_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._UTCConversionTimeZoneCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._UTCConversionTimeZoneCode_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._UTCConversionTimeZoneCode_GetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._UTCConversionTimeZoneCode_SetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._UTCConversionTimeZoneCode_OnValueChanged);
                private static void _UTCConversionTimeZoneCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._UTCConversionTimeZoneCode, sf);
                }
                private static bool _UTCConversionTimeZoneCode_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.UTCConversionTimeZoneCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _UTCConversionTimeZoneCode_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.UTCConversionTimeZoneCode_Validate(r);
                }
                private static global::System.Nullable<int> _UTCConversionTimeZoneCode_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.UTCConversionTimeZoneCode;
                }
                private static void _UTCConversionTimeZoneCode_SetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.UTCConversionTimeZoneCode = v;
                }
                private static void _UTCConversionTimeZoneCode_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.UTCConversionTimeZoneCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    OverriddenCreatedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "OverriddenCreatedOn",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._OverriddenCreatedOn_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._OverriddenCreatedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._OverriddenCreatedOn_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._OverriddenCreatedOn_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._OverriddenCreatedOn_OnValueChanged);
                private static void _OverriddenCreatedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._OverriddenCreatedOn, sf);
                }
                private static bool _OverriddenCreatedOn_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.OverriddenCreatedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _OverriddenCreatedOn_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OverriddenCreatedOn_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _OverriddenCreatedOn_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.OverriddenCreatedOn;
                }
                private static void _OverriddenCreatedOn_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.OverriddenCreatedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    TransactionCurrencyId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "TransactionCurrencyId",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._TransactionCurrencyId_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._TransactionCurrencyId_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._TransactionCurrencyId_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._TransactionCurrencyId_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._TransactionCurrencyId_OnValueChanged);
                private static void _TransactionCurrencyId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._TransactionCurrencyId, sf);
                }
                private static bool _TransactionCurrencyId_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.TransactionCurrencyId_IsReadOnly(ref result);
                    return result;
                }
                private static void _TransactionCurrencyId_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TransactionCurrencyId_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _TransactionCurrencyId_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.TransactionCurrencyId;
                }
                private static void _TransactionCurrencyId_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.TransactionCurrencyId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Entry
                    ExchangeRate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "ExchangeRate",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ExchangeRate_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ExchangeRate_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ExchangeRate_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ExchangeRate_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ExchangeRate_OnValueChanged);
                private static void _ExchangeRate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ExchangeRate, sf);
                }
                private static bool _ExchangeRate_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.ExchangeRate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ExchangeRate_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ExchangeRate_Validate(r);
                }
                private static global::System.Nullable<decimal> _ExchangeRate_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.ExchangeRate;
                }
                private static void _ExchangeRate_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.ExchangeRate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>>.Entry
                    TimeZoneRuleVersionNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>>.Entry(
                        "TimeZoneRuleVersionNumber",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._TimeZoneRuleVersionNumber_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._TimeZoneRuleVersionNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._TimeZoneRuleVersionNumber_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._TimeZoneRuleVersionNumber_GetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._TimeZoneRuleVersionNumber_SetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._TimeZoneRuleVersionNumber_OnValueChanged);
                private static void _TimeZoneRuleVersionNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._TimeZoneRuleVersionNumber, sf);
                }
                private static bool _TimeZoneRuleVersionNumber_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.TimeZoneRuleVersionNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _TimeZoneRuleVersionNumber_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TimeZoneRuleVersionNumber_Validate(r);
                }
                private static global::System.Nullable<int> _TimeZoneRuleVersionNumber_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.TimeZoneRuleVersionNumber;
                }
                private static void _TimeZoneRuleVersionNumber_SetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.TimeZoneRuleVersionNumber = v;
                }
                private static void _TimeZoneRuleVersionNumber_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.TimeZoneRuleVersionNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Entry
                    Tax_Base = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "Tax_Base",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._Tax_Base_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._Tax_Base_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._Tax_Base_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._Tax_Base_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._Tax_Base_OnValueChanged);
                private static void _Tax_Base_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Tax_Base, sf);
                }
                private static bool _Tax_Base_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.Tax_Base_IsReadOnly(ref result);
                    return result;
                }
                private static void _Tax_Base_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Tax_Base_Validate(r);
                }
                private static global::System.Nullable<decimal> _Tax_Base_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.Tax_Base;
                }
                private static void _Tax_Base_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.Tax_Base_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Entry
                    ExtendedAmount_Base = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "ExtendedAmount_Base",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ExtendedAmount_Base_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ExtendedAmount_Base_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ExtendedAmount_Base_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ExtendedAmount_Base_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ExtendedAmount_Base_OnValueChanged);
                private static void _ExtendedAmount_Base_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ExtendedAmount_Base, sf);
                }
                private static bool _ExtendedAmount_Base_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.ExtendedAmount_Base_IsReadOnly(ref result);
                    return result;
                }
                private static void _ExtendedAmount_Base_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ExtendedAmount_Base_Validate(r);
                }
                private static global::System.Nullable<decimal> _ExtendedAmount_Base_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.ExtendedAmount_Base;
                }
                private static void _ExtendedAmount_Base_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.ExtendedAmount_Base_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Entry
                    PricePerUnit_Base = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "PricePerUnit_Base",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._PricePerUnit_Base_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._PricePerUnit_Base_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._PricePerUnit_Base_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._PricePerUnit_Base_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._PricePerUnit_Base_OnValueChanged);
                private static void _PricePerUnit_Base_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._PricePerUnit_Base, sf);
                }
                private static bool _PricePerUnit_Base_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.PricePerUnit_Base_IsReadOnly(ref result);
                    return result;
                }
                private static void _PricePerUnit_Base_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PricePerUnit_Base_Validate(r);
                }
                private static global::System.Nullable<decimal> _PricePerUnit_Base_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.PricePerUnit_Base;
                }
                private static void _PricePerUnit_Base_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.PricePerUnit_Base_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Entry
                    BaseAmount_Base = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "BaseAmount_Base",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._BaseAmount_Base_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._BaseAmount_Base_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._BaseAmount_Base_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._BaseAmount_Base_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._BaseAmount_Base_OnValueChanged);
                private static void _BaseAmount_Base_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._BaseAmount_Base, sf);
                }
                private static bool _BaseAmount_Base_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.BaseAmount_Base_IsReadOnly(ref result);
                    return result;
                }
                private static void _BaseAmount_Base_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BaseAmount_Base_Validate(r);
                }
                private static global::System.Nullable<decimal> _BaseAmount_Base_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.BaseAmount_Base;
                }
                private static void _BaseAmount_Base_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.BaseAmount_Base_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Entry
                    ManualDiscountAmount_Base = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "ManualDiscountAmount_Base",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ManualDiscountAmount_Base_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ManualDiscountAmount_Base_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ManualDiscountAmount_Base_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ManualDiscountAmount_Base_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ManualDiscountAmount_Base_OnValueChanged);
                private static void _ManualDiscountAmount_Base_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ManualDiscountAmount_Base, sf);
                }
                private static bool _ManualDiscountAmount_Base_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.ManualDiscountAmount_Base_IsReadOnly(ref result);
                    return result;
                }
                private static void _ManualDiscountAmount_Base_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ManualDiscountAmount_Base_Validate(r);
                }
                private static global::System.Nullable<decimal> _ManualDiscountAmount_Base_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.ManualDiscountAmount_Base;
                }
                private static void _ManualDiscountAmount_Base_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.ManualDiscountAmount_Base_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Entry
                    VolumeDiscountAmount_Base = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "VolumeDiscountAmount_Base",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._VolumeDiscountAmount_Base_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._VolumeDiscountAmount_Base_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._VolumeDiscountAmount_Base_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._VolumeDiscountAmount_Base_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._VolumeDiscountAmount_Base_OnValueChanged);
                private static void _VolumeDiscountAmount_Base_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._VolumeDiscountAmount_Base, sf);
                }
                private static bool _VolumeDiscountAmount_Base_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.VolumeDiscountAmount_Base_IsReadOnly(ref result);
                    return result;
                }
                private static void _VolumeDiscountAmount_Base_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.VolumeDiscountAmount_Base_Validate(r);
                }
                private static global::System.Nullable<decimal> _VolumeDiscountAmount_Base_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.VolumeDiscountAmount_Base;
                }
                private static void _VolumeDiscountAmount_Base_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.VolumeDiscountAmount_Base_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    OwnerId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "OwnerId",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._OwnerId_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._OwnerId_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._OwnerId_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._OwnerId_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._OwnerId_OnValueChanged);
                private static void _OwnerId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._OwnerId, sf);
                }
                private static bool _OwnerId_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.OwnerId_IsReadOnly(ref result);
                    return result;
                }
                private static void _OwnerId_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OwnerId_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _OwnerId_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.OwnerId;
                }
                private static void _OwnerId_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.OwnerId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    CreatedOnBehalfBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "CreatedOnBehalfBy",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._CreatedOnBehalfBy_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._CreatedOnBehalfBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._CreatedOnBehalfBy_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._CreatedOnBehalfBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._CreatedOnBehalfBy_OnValueChanged);
                private static void _CreatedOnBehalfBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedOnBehalfBy, sf);
                }
                private static bool _CreatedOnBehalfBy_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.CreatedOnBehalfBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedOnBehalfBy_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedOnBehalfBy_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _CreatedOnBehalfBy_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedOnBehalfBy;
                }
                private static void _CreatedOnBehalfBy_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.CreatedOnBehalfBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    ModifiedOnBehalfBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "ModifiedOnBehalfBy",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ModifiedOnBehalfBy_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ModifiedOnBehalfBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ModifiedOnBehalfBy_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ModifiedOnBehalfBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._ModifiedOnBehalfBy_OnValueChanged);
                private static void _ModifiedOnBehalfBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedOnBehalfBy, sf);
                }
                private static bool _ModifiedOnBehalfBy_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.ModifiedOnBehalfBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedOnBehalfBy_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedOnBehalfBy_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _ModifiedOnBehalfBy_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedOnBehalfBy;
                }
                private static void _ModifiedOnBehalfBy_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.ModifiedOnBehalfBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::LightSwitchApplication.UoM>.Entry
                    unit_of_measurement_quote_details = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::LightSwitchApplication.UoM>.Entry(
                        "unit_of_measurement_quote_details",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._unit_of_measurement_quote_details_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._unit_of_measurement_quote_details_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._unit_of_measurement_quote_details_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._unit_of_measurement_quote_details_GetCoreImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._unit_of_measurement_quote_details_GetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._unit_of_measurement_quote_details_SetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._unit_of_measurement_quote_details_Refresh,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._unit_of_measurement_quote_details_OnValueChanged);
                private static void _unit_of_measurement_quote_details_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::LightSwitchApplication.UoM>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._unit_of_measurement_quote_details, sf);
                }
                private static bool _unit_of_measurement_quote_details_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.unit_of_measurement_quote_details_IsReadOnly(ref result);
                    return result;
                }
                private static void _unit_of_measurement_quote_details_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.unit_of_measurement_quote_details_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _unit_of_measurement_quote_details_GetCoreImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.unit_of_measurement_quote_details;
                }
                private static global::LightSwitchApplication.UoM _unit_of_measurement_quote_details_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.UoM, global::LightSwitchApplication.UoM.DetailsClass>(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.unit_of_measurement_quote_details, ref d._unit_of_measurement_quote_details);
                }
                private static void _unit_of_measurement_quote_details_SetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d, global::LightSwitchApplication.UoM v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.unit_of_measurement_quote_details, ref d._unit_of_measurement_quote_details, (i, ev) => i.unit_of_measurement_quote_details = ev, v);
                }
                private static void _unit_of_measurement_quote_details_Refresh(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.unit_of_measurement_quote_details, ref d._unit_of_measurement_quote_details);
                }
                private static void _unit_of_measurement_quote_details_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.unit_of_measurement_quote_details_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::LightSwitchApplication.Quote>.Entry
                    quote_details = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::LightSwitchApplication.Quote>.Entry(
                        "quote_details",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._quote_details_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._quote_details_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._quote_details_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._quote_details_GetCoreImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._quote_details_GetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._quote_details_SetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._quote_details_Refresh,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._quote_details_OnValueChanged);
                private static void _quote_details_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::LightSwitchApplication.Quote>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._quote_details, sf);
                }
                private static bool _quote_details_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.quote_details_IsReadOnly(ref result);
                    return result;
                }
                private static void _quote_details_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.quote_details_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _quote_details_GetCoreImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.quote_details;
                }
                private static global::LightSwitchApplication.Quote _quote_details_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Quote, global::LightSwitchApplication.Quote.DetailsClass>(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.quote_details, ref d._quote_details);
                }
                private static void _quote_details_SetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d, global::LightSwitchApplication.Quote v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.quote_details, ref d._quote_details, (i, ev) => i.quote_details = ev, v);
                }
                private static void _quote_details_Refresh(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.quote_details, ref d._quote_details);
                }
                private static void _quote_details_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.quote_details_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::LightSwitchApplication.Product>.Entry
                    product_quote_details = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::LightSwitchApplication.Product>.Entry(
                        "product_quote_details",
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._product_quote_details_Stub,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._product_quote_details_ComputeIsReadOnly,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._product_quote_details_Validate,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._product_quote_details_GetCoreImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._product_quote_details_GetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._product_quote_details_SetImplementationValue,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._product_quote_details_Refresh,
                        global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties._product_quote_details_OnValueChanged);
                private static void _product_quote_details_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.QuoteDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::LightSwitchApplication.Product>.Data> c, global::LightSwitchApplication.QuoteDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._product_quote_details, sf);
                }
                private static bool _product_quote_details_ComputeIsReadOnly(global::LightSwitchApplication.QuoteDetail e)
                {
                    bool result = false;
                    e.product_quote_details_IsReadOnly(ref result);
                    return result;
                }
                private static void _product_quote_details_Validate(global::LightSwitchApplication.QuoteDetail e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.product_quote_details_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _product_quote_details_GetCoreImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.ImplementationEntity.product_quote_details;
                }
                private static global::LightSwitchApplication.Product _product_quote_details_GetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass>(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.product_quote_details, ref d._product_quote_details);
                }
                private static void _product_quote_details_SetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass d, global::LightSwitchApplication.Product v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.product_quote_details, ref d._product_quote_details, (i, ev) => i.product_quote_details = ev, v);
                }
                private static void _product_quote_details_Refresh(global::LightSwitchApplication.QuoteDetail.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.QuoteDetail.DetailsClass.PropertySetProperties.product_quote_details, ref d._product_quote_details);
                }
                private static void _product_quote_details_OnValueChanged(global::LightSwitchApplication.QuoteDetail e)
                {
                    e.product_quote_details_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Guid>.Data _QuoteDetailId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _SalesRepId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>>.Data _LineItemNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _RequestDeliveryBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Data _Quantity;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>>.Data _PricingErrorCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Data _ManualDiscountAmount;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Data _ProductDescription;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Data _VolumeDiscountAmount;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Data _PricePerUnit;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Data _BaseAmount;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Data _ExtendedAmount;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Data _Description;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Data _ShipTo_Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<bool>>.Data _IsPriceOverridden;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Data _Tax;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Data _ShipTo_Line1;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _CreatedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Data _ShipTo_Line2;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _ModifiedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Data _ShipTo_Line3;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Data _ShipTo_City;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ModifiedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Data _ShipTo_StateOrProvince;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Data _ShipTo_Country;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Data _ShipTo_PostalCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<bool>>.Data _WillCall;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<bool>>.Data _IsProductOverridden;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Data _ShipTo_Telephone;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Data _ShipTo_Fax;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>>.Data _ShipTo_FreightTermsCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>>.Data _QuoteStateCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Guid>.Data _OwningUser;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Guid>.Data _ShipTo_AddressId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, string>.Data _ShipTo_ContactName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Guid>.Data _OwningBusinessUnit;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<long>>.Data _VersionNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>>.Data _ImportSequenceNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>>.Data _UTCConversionTimeZoneCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _OverriddenCreatedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _TransactionCurrencyId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Data _ExchangeRate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<int>>.Data _TimeZoneRuleVersionNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Data _Tax_Base;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Data _ExtendedAmount_Base;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Data _PricePerUnit_Base;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Data _BaseAmount_Base;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Data _ManualDiscountAmount_Base;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<decimal>>.Data _VolumeDiscountAmount_Base;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _OwnerId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _CreatedOnBehalfBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _ModifiedOnBehalfBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::LightSwitchApplication.UoM>.Data _unit_of_measurement_quote_details;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::LightSwitchApplication.Quote>.Data _quote_details;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.QuoteDetail, global::LightSwitchApplication.QuoteDetail.DetailsClass, global::LightSwitchApplication.Product>.Data _product_quote_details;
            
        }
    
        #endregion
    }
    
    #endregion
}
