

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
    public sealed partial class Competitor : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Competitor entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Competitor()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Competitor(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Competitor> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Competitor.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Competitor_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Competitor_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Name);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Guid CompetitorId
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.CompetitorId);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompetitorId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompetitorId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompetitorId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Guid Address1_AddressId
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_AddressId);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_AddressId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_AddressId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_AddressId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_AddressId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Guid Address2_AddressId
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_AddressId);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_AddressId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_AddressId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_AddressId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_AddressId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> OrganizationId
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.OrganizationId);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrganizationId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrganizationId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrganizationId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Overview
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Overview);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Overview, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Overview_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Overview_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Overview_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ReferenceInfoUrl
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.ReferenceInfoUrl);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.ReferenceInfoUrl, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReferenceInfoUrl_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReferenceInfoUrl_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReferenceInfoUrl_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> ReportedRevenue
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.ReportedRevenue);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.ReportedRevenue, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportedRevenue_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportedRevenue_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportedRevenue_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ReportingQuarter
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.ReportingQuarter);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.ReportingQuarter, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportingQuarter_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportingQuarter_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportingQuarter_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ReportingYear
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.ReportingYear);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.ReportingYear, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportingYear_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportingYear_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportingYear_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Strengths
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Strengths);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Strengths, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Strengths_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Strengths_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Strengths_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Weaknesses
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Weaknesses);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Weaknesses, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Weaknesses_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Weaknesses_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Weaknesses_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Opportunities
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Opportunities);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Opportunities, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Opportunities_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Opportunities_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Opportunities_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Threats
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Threats);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Threats, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Threats_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Threats_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Threats_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TickerSymbol
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.TickerSymbol);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.TickerSymbol, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TickerSymbol_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TickerSymbol_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TickerSymbol_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string KeyProduct
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.KeyProduct);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.KeyProduct, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KeyProduct_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KeyProduct_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KeyProduct_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string StockExchange
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.StockExchange);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.StockExchange, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockExchange_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockExchange_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockExchange_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<double> WinPercentage
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.WinPercentage);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.WinPercentage, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WinPercentage_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WinPercentage_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WinPercentage_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string WebSiteUrl
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.WebSiteUrl);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.WebSiteUrl, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WebSiteUrl_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WebSiteUrl_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WebSiteUrl_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.CreatedOn);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.CreatedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.ModifiedOn);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> ModifiedBy
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.ModifiedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<long> VersionNumber
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.VersionNumber);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> Address1_AddressTypeCode
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_AddressTypeCode);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_AddressTypeCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_AddressTypeCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_AddressTypeCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_AddressTypeCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_Name
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_Name);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_Line1
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_Line1);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_Line1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Line1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Line1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Line1_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_Line2
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_Line2);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_Line2, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Line2_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Line2_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Line2_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_Line3
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_Line3);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_Line3, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Line3_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Line3_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Line3_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_City
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_City);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_City, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_City_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_City_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_City_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_StateOrProvince
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_StateOrProvince);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_StateOrProvince, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_StateOrProvince_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_StateOrProvince_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_StateOrProvince_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_County
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_County);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_County, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_County_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_County_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_County_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_Country
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_Country);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_Country, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Country_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Country_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Country_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_PostOfficeBox
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_PostOfficeBox);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_PostOfficeBox, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_PostOfficeBox_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_PostOfficeBox_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_PostOfficeBox_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_PostalCode
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_PostalCode);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_PostalCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_PostalCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_PostalCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_PostalCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> Address1_UTCOffset
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_UTCOffset);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_UTCOffset, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_UTCOffset_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_UTCOffset_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_UTCOffset_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_UPSZone
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_UPSZone);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_UPSZone, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_UPSZone_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_UPSZone_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_UPSZone_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<double> Address1_Latitude
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_Latitude);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_Latitude, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Latitude_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Latitude_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Latitude_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_Telephone1
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_Telephone1);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_Telephone1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Telephone1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Telephone1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Telephone1_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<double> Address1_Longitude
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_Longitude);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_Longitude, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Longitude_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Longitude_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Longitude_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> Address1_ShippingMethodCode
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_ShippingMethodCode);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_ShippingMethodCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_ShippingMethodCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_ShippingMethodCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_ShippingMethodCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_Telephone2
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_Telephone2);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_Telephone2, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Telephone2_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Telephone2_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Telephone2_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_Telephone3
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_Telephone3);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_Telephone3, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Telephone3_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Telephone3_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Telephone3_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1_Fax
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_Fax);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_Fax, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Fax_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Fax_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Fax_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> Address2_AddressTypeCode
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_AddressTypeCode);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_AddressTypeCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_AddressTypeCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_AddressTypeCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_AddressTypeCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_Name
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_Name);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_Line1
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_Line1);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_Line1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Line1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Line1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Line1_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_Line2
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_Line2);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_Line2, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Line2_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Line2_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Line2_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_Line3
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_Line3);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_Line3, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Line3_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Line3_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Line3_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_City
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_City);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_City, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_City_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_City_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_City_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_StateOrProvince
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_StateOrProvince);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_StateOrProvince, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_StateOrProvince_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_StateOrProvince_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_StateOrProvince_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_County
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_County);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_County, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_County_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_County_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_County_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_Country
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_Country);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_Country, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Country_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Country_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Country_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_PostOfficeBox
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_PostOfficeBox);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_PostOfficeBox, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_PostOfficeBox_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_PostOfficeBox_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_PostOfficeBox_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_PostalCode
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_PostalCode);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_PostalCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_PostalCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_PostalCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_PostalCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> Address2_UTCOffset
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_UTCOffset);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_UTCOffset, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_UTCOffset_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_UTCOffset_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_UTCOffset_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_UPSZone
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_UPSZone);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_UPSZone, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_UPSZone_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_UPSZone_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_UPSZone_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<double> Address2_Latitude
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_Latitude);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_Latitude, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Latitude_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Latitude_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Latitude_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_Telephone1
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_Telephone1);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_Telephone1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Telephone1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Telephone1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Telephone1_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<double> Address2_Longitude
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_Longitude);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_Longitude, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Longitude_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Longitude_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Longitude_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> Address2_ShippingMethodCode
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_ShippingMethodCode);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_ShippingMethodCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_ShippingMethodCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_ShippingMethodCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_ShippingMethodCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_Telephone2
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_Telephone2);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_Telephone2, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Telephone2_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Telephone2_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Telephone2_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_Telephone3
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_Telephone3);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_Telephone3, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Telephone3_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Telephone3_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Telephone3_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2_Fax
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_Fax);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_Fax, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Fax_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Fax_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Fax_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> UTCConversionTimeZoneCode
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.UTCConversionTimeZoneCode);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.UTCConversionTimeZoneCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UTCConversionTimeZoneCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UTCConversionTimeZoneCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UTCConversionTimeZoneCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> TimeZoneRuleVersionNumber
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.TimeZoneRuleVersionNumber);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.TimeZoneRuleVersionNumber, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeZoneRuleVersionNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeZoneRuleVersionNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeZoneRuleVersionNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> OverriddenCreatedOn
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.OverriddenCreatedOn);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OverriddenCreatedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OverriddenCreatedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OverriddenCreatedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> ExchangeRate
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.ExchangeRate);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExchangeRate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExchangeRate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExchangeRate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> TransactionCurrencyId
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.TransactionCurrencyId);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.TransactionCurrencyId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransactionCurrencyId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransactionCurrencyId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransactionCurrencyId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ImportSequenceNumber
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.ImportSequenceNumber);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ImportSequenceNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ImportSequenceNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ImportSequenceNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> ReportedRevenue_Base
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.ReportedRevenue_Base);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportedRevenue_Base_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportedRevenue_Base_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportedRevenue_Base_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string YomiName
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.YomiName);
            }
            set
            {
                global::LightSwitchApplication.Competitor.DetailsClass.SetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.YomiName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void YomiName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void YomiName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void YomiName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> CreatedOnBehalfBy
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.CreatedOnBehalfBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOnBehalfBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOnBehalfBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedOnBehalfBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.Guid> ModifiedOnBehalfBy
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.ModifiedOnBehalfBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedOnBehalfBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedOnBehalfBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedOnBehalfBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.LeadCompetitor> leadcompetitors_associations
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.leadcompetitors_associations);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.LeadCompetitor> leadcompetitors_associationsQuery
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetQuery(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.leadcompetitors_associations);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.OpportunityClose> Competitor_opportunity_activities
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Competitor_opportunity_activities);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.OpportunityClose> Competitor_opportunity_activitiesQuery
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetQuery(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Competitor_opportunity_activities);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.OpportunityCompetitor> opportunitycompetitors_associations
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.opportunitycompetitors_associations);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.OpportunityCompetitor> opportunitycompetitors_associationsQuery
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetQuery(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.opportunitycompetitors_associations);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.CompetitorProduct> competitorproduct_associations
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetValue(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.competitorproduct_associations);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.CompetitorProduct> competitorproduct_associationsQuery
        {
            get
            {
                return global::LightSwitchApplication.Competitor.DetailsClass.GetQuery(this, global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.competitorproduct_associations);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Competitor,
                global::LightSwitchApplication.Competitor.DetailsClass,
                global::LightSwitchApplication.Competitor.DetailsClass.IImplementation,
                global::LightSwitchApplication.Competitor.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Name;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass>.Entry
                __CompetitorEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass>.Entry(
                    global::LightSwitchApplication.Competitor.DetailsClass.__Competitor_CreateNew,
                    global::LightSwitchApplication.Competitor.DetailsClass.__Competitor_Created,
                    global::LightSwitchApplication.Competitor.DetailsClass.__Competitor_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Competitor __Competitor_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Competitor> es)
            {
                return new global::LightSwitchApplication.Competitor(es);
            }
            private static void __Competitor_Created(global::LightSwitchApplication.Competitor e)
            {
                e.Competitor_Created();
            }
            private static bool __Competitor_AllowSaveWithErrors(global::LightSwitchApplication.Competitor e)
            {
                bool result = false;
                e.Competitor_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Competitor.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Guid> CompetitorId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.CompetitorId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Guid>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Guid> Address1_AddressId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_AddressId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Guid>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Guid> Address2_AddressId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_AddressId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Guid>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.Guid>> OrganizationId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.OrganizationId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> Overview
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Overview) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> ReferenceInfoUrl
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.ReferenceInfoUrl) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<decimal>> ReportedRevenue
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.ReportedRevenue) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>> ReportingQuarter
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.ReportingQuarter) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>> ReportingYear
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.ReportingYear) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> Strengths
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Strengths) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> Weaknesses
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Weaknesses) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> Opportunities
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Opportunities) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> Threats
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Threats) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> TickerSymbol
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.TickerSymbol) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> KeyProduct
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.KeyProduct) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> StockExchange
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.StockExchange) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<double>> WinPercentage
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.WinPercentage) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<double>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> WebSiteUrl
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.WebSiteUrl) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.DateTime>> CreatedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.CreatedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.Guid>> CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.DateTime>> ModifiedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.ModifiedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.Guid>> ModifiedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.ModifiedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<long>> VersionNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.VersionNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<long>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>> Address1_AddressTypeCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_AddressTypeCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> Address1_Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> Address1_Line1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_Line1) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> Address1_Line2
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_Line2) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> Address1_Line3
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_Line3) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> Address1_City
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_City) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> Address1_StateOrProvince
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_StateOrProvince) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> Address1_County
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_County) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> Address1_Country
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_Country) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> Address1_PostOfficeBox
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_PostOfficeBox) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> Address1_PostalCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_PostalCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>> Address1_UTCOffset
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_UTCOffset) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> Address1_UPSZone
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_UPSZone) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<double>> Address1_Latitude
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_Latitude) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<double>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> Address1_Telephone1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_Telephone1) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<double>> Address1_Longitude
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_Longitude) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<double>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>> Address1_ShippingMethodCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_ShippingMethodCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> Address1_Telephone2
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_Telephone2) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> Address1_Telephone3
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_Telephone3) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> Address1_Fax
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address1_Fax) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>> Address2_AddressTypeCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_AddressTypeCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> Address2_Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> Address2_Line1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_Line1) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> Address2_Line2
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_Line2) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> Address2_Line3
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_Line3) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> Address2_City
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_City) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> Address2_StateOrProvince
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_StateOrProvince) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> Address2_County
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_County) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> Address2_Country
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_Country) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> Address2_PostOfficeBox
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_PostOfficeBox) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> Address2_PostalCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_PostalCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>> Address2_UTCOffset
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_UTCOffset) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> Address2_UPSZone
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_UPSZone) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<double>> Address2_Latitude
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_Latitude) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<double>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> Address2_Telephone1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_Telephone1) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<double>> Address2_Longitude
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_Longitude) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<double>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>> Address2_ShippingMethodCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_ShippingMethodCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> Address2_Telephone2
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_Telephone2) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> Address2_Telephone3
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_Telephone3) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> Address2_Fax
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Address2_Fax) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>> UTCConversionTimeZoneCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.UTCConversionTimeZoneCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>> TimeZoneRuleVersionNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.TimeZoneRuleVersionNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.DateTime>> OverriddenCreatedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.OverriddenCreatedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<decimal>> ExchangeRate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.ExchangeRate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.Guid>> TransactionCurrencyId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.TransactionCurrencyId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>> ImportSequenceNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.ImportSequenceNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<decimal>> ReportedRevenue_Base
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.ReportedRevenue_Base) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string> YomiName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.YomiName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.Guid>> CreatedOnBehalfBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.CreatedOnBehalfBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.Guid>> ModifiedOnBehalfBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.ModifiedOnBehalfBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.Guid>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::LightSwitchApplication.LeadCompetitor> leadcompetitors_associations
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.leadcompetitors_associations) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::LightSwitchApplication.LeadCompetitor>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::LightSwitchApplication.OpportunityClose> Competitor_opportunity_activities
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Competitor_opportunity_activities) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::LightSwitchApplication.OpportunityClose>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::LightSwitchApplication.OpportunityCompetitor> opportunitycompetitors_associations
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.opportunitycompetitors_associations) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::LightSwitchApplication.OpportunityCompetitor>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::LightSwitchApplication.CompetitorProduct> competitorproduct_associations
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.competitorproduct_associations) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::LightSwitchApplication.CompetitorProduct>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new string Name { get; set; }
                new global::System.Guid CompetitorId { get; }
                new global::System.Guid Address1_AddressId { get; set; }
                new global::System.Guid Address2_AddressId { get; set; }
                new global::System.Nullable<global::System.Guid> OrganizationId { get; }
                new string Overview { get; set; }
                new string ReferenceInfoUrl { get; set; }
                new global::System.Nullable<decimal> ReportedRevenue { get; set; }
                new global::System.Nullable<int> ReportingQuarter { get; set; }
                new global::System.Nullable<int> ReportingYear { get; set; }
                new string Strengths { get; set; }
                new string Weaknesses { get; set; }
                new string Opportunities { get; set; }
                new string Threats { get; set; }
                new string TickerSymbol { get; set; }
                new string KeyProduct { get; set; }
                new string StockExchange { get; set; }
                new global::System.Nullable<double> WinPercentage { get; set; }
                new string WebSiteUrl { get; set; }
                new global::System.Nullable<global::System.DateTime> CreatedOn { get; }
                new global::System.Nullable<global::System.Guid> CreatedBy { get; }
                new global::System.Nullable<global::System.DateTime> ModifiedOn { get; }
                new global::System.Nullable<global::System.Guid> ModifiedBy { get; }
                new global::System.Nullable<long> VersionNumber { get; }
                new global::System.Nullable<int> Address1_AddressTypeCode { get; set; }
                new string Address1_Name { get; set; }
                new string Address1_Line1 { get; set; }
                new string Address1_Line2 { get; set; }
                new string Address1_Line3 { get; set; }
                new string Address1_City { get; set; }
                new string Address1_StateOrProvince { get; set; }
                new string Address1_County { get; set; }
                new string Address1_Country { get; set; }
                new string Address1_PostOfficeBox { get; set; }
                new string Address1_PostalCode { get; set; }
                new global::System.Nullable<int> Address1_UTCOffset { get; set; }
                new string Address1_UPSZone { get; set; }
                new global::System.Nullable<double> Address1_Latitude { get; set; }
                new string Address1_Telephone1 { get; set; }
                new global::System.Nullable<double> Address1_Longitude { get; set; }
                new global::System.Nullable<int> Address1_ShippingMethodCode { get; set; }
                new string Address1_Telephone2 { get; set; }
                new string Address1_Telephone3 { get; set; }
                new string Address1_Fax { get; set; }
                new global::System.Nullable<int> Address2_AddressTypeCode { get; set; }
                new string Address2_Name { get; set; }
                new string Address2_Line1 { get; set; }
                new string Address2_Line2 { get; set; }
                new string Address2_Line3 { get; set; }
                new string Address2_City { get; set; }
                new string Address2_StateOrProvince { get; set; }
                new string Address2_County { get; set; }
                new string Address2_Country { get; set; }
                new string Address2_PostOfficeBox { get; set; }
                new string Address2_PostalCode { get; set; }
                new global::System.Nullable<int> Address2_UTCOffset { get; set; }
                new string Address2_UPSZone { get; set; }
                new global::System.Nullable<double> Address2_Latitude { get; set; }
                new string Address2_Telephone1 { get; set; }
                new global::System.Nullable<double> Address2_Longitude { get; set; }
                new global::System.Nullable<int> Address2_ShippingMethodCode { get; set; }
                new string Address2_Telephone2 { get; set; }
                new string Address2_Telephone3 { get; set; }
                new string Address2_Fax { get; set; }
                new global::System.Nullable<int> UTCConversionTimeZoneCode { get; set; }
                new global::System.Nullable<int> TimeZoneRuleVersionNumber { get; set; }
                new global::System.Nullable<global::System.DateTime> OverriddenCreatedOn { get; }
                new global::System.Nullable<decimal> ExchangeRate { get; }
                new global::System.Nullable<global::System.Guid> TransactionCurrencyId { get; set; }
                new global::System.Nullable<int> ImportSequenceNumber { get; }
                new global::System.Nullable<decimal> ReportedRevenue_Base { get; }
                new string YomiName { get; set; }
                new global::System.Nullable<global::System.Guid> CreatedOnBehalfBy { get; }
                new global::System.Nullable<global::System.Guid> ModifiedOnBehalfBy { get; }
                new global::System.Collections.IEnumerable leadcompetitors_associations { get; }
                new global::System.Collections.IEnumerable Competitor_opportunity_activities { get; }
                new global::System.Collections.IEnumerable opportunitycompetitors_associations { get; }
                new global::System.Collections.IEnumerable competitorproduct_associations { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "Name",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Name_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Name_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Name_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Name_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Name_OnValueChanged);
                private static void _Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Name, sf);
                }
                private static bool _Name_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Name_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Name_Validate(r);
                }
                private static string _Name_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Name;
                }
                private static void _Name_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Name = v;
                }
                private static void _Name_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Guid>.Entry
                    CompetitorId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Guid>.Entry(
                        "CompetitorId",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._CompetitorId_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._CompetitorId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._CompetitorId_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._CompetitorId_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._CompetitorId_OnValueChanged);
                private static void _CompetitorId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Guid>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._CompetitorId, sf);
                }
                private static bool _CompetitorId_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.CompetitorId_IsReadOnly(ref result);
                    return result;
                }
                private static void _CompetitorId_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CompetitorId_Validate(r);
                }
                private static global::System.Guid _CompetitorId_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.CompetitorId;
                }
                private static void _CompetitorId_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.CompetitorId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Guid>.Entry
                    Address1_AddressId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Guid>.Entry(
                        "Address1_AddressId",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_AddressId_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_AddressId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_AddressId_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_AddressId_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_AddressId_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_AddressId_OnValueChanged);
                private static void _Address1_AddressId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Guid>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address1_AddressId, sf);
                }
                private static bool _Address1_AddressId_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address1_AddressId_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address1_AddressId_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address1_AddressId_Validate(r);
                }
                private static global::System.Guid _Address1_AddressId_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address1_AddressId;
                }
                private static void _Address1_AddressId_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, global::System.Guid v)
                {
                    d.ImplementationEntity.Address1_AddressId = v;
                }
                private static void _Address1_AddressId_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address1_AddressId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Guid>.Entry
                    Address2_AddressId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Guid>.Entry(
                        "Address2_AddressId",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_AddressId_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_AddressId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_AddressId_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_AddressId_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_AddressId_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_AddressId_OnValueChanged);
                private static void _Address2_AddressId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Guid>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address2_AddressId, sf);
                }
                private static bool _Address2_AddressId_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address2_AddressId_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address2_AddressId_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address2_AddressId_Validate(r);
                }
                private static global::System.Guid _Address2_AddressId_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address2_AddressId;
                }
                private static void _Address2_AddressId_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, global::System.Guid v)
                {
                    d.ImplementationEntity.Address2_AddressId = v;
                }
                private static void _Address2_AddressId_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address2_AddressId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    OrganizationId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "OrganizationId",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._OrganizationId_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._OrganizationId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._OrganizationId_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._OrganizationId_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._OrganizationId_OnValueChanged);
                private static void _OrganizationId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._OrganizationId, sf);
                }
                private static bool _OrganizationId_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.OrganizationId_IsReadOnly(ref result);
                    return result;
                }
                private static void _OrganizationId_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OrganizationId_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _OrganizationId_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.OrganizationId;
                }
                private static void _OrganizationId_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.OrganizationId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    Overview = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "Overview",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Overview_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Overview_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Overview_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Overview_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Overview_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Overview_OnValueChanged);
                private static void _Overview_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Overview, sf);
                }
                private static bool _Overview_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Overview_IsReadOnly(ref result);
                    return result;
                }
                private static void _Overview_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Overview_Validate(r);
                }
                private static string _Overview_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Overview;
                }
                private static void _Overview_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Overview = v;
                }
                private static void _Overview_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Overview_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    ReferenceInfoUrl = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "ReferenceInfoUrl",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ReferenceInfoUrl_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ReferenceInfoUrl_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ReferenceInfoUrl_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ReferenceInfoUrl_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ReferenceInfoUrl_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ReferenceInfoUrl_OnValueChanged);
                private static void _ReferenceInfoUrl_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._ReferenceInfoUrl, sf);
                }
                private static bool _ReferenceInfoUrl_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.ReferenceInfoUrl_IsReadOnly(ref result);
                    return result;
                }
                private static void _ReferenceInfoUrl_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ReferenceInfoUrl_Validate(r);
                }
                private static string _ReferenceInfoUrl_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.ReferenceInfoUrl;
                }
                private static void _ReferenceInfoUrl_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ReferenceInfoUrl = v;
                }
                private static void _ReferenceInfoUrl_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.ReferenceInfoUrl_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<decimal>>.Entry
                    ReportedRevenue = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "ReportedRevenue",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ReportedRevenue_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ReportedRevenue_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ReportedRevenue_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ReportedRevenue_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ReportedRevenue_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ReportedRevenue_OnValueChanged);
                private static void _ReportedRevenue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._ReportedRevenue, sf);
                }
                private static bool _ReportedRevenue_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.ReportedRevenue_IsReadOnly(ref result);
                    return result;
                }
                private static void _ReportedRevenue_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ReportedRevenue_Validate(r);
                }
                private static global::System.Nullable<decimal> _ReportedRevenue_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.ReportedRevenue;
                }
                private static void _ReportedRevenue_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.ReportedRevenue = v;
                }
                private static void _ReportedRevenue_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.ReportedRevenue_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Entry
                    ReportingQuarter = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ReportingQuarter",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ReportingQuarter_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ReportingQuarter_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ReportingQuarter_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ReportingQuarter_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ReportingQuarter_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ReportingQuarter_OnValueChanged);
                private static void _ReportingQuarter_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._ReportingQuarter, sf);
                }
                private static bool _ReportingQuarter_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.ReportingQuarter_IsReadOnly(ref result);
                    return result;
                }
                private static void _ReportingQuarter_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ReportingQuarter_Validate(r);
                }
                private static global::System.Nullable<int> _ReportingQuarter_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.ReportingQuarter;
                }
                private static void _ReportingQuarter_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ReportingQuarter = v;
                }
                private static void _ReportingQuarter_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.ReportingQuarter_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Entry
                    ReportingYear = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ReportingYear",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ReportingYear_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ReportingYear_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ReportingYear_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ReportingYear_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ReportingYear_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ReportingYear_OnValueChanged);
                private static void _ReportingYear_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._ReportingYear, sf);
                }
                private static bool _ReportingYear_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.ReportingYear_IsReadOnly(ref result);
                    return result;
                }
                private static void _ReportingYear_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ReportingYear_Validate(r);
                }
                private static global::System.Nullable<int> _ReportingYear_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.ReportingYear;
                }
                private static void _ReportingYear_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ReportingYear = v;
                }
                private static void _ReportingYear_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.ReportingYear_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    Strengths = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "Strengths",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Strengths_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Strengths_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Strengths_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Strengths_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Strengths_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Strengths_OnValueChanged);
                private static void _Strengths_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Strengths, sf);
                }
                private static bool _Strengths_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Strengths_IsReadOnly(ref result);
                    return result;
                }
                private static void _Strengths_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Strengths_Validate(r);
                }
                private static string _Strengths_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Strengths;
                }
                private static void _Strengths_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Strengths = v;
                }
                private static void _Strengths_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Strengths_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    Weaknesses = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "Weaknesses",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Weaknesses_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Weaknesses_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Weaknesses_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Weaknesses_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Weaknesses_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Weaknesses_OnValueChanged);
                private static void _Weaknesses_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Weaknesses, sf);
                }
                private static bool _Weaknesses_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Weaknesses_IsReadOnly(ref result);
                    return result;
                }
                private static void _Weaknesses_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Weaknesses_Validate(r);
                }
                private static string _Weaknesses_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Weaknesses;
                }
                private static void _Weaknesses_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Weaknesses = v;
                }
                private static void _Weaknesses_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Weaknesses_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    Opportunities = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "Opportunities",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Opportunities_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Opportunities_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Opportunities_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Opportunities_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Opportunities_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Opportunities_OnValueChanged);
                private static void _Opportunities_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Opportunities, sf);
                }
                private static bool _Opportunities_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Opportunities_IsReadOnly(ref result);
                    return result;
                }
                private static void _Opportunities_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Opportunities_Validate(r);
                }
                private static string _Opportunities_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Opportunities;
                }
                private static void _Opportunities_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Opportunities = v;
                }
                private static void _Opportunities_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Opportunities_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    Threats = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "Threats",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Threats_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Threats_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Threats_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Threats_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Threats_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Threats_OnValueChanged);
                private static void _Threats_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Threats, sf);
                }
                private static bool _Threats_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Threats_IsReadOnly(ref result);
                    return result;
                }
                private static void _Threats_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Threats_Validate(r);
                }
                private static string _Threats_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Threats;
                }
                private static void _Threats_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Threats = v;
                }
                private static void _Threats_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Threats_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    TickerSymbol = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "TickerSymbol",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._TickerSymbol_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._TickerSymbol_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._TickerSymbol_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._TickerSymbol_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._TickerSymbol_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._TickerSymbol_OnValueChanged);
                private static void _TickerSymbol_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._TickerSymbol, sf);
                }
                private static bool _TickerSymbol_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.TickerSymbol_IsReadOnly(ref result);
                    return result;
                }
                private static void _TickerSymbol_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TickerSymbol_Validate(r);
                }
                private static string _TickerSymbol_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.TickerSymbol;
                }
                private static void _TickerSymbol_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TickerSymbol = v;
                }
                private static void _TickerSymbol_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.TickerSymbol_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    KeyProduct = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "KeyProduct",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._KeyProduct_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._KeyProduct_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._KeyProduct_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._KeyProduct_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._KeyProduct_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._KeyProduct_OnValueChanged);
                private static void _KeyProduct_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._KeyProduct, sf);
                }
                private static bool _KeyProduct_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.KeyProduct_IsReadOnly(ref result);
                    return result;
                }
                private static void _KeyProduct_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.KeyProduct_Validate(r);
                }
                private static string _KeyProduct_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.KeyProduct;
                }
                private static void _KeyProduct_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.KeyProduct = v;
                }
                private static void _KeyProduct_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.KeyProduct_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    StockExchange = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "StockExchange",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._StockExchange_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._StockExchange_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._StockExchange_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._StockExchange_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._StockExchange_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._StockExchange_OnValueChanged);
                private static void _StockExchange_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._StockExchange, sf);
                }
                private static bool _StockExchange_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.StockExchange_IsReadOnly(ref result);
                    return result;
                }
                private static void _StockExchange_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.StockExchange_Validate(r);
                }
                private static string _StockExchange_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.StockExchange;
                }
                private static void _StockExchange_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.StockExchange = v;
                }
                private static void _StockExchange_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.StockExchange_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<double>>.Entry
                    WinPercentage = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<double>>.Entry(
                        "WinPercentage",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._WinPercentage_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._WinPercentage_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._WinPercentage_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._WinPercentage_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._WinPercentage_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._WinPercentage_OnValueChanged);
                private static void _WinPercentage_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<double>>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._WinPercentage, sf);
                }
                private static bool _WinPercentage_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.WinPercentage_IsReadOnly(ref result);
                    return result;
                }
                private static void _WinPercentage_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.WinPercentage_Validate(r);
                }
                private static global::System.Nullable<double> _WinPercentage_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.WinPercentage;
                }
                private static void _WinPercentage_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, global::System.Nullable<double> v)
                {
                    d.ImplementationEntity.WinPercentage = v;
                }
                private static void _WinPercentage_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.WinPercentage_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    WebSiteUrl = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "WebSiteUrl",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._WebSiteUrl_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._WebSiteUrl_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._WebSiteUrl_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._WebSiteUrl_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._WebSiteUrl_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._WebSiteUrl_OnValueChanged);
                private static void _WebSiteUrl_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._WebSiteUrl, sf);
                }
                private static bool _WebSiteUrl_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.WebSiteUrl_IsReadOnly(ref result);
                    return result;
                }
                private static void _WebSiteUrl_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.WebSiteUrl_Validate(r);
                }
                private static string _WebSiteUrl_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.WebSiteUrl;
                }
                private static void _WebSiteUrl_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.WebSiteUrl = v;
                }
                private static void _WebSiteUrl_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.WebSiteUrl_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    CreatedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "CreatedOn",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._CreatedOn_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._CreatedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._CreatedOn_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._CreatedOn_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._CreatedOn_OnValueChanged);
                private static void _CreatedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedOn, sf);
                }
                private static bool _CreatedOn_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.CreatedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedOn_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedOn_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _CreatedOn_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedOn;
                }
                private static void _CreatedOn_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.CreatedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "CreatedBy",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._CreatedBy_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._CreatedBy_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._CreatedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._CreatedBy_OnValueChanged);
                private static void _CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedBy, sf);
                }
                private static bool _CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedBy_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedBy_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _CreatedBy_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedBy;
                }
                private static void _CreatedBy_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ModifiedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ModifiedOn",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ModifiedOn_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ModifiedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ModifiedOn_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ModifiedOn_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ModifiedOn_OnValueChanged);
                private static void _ModifiedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedOn, sf);
                }
                private static bool _ModifiedOn_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.ModifiedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedOn_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedOn_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ModifiedOn_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedOn;
                }
                private static void _ModifiedOn_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.ModifiedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    ModifiedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "ModifiedBy",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ModifiedBy_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ModifiedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ModifiedBy_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ModifiedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ModifiedBy_OnValueChanged);
                private static void _ModifiedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedBy, sf);
                }
                private static bool _ModifiedBy_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.ModifiedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedBy_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedBy_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _ModifiedBy_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedBy;
                }
                private static void _ModifiedBy_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.ModifiedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<long>>.Entry
                    VersionNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<long>>.Entry(
                        "VersionNumber",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._VersionNumber_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._VersionNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._VersionNumber_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._VersionNumber_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._VersionNumber_OnValueChanged);
                private static void _VersionNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<long>>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._VersionNumber, sf);
                }
                private static bool _VersionNumber_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.VersionNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _VersionNumber_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.VersionNumber_Validate(r);
                }
                private static global::System.Nullable<long> _VersionNumber_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.VersionNumber;
                }
                private static void _VersionNumber_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.VersionNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Entry
                    Address1_AddressTypeCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Entry(
                        "Address1_AddressTypeCode",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_AddressTypeCode_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_AddressTypeCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_AddressTypeCode_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_AddressTypeCode_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_AddressTypeCode_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_AddressTypeCode_OnValueChanged);
                private static void _Address1_AddressTypeCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address1_AddressTypeCode, sf);
                }
                private static bool _Address1_AddressTypeCode_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address1_AddressTypeCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address1_AddressTypeCode_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address1_AddressTypeCode_Validate(r);
                }
                private static global::System.Nullable<int> _Address1_AddressTypeCode_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address1_AddressTypeCode;
                }
                private static void _Address1_AddressTypeCode_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.Address1_AddressTypeCode = v;
                }
                private static void _Address1_AddressTypeCode_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address1_AddressTypeCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    Address1_Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "Address1_Name",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Name_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Name_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Name_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Name_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Name_OnValueChanged);
                private static void _Address1_Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address1_Name, sf);
                }
                private static bool _Address1_Name_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address1_Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address1_Name_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address1_Name_Validate(r);
                }
                private static string _Address1_Name_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address1_Name;
                }
                private static void _Address1_Name_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address1_Name = v;
                }
                private static void _Address1_Name_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address1_Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    Address1_Line1 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "Address1_Line1",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Line1_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Line1_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Line1_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Line1_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Line1_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Line1_OnValueChanged);
                private static void _Address1_Line1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address1_Line1, sf);
                }
                private static bool _Address1_Line1_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address1_Line1_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address1_Line1_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address1_Line1_Validate(r);
                }
                private static string _Address1_Line1_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address1_Line1;
                }
                private static void _Address1_Line1_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address1_Line1 = v;
                }
                private static void _Address1_Line1_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address1_Line1_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    Address1_Line2 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "Address1_Line2",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Line2_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Line2_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Line2_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Line2_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Line2_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Line2_OnValueChanged);
                private static void _Address1_Line2_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address1_Line2, sf);
                }
                private static bool _Address1_Line2_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address1_Line2_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address1_Line2_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address1_Line2_Validate(r);
                }
                private static string _Address1_Line2_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address1_Line2;
                }
                private static void _Address1_Line2_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address1_Line2 = v;
                }
                private static void _Address1_Line2_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address1_Line2_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    Address1_Line3 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "Address1_Line3",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Line3_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Line3_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Line3_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Line3_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Line3_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Line3_OnValueChanged);
                private static void _Address1_Line3_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address1_Line3, sf);
                }
                private static bool _Address1_Line3_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address1_Line3_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address1_Line3_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address1_Line3_Validate(r);
                }
                private static string _Address1_Line3_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address1_Line3;
                }
                private static void _Address1_Line3_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address1_Line3 = v;
                }
                private static void _Address1_Line3_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address1_Line3_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    Address1_City = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "Address1_City",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_City_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_City_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_City_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_City_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_City_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_City_OnValueChanged);
                private static void _Address1_City_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address1_City, sf);
                }
                private static bool _Address1_City_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address1_City_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address1_City_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address1_City_Validate(r);
                }
                private static string _Address1_City_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address1_City;
                }
                private static void _Address1_City_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address1_City = v;
                }
                private static void _Address1_City_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address1_City_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    Address1_StateOrProvince = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "Address1_StateOrProvince",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_StateOrProvince_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_StateOrProvince_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_StateOrProvince_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_StateOrProvince_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_StateOrProvince_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_StateOrProvince_OnValueChanged);
                private static void _Address1_StateOrProvince_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address1_StateOrProvince, sf);
                }
                private static bool _Address1_StateOrProvince_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address1_StateOrProvince_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address1_StateOrProvince_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address1_StateOrProvince_Validate(r);
                }
                private static string _Address1_StateOrProvince_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address1_StateOrProvince;
                }
                private static void _Address1_StateOrProvince_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address1_StateOrProvince = v;
                }
                private static void _Address1_StateOrProvince_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address1_StateOrProvince_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    Address1_County = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "Address1_County",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_County_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_County_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_County_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_County_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_County_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_County_OnValueChanged);
                private static void _Address1_County_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address1_County, sf);
                }
                private static bool _Address1_County_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address1_County_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address1_County_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address1_County_Validate(r);
                }
                private static string _Address1_County_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address1_County;
                }
                private static void _Address1_County_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address1_County = v;
                }
                private static void _Address1_County_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address1_County_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    Address1_Country = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "Address1_Country",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Country_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Country_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Country_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Country_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Country_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Country_OnValueChanged);
                private static void _Address1_Country_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address1_Country, sf);
                }
                private static bool _Address1_Country_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address1_Country_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address1_Country_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address1_Country_Validate(r);
                }
                private static string _Address1_Country_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address1_Country;
                }
                private static void _Address1_Country_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address1_Country = v;
                }
                private static void _Address1_Country_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address1_Country_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    Address1_PostOfficeBox = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "Address1_PostOfficeBox",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_PostOfficeBox_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_PostOfficeBox_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_PostOfficeBox_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_PostOfficeBox_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_PostOfficeBox_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_PostOfficeBox_OnValueChanged);
                private static void _Address1_PostOfficeBox_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address1_PostOfficeBox, sf);
                }
                private static bool _Address1_PostOfficeBox_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address1_PostOfficeBox_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address1_PostOfficeBox_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address1_PostOfficeBox_Validate(r);
                }
                private static string _Address1_PostOfficeBox_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address1_PostOfficeBox;
                }
                private static void _Address1_PostOfficeBox_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address1_PostOfficeBox = v;
                }
                private static void _Address1_PostOfficeBox_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address1_PostOfficeBox_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    Address1_PostalCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "Address1_PostalCode",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_PostalCode_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_PostalCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_PostalCode_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_PostalCode_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_PostalCode_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_PostalCode_OnValueChanged);
                private static void _Address1_PostalCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address1_PostalCode, sf);
                }
                private static bool _Address1_PostalCode_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address1_PostalCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address1_PostalCode_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address1_PostalCode_Validate(r);
                }
                private static string _Address1_PostalCode_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address1_PostalCode;
                }
                private static void _Address1_PostalCode_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address1_PostalCode = v;
                }
                private static void _Address1_PostalCode_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address1_PostalCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Entry
                    Address1_UTCOffset = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Entry(
                        "Address1_UTCOffset",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_UTCOffset_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_UTCOffset_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_UTCOffset_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_UTCOffset_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_UTCOffset_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_UTCOffset_OnValueChanged);
                private static void _Address1_UTCOffset_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address1_UTCOffset, sf);
                }
                private static bool _Address1_UTCOffset_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address1_UTCOffset_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address1_UTCOffset_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address1_UTCOffset_Validate(r);
                }
                private static global::System.Nullable<int> _Address1_UTCOffset_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address1_UTCOffset;
                }
                private static void _Address1_UTCOffset_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.Address1_UTCOffset = v;
                }
                private static void _Address1_UTCOffset_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address1_UTCOffset_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    Address1_UPSZone = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "Address1_UPSZone",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_UPSZone_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_UPSZone_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_UPSZone_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_UPSZone_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_UPSZone_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_UPSZone_OnValueChanged);
                private static void _Address1_UPSZone_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address1_UPSZone, sf);
                }
                private static bool _Address1_UPSZone_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address1_UPSZone_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address1_UPSZone_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address1_UPSZone_Validate(r);
                }
                private static string _Address1_UPSZone_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address1_UPSZone;
                }
                private static void _Address1_UPSZone_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address1_UPSZone = v;
                }
                private static void _Address1_UPSZone_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address1_UPSZone_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<double>>.Entry
                    Address1_Latitude = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<double>>.Entry(
                        "Address1_Latitude",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Latitude_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Latitude_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Latitude_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Latitude_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Latitude_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Latitude_OnValueChanged);
                private static void _Address1_Latitude_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<double>>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address1_Latitude, sf);
                }
                private static bool _Address1_Latitude_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address1_Latitude_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address1_Latitude_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address1_Latitude_Validate(r);
                }
                private static global::System.Nullable<double> _Address1_Latitude_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address1_Latitude;
                }
                private static void _Address1_Latitude_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, global::System.Nullable<double> v)
                {
                    d.ImplementationEntity.Address1_Latitude = v;
                }
                private static void _Address1_Latitude_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address1_Latitude_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    Address1_Telephone1 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "Address1_Telephone1",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Telephone1_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Telephone1_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Telephone1_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Telephone1_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Telephone1_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Telephone1_OnValueChanged);
                private static void _Address1_Telephone1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address1_Telephone1, sf);
                }
                private static bool _Address1_Telephone1_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address1_Telephone1_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address1_Telephone1_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address1_Telephone1_Validate(r);
                }
                private static string _Address1_Telephone1_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address1_Telephone1;
                }
                private static void _Address1_Telephone1_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address1_Telephone1 = v;
                }
                private static void _Address1_Telephone1_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address1_Telephone1_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<double>>.Entry
                    Address1_Longitude = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<double>>.Entry(
                        "Address1_Longitude",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Longitude_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Longitude_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Longitude_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Longitude_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Longitude_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Longitude_OnValueChanged);
                private static void _Address1_Longitude_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<double>>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address1_Longitude, sf);
                }
                private static bool _Address1_Longitude_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address1_Longitude_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address1_Longitude_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address1_Longitude_Validate(r);
                }
                private static global::System.Nullable<double> _Address1_Longitude_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address1_Longitude;
                }
                private static void _Address1_Longitude_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, global::System.Nullable<double> v)
                {
                    d.ImplementationEntity.Address1_Longitude = v;
                }
                private static void _Address1_Longitude_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address1_Longitude_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Entry
                    Address1_ShippingMethodCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Entry(
                        "Address1_ShippingMethodCode",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_ShippingMethodCode_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_ShippingMethodCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_ShippingMethodCode_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_ShippingMethodCode_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_ShippingMethodCode_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_ShippingMethodCode_OnValueChanged);
                private static void _Address1_ShippingMethodCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address1_ShippingMethodCode, sf);
                }
                private static bool _Address1_ShippingMethodCode_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address1_ShippingMethodCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address1_ShippingMethodCode_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address1_ShippingMethodCode_Validate(r);
                }
                private static global::System.Nullable<int> _Address1_ShippingMethodCode_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address1_ShippingMethodCode;
                }
                private static void _Address1_ShippingMethodCode_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.Address1_ShippingMethodCode = v;
                }
                private static void _Address1_ShippingMethodCode_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address1_ShippingMethodCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    Address1_Telephone2 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "Address1_Telephone2",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Telephone2_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Telephone2_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Telephone2_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Telephone2_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Telephone2_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Telephone2_OnValueChanged);
                private static void _Address1_Telephone2_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address1_Telephone2, sf);
                }
                private static bool _Address1_Telephone2_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address1_Telephone2_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address1_Telephone2_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address1_Telephone2_Validate(r);
                }
                private static string _Address1_Telephone2_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address1_Telephone2;
                }
                private static void _Address1_Telephone2_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address1_Telephone2 = v;
                }
                private static void _Address1_Telephone2_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address1_Telephone2_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    Address1_Telephone3 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "Address1_Telephone3",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Telephone3_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Telephone3_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Telephone3_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Telephone3_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Telephone3_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Telephone3_OnValueChanged);
                private static void _Address1_Telephone3_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address1_Telephone3, sf);
                }
                private static bool _Address1_Telephone3_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address1_Telephone3_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address1_Telephone3_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address1_Telephone3_Validate(r);
                }
                private static string _Address1_Telephone3_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address1_Telephone3;
                }
                private static void _Address1_Telephone3_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address1_Telephone3 = v;
                }
                private static void _Address1_Telephone3_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address1_Telephone3_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    Address1_Fax = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "Address1_Fax",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Fax_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Fax_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Fax_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Fax_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Fax_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address1_Fax_OnValueChanged);
                private static void _Address1_Fax_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address1_Fax, sf);
                }
                private static bool _Address1_Fax_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address1_Fax_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address1_Fax_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address1_Fax_Validate(r);
                }
                private static string _Address1_Fax_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address1_Fax;
                }
                private static void _Address1_Fax_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address1_Fax = v;
                }
                private static void _Address1_Fax_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address1_Fax_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Entry
                    Address2_AddressTypeCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Entry(
                        "Address2_AddressTypeCode",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_AddressTypeCode_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_AddressTypeCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_AddressTypeCode_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_AddressTypeCode_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_AddressTypeCode_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_AddressTypeCode_OnValueChanged);
                private static void _Address2_AddressTypeCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address2_AddressTypeCode, sf);
                }
                private static bool _Address2_AddressTypeCode_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address2_AddressTypeCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address2_AddressTypeCode_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address2_AddressTypeCode_Validate(r);
                }
                private static global::System.Nullable<int> _Address2_AddressTypeCode_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address2_AddressTypeCode;
                }
                private static void _Address2_AddressTypeCode_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.Address2_AddressTypeCode = v;
                }
                private static void _Address2_AddressTypeCode_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address2_AddressTypeCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    Address2_Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "Address2_Name",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Name_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Name_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Name_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Name_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Name_OnValueChanged);
                private static void _Address2_Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address2_Name, sf);
                }
                private static bool _Address2_Name_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address2_Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address2_Name_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address2_Name_Validate(r);
                }
                private static string _Address2_Name_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address2_Name;
                }
                private static void _Address2_Name_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address2_Name = v;
                }
                private static void _Address2_Name_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address2_Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    Address2_Line1 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "Address2_Line1",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Line1_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Line1_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Line1_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Line1_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Line1_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Line1_OnValueChanged);
                private static void _Address2_Line1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address2_Line1, sf);
                }
                private static bool _Address2_Line1_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address2_Line1_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address2_Line1_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address2_Line1_Validate(r);
                }
                private static string _Address2_Line1_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address2_Line1;
                }
                private static void _Address2_Line1_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address2_Line1 = v;
                }
                private static void _Address2_Line1_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address2_Line1_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    Address2_Line2 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "Address2_Line2",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Line2_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Line2_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Line2_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Line2_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Line2_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Line2_OnValueChanged);
                private static void _Address2_Line2_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address2_Line2, sf);
                }
                private static bool _Address2_Line2_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address2_Line2_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address2_Line2_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address2_Line2_Validate(r);
                }
                private static string _Address2_Line2_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address2_Line2;
                }
                private static void _Address2_Line2_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address2_Line2 = v;
                }
                private static void _Address2_Line2_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address2_Line2_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    Address2_Line3 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "Address2_Line3",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Line3_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Line3_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Line3_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Line3_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Line3_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Line3_OnValueChanged);
                private static void _Address2_Line3_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address2_Line3, sf);
                }
                private static bool _Address2_Line3_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address2_Line3_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address2_Line3_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address2_Line3_Validate(r);
                }
                private static string _Address2_Line3_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address2_Line3;
                }
                private static void _Address2_Line3_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address2_Line3 = v;
                }
                private static void _Address2_Line3_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address2_Line3_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    Address2_City = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "Address2_City",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_City_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_City_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_City_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_City_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_City_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_City_OnValueChanged);
                private static void _Address2_City_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address2_City, sf);
                }
                private static bool _Address2_City_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address2_City_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address2_City_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address2_City_Validate(r);
                }
                private static string _Address2_City_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address2_City;
                }
                private static void _Address2_City_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address2_City = v;
                }
                private static void _Address2_City_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address2_City_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    Address2_StateOrProvince = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "Address2_StateOrProvince",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_StateOrProvince_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_StateOrProvince_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_StateOrProvince_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_StateOrProvince_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_StateOrProvince_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_StateOrProvince_OnValueChanged);
                private static void _Address2_StateOrProvince_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address2_StateOrProvince, sf);
                }
                private static bool _Address2_StateOrProvince_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address2_StateOrProvince_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address2_StateOrProvince_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address2_StateOrProvince_Validate(r);
                }
                private static string _Address2_StateOrProvince_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address2_StateOrProvince;
                }
                private static void _Address2_StateOrProvince_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address2_StateOrProvince = v;
                }
                private static void _Address2_StateOrProvince_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address2_StateOrProvince_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    Address2_County = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "Address2_County",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_County_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_County_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_County_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_County_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_County_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_County_OnValueChanged);
                private static void _Address2_County_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address2_County, sf);
                }
                private static bool _Address2_County_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address2_County_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address2_County_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address2_County_Validate(r);
                }
                private static string _Address2_County_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address2_County;
                }
                private static void _Address2_County_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address2_County = v;
                }
                private static void _Address2_County_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address2_County_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    Address2_Country = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "Address2_Country",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Country_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Country_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Country_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Country_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Country_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Country_OnValueChanged);
                private static void _Address2_Country_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address2_Country, sf);
                }
                private static bool _Address2_Country_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address2_Country_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address2_Country_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address2_Country_Validate(r);
                }
                private static string _Address2_Country_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address2_Country;
                }
                private static void _Address2_Country_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address2_Country = v;
                }
                private static void _Address2_Country_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address2_Country_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    Address2_PostOfficeBox = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "Address2_PostOfficeBox",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_PostOfficeBox_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_PostOfficeBox_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_PostOfficeBox_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_PostOfficeBox_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_PostOfficeBox_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_PostOfficeBox_OnValueChanged);
                private static void _Address2_PostOfficeBox_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address2_PostOfficeBox, sf);
                }
                private static bool _Address2_PostOfficeBox_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address2_PostOfficeBox_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address2_PostOfficeBox_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address2_PostOfficeBox_Validate(r);
                }
                private static string _Address2_PostOfficeBox_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address2_PostOfficeBox;
                }
                private static void _Address2_PostOfficeBox_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address2_PostOfficeBox = v;
                }
                private static void _Address2_PostOfficeBox_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address2_PostOfficeBox_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    Address2_PostalCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "Address2_PostalCode",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_PostalCode_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_PostalCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_PostalCode_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_PostalCode_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_PostalCode_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_PostalCode_OnValueChanged);
                private static void _Address2_PostalCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address2_PostalCode, sf);
                }
                private static bool _Address2_PostalCode_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address2_PostalCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address2_PostalCode_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address2_PostalCode_Validate(r);
                }
                private static string _Address2_PostalCode_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address2_PostalCode;
                }
                private static void _Address2_PostalCode_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address2_PostalCode = v;
                }
                private static void _Address2_PostalCode_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address2_PostalCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Entry
                    Address2_UTCOffset = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Entry(
                        "Address2_UTCOffset",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_UTCOffset_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_UTCOffset_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_UTCOffset_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_UTCOffset_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_UTCOffset_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_UTCOffset_OnValueChanged);
                private static void _Address2_UTCOffset_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address2_UTCOffset, sf);
                }
                private static bool _Address2_UTCOffset_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address2_UTCOffset_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address2_UTCOffset_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address2_UTCOffset_Validate(r);
                }
                private static global::System.Nullable<int> _Address2_UTCOffset_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address2_UTCOffset;
                }
                private static void _Address2_UTCOffset_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.Address2_UTCOffset = v;
                }
                private static void _Address2_UTCOffset_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address2_UTCOffset_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    Address2_UPSZone = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "Address2_UPSZone",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_UPSZone_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_UPSZone_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_UPSZone_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_UPSZone_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_UPSZone_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_UPSZone_OnValueChanged);
                private static void _Address2_UPSZone_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address2_UPSZone, sf);
                }
                private static bool _Address2_UPSZone_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address2_UPSZone_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address2_UPSZone_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address2_UPSZone_Validate(r);
                }
                private static string _Address2_UPSZone_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address2_UPSZone;
                }
                private static void _Address2_UPSZone_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address2_UPSZone = v;
                }
                private static void _Address2_UPSZone_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address2_UPSZone_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<double>>.Entry
                    Address2_Latitude = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<double>>.Entry(
                        "Address2_Latitude",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Latitude_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Latitude_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Latitude_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Latitude_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Latitude_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Latitude_OnValueChanged);
                private static void _Address2_Latitude_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<double>>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address2_Latitude, sf);
                }
                private static bool _Address2_Latitude_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address2_Latitude_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address2_Latitude_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address2_Latitude_Validate(r);
                }
                private static global::System.Nullable<double> _Address2_Latitude_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address2_Latitude;
                }
                private static void _Address2_Latitude_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, global::System.Nullable<double> v)
                {
                    d.ImplementationEntity.Address2_Latitude = v;
                }
                private static void _Address2_Latitude_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address2_Latitude_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    Address2_Telephone1 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "Address2_Telephone1",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Telephone1_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Telephone1_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Telephone1_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Telephone1_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Telephone1_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Telephone1_OnValueChanged);
                private static void _Address2_Telephone1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address2_Telephone1, sf);
                }
                private static bool _Address2_Telephone1_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address2_Telephone1_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address2_Telephone1_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address2_Telephone1_Validate(r);
                }
                private static string _Address2_Telephone1_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address2_Telephone1;
                }
                private static void _Address2_Telephone1_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address2_Telephone1 = v;
                }
                private static void _Address2_Telephone1_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address2_Telephone1_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<double>>.Entry
                    Address2_Longitude = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<double>>.Entry(
                        "Address2_Longitude",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Longitude_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Longitude_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Longitude_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Longitude_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Longitude_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Longitude_OnValueChanged);
                private static void _Address2_Longitude_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<double>>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address2_Longitude, sf);
                }
                private static bool _Address2_Longitude_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address2_Longitude_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address2_Longitude_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address2_Longitude_Validate(r);
                }
                private static global::System.Nullable<double> _Address2_Longitude_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address2_Longitude;
                }
                private static void _Address2_Longitude_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, global::System.Nullable<double> v)
                {
                    d.ImplementationEntity.Address2_Longitude = v;
                }
                private static void _Address2_Longitude_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address2_Longitude_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Entry
                    Address2_ShippingMethodCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Entry(
                        "Address2_ShippingMethodCode",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_ShippingMethodCode_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_ShippingMethodCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_ShippingMethodCode_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_ShippingMethodCode_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_ShippingMethodCode_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_ShippingMethodCode_OnValueChanged);
                private static void _Address2_ShippingMethodCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address2_ShippingMethodCode, sf);
                }
                private static bool _Address2_ShippingMethodCode_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address2_ShippingMethodCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address2_ShippingMethodCode_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address2_ShippingMethodCode_Validate(r);
                }
                private static global::System.Nullable<int> _Address2_ShippingMethodCode_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address2_ShippingMethodCode;
                }
                private static void _Address2_ShippingMethodCode_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.Address2_ShippingMethodCode = v;
                }
                private static void _Address2_ShippingMethodCode_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address2_ShippingMethodCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    Address2_Telephone2 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "Address2_Telephone2",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Telephone2_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Telephone2_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Telephone2_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Telephone2_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Telephone2_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Telephone2_OnValueChanged);
                private static void _Address2_Telephone2_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address2_Telephone2, sf);
                }
                private static bool _Address2_Telephone2_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address2_Telephone2_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address2_Telephone2_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address2_Telephone2_Validate(r);
                }
                private static string _Address2_Telephone2_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address2_Telephone2;
                }
                private static void _Address2_Telephone2_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address2_Telephone2 = v;
                }
                private static void _Address2_Telephone2_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address2_Telephone2_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    Address2_Telephone3 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "Address2_Telephone3",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Telephone3_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Telephone3_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Telephone3_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Telephone3_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Telephone3_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Telephone3_OnValueChanged);
                private static void _Address2_Telephone3_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address2_Telephone3, sf);
                }
                private static bool _Address2_Telephone3_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address2_Telephone3_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address2_Telephone3_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address2_Telephone3_Validate(r);
                }
                private static string _Address2_Telephone3_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address2_Telephone3;
                }
                private static void _Address2_Telephone3_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address2_Telephone3 = v;
                }
                private static void _Address2_Telephone3_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address2_Telephone3_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    Address2_Fax = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "Address2_Fax",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Fax_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Fax_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Fax_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Fax_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Fax_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Address2_Fax_OnValueChanged);
                private static void _Address2_Fax_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Address2_Fax, sf);
                }
                private static bool _Address2_Fax_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.Address2_Fax_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address2_Fax_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address2_Fax_Validate(r);
                }
                private static string _Address2_Fax_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Address2_Fax;
                }
                private static void _Address2_Fax_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address2_Fax = v;
                }
                private static void _Address2_Fax_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.Address2_Fax_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Entry
                    UTCConversionTimeZoneCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Entry(
                        "UTCConversionTimeZoneCode",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._UTCConversionTimeZoneCode_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._UTCConversionTimeZoneCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._UTCConversionTimeZoneCode_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._UTCConversionTimeZoneCode_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._UTCConversionTimeZoneCode_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._UTCConversionTimeZoneCode_OnValueChanged);
                private static void _UTCConversionTimeZoneCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._UTCConversionTimeZoneCode, sf);
                }
                private static bool _UTCConversionTimeZoneCode_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.UTCConversionTimeZoneCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _UTCConversionTimeZoneCode_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.UTCConversionTimeZoneCode_Validate(r);
                }
                private static global::System.Nullable<int> _UTCConversionTimeZoneCode_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.UTCConversionTimeZoneCode;
                }
                private static void _UTCConversionTimeZoneCode_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.UTCConversionTimeZoneCode = v;
                }
                private static void _UTCConversionTimeZoneCode_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.UTCConversionTimeZoneCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Entry
                    TimeZoneRuleVersionNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Entry(
                        "TimeZoneRuleVersionNumber",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._TimeZoneRuleVersionNumber_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._TimeZoneRuleVersionNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._TimeZoneRuleVersionNumber_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._TimeZoneRuleVersionNumber_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._TimeZoneRuleVersionNumber_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._TimeZoneRuleVersionNumber_OnValueChanged);
                private static void _TimeZoneRuleVersionNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._TimeZoneRuleVersionNumber, sf);
                }
                private static bool _TimeZoneRuleVersionNumber_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.TimeZoneRuleVersionNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _TimeZoneRuleVersionNumber_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TimeZoneRuleVersionNumber_Validate(r);
                }
                private static global::System.Nullable<int> _TimeZoneRuleVersionNumber_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.TimeZoneRuleVersionNumber;
                }
                private static void _TimeZoneRuleVersionNumber_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.TimeZoneRuleVersionNumber = v;
                }
                private static void _TimeZoneRuleVersionNumber_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.TimeZoneRuleVersionNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    OverriddenCreatedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "OverriddenCreatedOn",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._OverriddenCreatedOn_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._OverriddenCreatedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._OverriddenCreatedOn_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._OverriddenCreatedOn_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._OverriddenCreatedOn_OnValueChanged);
                private static void _OverriddenCreatedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._OverriddenCreatedOn, sf);
                }
                private static bool _OverriddenCreatedOn_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.OverriddenCreatedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _OverriddenCreatedOn_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OverriddenCreatedOn_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _OverriddenCreatedOn_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.OverriddenCreatedOn;
                }
                private static void _OverriddenCreatedOn_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.OverriddenCreatedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<decimal>>.Entry
                    ExchangeRate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "ExchangeRate",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ExchangeRate_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ExchangeRate_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ExchangeRate_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ExchangeRate_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ExchangeRate_OnValueChanged);
                private static void _ExchangeRate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._ExchangeRate, sf);
                }
                private static bool _ExchangeRate_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.ExchangeRate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ExchangeRate_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ExchangeRate_Validate(r);
                }
                private static global::System.Nullable<decimal> _ExchangeRate_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.ExchangeRate;
                }
                private static void _ExchangeRate_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.ExchangeRate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    TransactionCurrencyId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "TransactionCurrencyId",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._TransactionCurrencyId_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._TransactionCurrencyId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._TransactionCurrencyId_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._TransactionCurrencyId_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._TransactionCurrencyId_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._TransactionCurrencyId_OnValueChanged);
                private static void _TransactionCurrencyId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._TransactionCurrencyId, sf);
                }
                private static bool _TransactionCurrencyId_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.TransactionCurrencyId_IsReadOnly(ref result);
                    return result;
                }
                private static void _TransactionCurrencyId_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TransactionCurrencyId_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _TransactionCurrencyId_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.TransactionCurrencyId;
                }
                private static void _TransactionCurrencyId_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, global::System.Nullable<global::System.Guid> v)
                {
                    d.ImplementationEntity.TransactionCurrencyId = v;
                }
                private static void _TransactionCurrencyId_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.TransactionCurrencyId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Entry
                    ImportSequenceNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ImportSequenceNumber",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ImportSequenceNumber_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ImportSequenceNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ImportSequenceNumber_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ImportSequenceNumber_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ImportSequenceNumber_OnValueChanged);
                private static void _ImportSequenceNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._ImportSequenceNumber, sf);
                }
                private static bool _ImportSequenceNumber_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.ImportSequenceNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _ImportSequenceNumber_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ImportSequenceNumber_Validate(r);
                }
                private static global::System.Nullable<int> _ImportSequenceNumber_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.ImportSequenceNumber;
                }
                private static void _ImportSequenceNumber_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.ImportSequenceNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<decimal>>.Entry
                    ReportedRevenue_Base = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "ReportedRevenue_Base",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ReportedRevenue_Base_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ReportedRevenue_Base_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ReportedRevenue_Base_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ReportedRevenue_Base_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ReportedRevenue_Base_OnValueChanged);
                private static void _ReportedRevenue_Base_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._ReportedRevenue_Base, sf);
                }
                private static bool _ReportedRevenue_Base_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.ReportedRevenue_Base_IsReadOnly(ref result);
                    return result;
                }
                private static void _ReportedRevenue_Base_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ReportedRevenue_Base_Validate(r);
                }
                private static global::System.Nullable<decimal> _ReportedRevenue_Base_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.ReportedRevenue_Base;
                }
                private static void _ReportedRevenue_Base_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.ReportedRevenue_Base_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry
                    YomiName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Entry(
                        "YomiName",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._YomiName_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._YomiName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._YomiName_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._YomiName_GetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._YomiName_SetImplementationValue,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._YomiName_OnValueChanged);
                private static void _YomiName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._YomiName, sf);
                }
                private static bool _YomiName_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.YomiName_IsReadOnly(ref result);
                    return result;
                }
                private static void _YomiName_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.YomiName_Validate(r);
                }
                private static string _YomiName_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.YomiName;
                }
                private static void _YomiName_SetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d, string v)
                {
                    d.ImplementationEntity.YomiName = v;
                }
                private static void _YomiName_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.YomiName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    CreatedOnBehalfBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "CreatedOnBehalfBy",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._CreatedOnBehalfBy_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._CreatedOnBehalfBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._CreatedOnBehalfBy_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._CreatedOnBehalfBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._CreatedOnBehalfBy_OnValueChanged);
                private static void _CreatedOnBehalfBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedOnBehalfBy, sf);
                }
                private static bool _CreatedOnBehalfBy_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.CreatedOnBehalfBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedOnBehalfBy_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedOnBehalfBy_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _CreatedOnBehalfBy_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedOnBehalfBy;
                }
                private static void _CreatedOnBehalfBy_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.CreatedOnBehalfBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry
                    ModifiedOnBehalfBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.Guid>>.Entry(
                        "ModifiedOnBehalfBy",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ModifiedOnBehalfBy_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ModifiedOnBehalfBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ModifiedOnBehalfBy_Validate,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ModifiedOnBehalfBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._ModifiedOnBehalfBy_OnValueChanged);
                private static void _ModifiedOnBehalfBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.Guid>>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedOnBehalfBy, sf);
                }
                private static bool _ModifiedOnBehalfBy_ComputeIsReadOnly(global::LightSwitchApplication.Competitor e)
                {
                    bool result = false;
                    e.ModifiedOnBehalfBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedOnBehalfBy_Validate(global::LightSwitchApplication.Competitor e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedOnBehalfBy_Validate(r);
                }
                private static global::System.Nullable<global::System.Guid> _ModifiedOnBehalfBy_GetImplementationValue(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedOnBehalfBy;
                }
                private static void _ModifiedOnBehalfBy_OnValueChanged(global::LightSwitchApplication.Competitor e)
                {
                    e.ModifiedOnBehalfBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::LightSwitchApplication.LeadCompetitor>.Entry
                    leadcompetitors_associations = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::LightSwitchApplication.LeadCompetitor>.Entry(
                        "leadcompetitors_associations",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._leadcompetitors_associations_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._leadcompetitors_associations_GetReferencedEntities,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._leadcompetitors_associations_GetEntityCollection);
                private static void _leadcompetitors_associations_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::LightSwitchApplication.LeadCompetitor>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._leadcompetitors_associations, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.LeadCompetitor> _leadcompetitors_associations_GetReferencedEntities(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.LeadCompetitor, global::LightSwitchApplication.LeadCompetitor.DetailsClass>(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.leadcompetitors_associations, ref d._leadcompetitors_associations);
                }
                private static global::System.Collections.IEnumerable _leadcompetitors_associations_GetEntityCollection(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.leadcompetitors_associations;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::LightSwitchApplication.OpportunityClose>.Entry
                    Competitor_opportunity_activities = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::LightSwitchApplication.OpportunityClose>.Entry(
                        "Competitor_opportunity_activities",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Competitor_opportunity_activities_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Competitor_opportunity_activities_GetReferencedEntities,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._Competitor_opportunity_activities_GetEntityCollection);
                private static void _Competitor_opportunity_activities_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::LightSwitchApplication.OpportunityClose>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._Competitor_opportunity_activities, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.OpportunityClose> _Competitor_opportunity_activities_GetReferencedEntities(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.OpportunityClose, global::LightSwitchApplication.OpportunityClose.DetailsClass>(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.Competitor_opportunity_activities, ref d._Competitor_opportunity_activities);
                }
                private static global::System.Collections.IEnumerable _Competitor_opportunity_activities_GetEntityCollection(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.Competitor_opportunity_activities;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::LightSwitchApplication.OpportunityCompetitor>.Entry
                    opportunitycompetitors_associations = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::LightSwitchApplication.OpportunityCompetitor>.Entry(
                        "opportunitycompetitors_associations",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._opportunitycompetitors_associations_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._opportunitycompetitors_associations_GetReferencedEntities,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._opportunitycompetitors_associations_GetEntityCollection);
                private static void _opportunitycompetitors_associations_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::LightSwitchApplication.OpportunityCompetitor>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._opportunitycompetitors_associations, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.OpportunityCompetitor> _opportunitycompetitors_associations_GetReferencedEntities(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.OpportunityCompetitor, global::LightSwitchApplication.OpportunityCompetitor.DetailsClass>(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.opportunitycompetitors_associations, ref d._opportunitycompetitors_associations);
                }
                private static global::System.Collections.IEnumerable _opportunitycompetitors_associations_GetEntityCollection(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.opportunitycompetitors_associations;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::LightSwitchApplication.CompetitorProduct>.Entry
                    competitorproduct_associations = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::LightSwitchApplication.CompetitorProduct>.Entry(
                        "competitorproduct_associations",
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._competitorproduct_associations_Stub,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._competitorproduct_associations_GetReferencedEntities,
                        global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties._competitorproduct_associations_GetEntityCollection);
                private static void _competitorproduct_associations_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Competitor.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::LightSwitchApplication.CompetitorProduct>.Data> c, global::LightSwitchApplication.Competitor.DetailsClass d, object sf)
                {
                    c(d, ref d._competitorproduct_associations, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.CompetitorProduct> _competitorproduct_associations_GetReferencedEntities(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.CompetitorProduct, global::LightSwitchApplication.CompetitorProduct.DetailsClass>(global::LightSwitchApplication.Competitor.DetailsClass.PropertySetProperties.competitorproduct_associations, ref d._competitorproduct_associations);
                }
                private static global::System.Collections.IEnumerable _competitorproduct_associations_GetEntityCollection(global::LightSwitchApplication.Competitor.DetailsClass d)
                {
                    return d.ImplementationEntity.competitorproduct_associations;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Guid>.Data _CompetitorId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Guid>.Data _Address1_AddressId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Guid>.Data _Address2_AddressId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _OrganizationId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _Overview;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _ReferenceInfoUrl;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<decimal>>.Data _ReportedRevenue;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Data _ReportingQuarter;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Data _ReportingYear;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _Strengths;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _Weaknesses;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _Opportunities;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _Threats;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _TickerSymbol;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _KeyProduct;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _StockExchange;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<double>>.Data _WinPercentage;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _WebSiteUrl;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _CreatedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ModifiedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _ModifiedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<long>>.Data _VersionNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Data _Address1_AddressTypeCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _Address1_Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _Address1_Line1;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _Address1_Line2;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _Address1_Line3;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _Address1_City;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _Address1_StateOrProvince;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _Address1_County;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _Address1_Country;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _Address1_PostOfficeBox;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _Address1_PostalCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Data _Address1_UTCOffset;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _Address1_UPSZone;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<double>>.Data _Address1_Latitude;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _Address1_Telephone1;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<double>>.Data _Address1_Longitude;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Data _Address1_ShippingMethodCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _Address1_Telephone2;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _Address1_Telephone3;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _Address1_Fax;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Data _Address2_AddressTypeCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _Address2_Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _Address2_Line1;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _Address2_Line2;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _Address2_Line3;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _Address2_City;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _Address2_StateOrProvince;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _Address2_County;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _Address2_Country;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _Address2_PostOfficeBox;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _Address2_PostalCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Data _Address2_UTCOffset;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _Address2_UPSZone;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<double>>.Data _Address2_Latitude;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _Address2_Telephone1;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<double>>.Data _Address2_Longitude;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Data _Address2_ShippingMethodCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _Address2_Telephone2;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _Address2_Telephone3;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _Address2_Fax;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Data _UTCConversionTimeZoneCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Data _TimeZoneRuleVersionNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _OverriddenCreatedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<decimal>>.Data _ExchangeRate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _TransactionCurrencyId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<int>>.Data _ImportSequenceNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<decimal>>.Data _ReportedRevenue_Base;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, string>.Data _YomiName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _CreatedOnBehalfBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::System.Nullable<global::System.Guid>>.Data _ModifiedOnBehalfBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::LightSwitchApplication.LeadCompetitor>.Data _leadcompetitors_associations;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::LightSwitchApplication.OpportunityClose>.Data _Competitor_opportunity_activities;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::LightSwitchApplication.OpportunityCompetitor>.Data _opportunitycompetitors_associations;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Competitor, global::LightSwitchApplication.Competitor.DetailsClass, global::LightSwitchApplication.CompetitorProduct>.Data _competitorproduct_associations;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
    public sealed partial class ContactLead : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.ContactLead, global::LightSwitchApplication.ContactLead.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the ContactLead entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ContactLead()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ContactLead(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ContactLead> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.ContactLead.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactLead_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactLead_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Guid ContactLeadId
        {
            get
            {
                return global::LightSwitchApplication.ContactLead.DetailsClass.GetValue(this, global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties.ContactLeadId);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactLeadId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactLeadId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactLeadId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<long> VersionNumber
        {
            get
            {
                return global::LightSwitchApplication.ContactLead.DetailsClass.GetValue(this, global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties.VersionNumber);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Lead contactleads_association_lead
        {
            get
            {
                return global::LightSwitchApplication.ContactLead.DetailsClass.GetValue(this, global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties.contactleads_association_lead);
            }
            set
            {
                global::LightSwitchApplication.ContactLead.DetailsClass.SetValue(this, global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties.contactleads_association_lead, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void contactleads_association_lead_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void contactleads_association_lead_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void contactleads_association_lead_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Contact contactleads_association_contact
        {
            get
            {
                return global::LightSwitchApplication.ContactLead.DetailsClass.GetValue(this, global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties.contactleads_association_contact);
            }
            set
            {
                global::LightSwitchApplication.ContactLead.DetailsClass.SetValue(this, global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties.contactleads_association_contact, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void contactleads_association_contact_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void contactleads_association_contact_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void contactleads_association_contact_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.ContactLead,
                global::LightSwitchApplication.ContactLead.DetailsClass,
                global::LightSwitchApplication.ContactLead.DetailsClass.IImplementation,
                global::LightSwitchApplication.ContactLead.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ContactLead, global::LightSwitchApplication.ContactLead.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ContactLead, global::LightSwitchApplication.ContactLead.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties.ContactLeadId;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ContactLead, global::LightSwitchApplication.ContactLead.DetailsClass>.Entry
                __ContactLeadEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ContactLead, global::LightSwitchApplication.ContactLead.DetailsClass>.Entry(
                    global::LightSwitchApplication.ContactLead.DetailsClass.__ContactLead_CreateNew,
                    global::LightSwitchApplication.ContactLead.DetailsClass.__ContactLead_Created,
                    global::LightSwitchApplication.ContactLead.DetailsClass.__ContactLead_AllowSaveWithErrors);
            private static global::LightSwitchApplication.ContactLead __ContactLead_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ContactLead> es)
            {
                return new global::LightSwitchApplication.ContactLead(es);
            }
            private static void __ContactLead_Created(global::LightSwitchApplication.ContactLead e)
            {
                e.ContactLead_Created();
            }
            private static bool __ContactLead_AllowSaveWithErrors(global::LightSwitchApplication.ContactLead e)
            {
                bool result = false;
                e.ContactLead_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ContactLead, global::LightSwitchApplication.ContactLead.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ContactLead, global::LightSwitchApplication.ContactLead.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.ContactLead.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.ContactLead, global::LightSwitchApplication.ContactLead.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ContactLead, global::LightSwitchApplication.ContactLead.DetailsClass, global::System.Guid> ContactLeadId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties.ContactLeadId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ContactLead, global::LightSwitchApplication.ContactLead.DetailsClass, global::System.Guid>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ContactLead, global::LightSwitchApplication.ContactLead.DetailsClass, global::System.Nullable<long>> VersionNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties.VersionNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ContactLead, global::LightSwitchApplication.ContactLead.DetailsClass, global::System.Nullable<long>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ContactLead, global::LightSwitchApplication.ContactLead.DetailsClass, global::LightSwitchApplication.Lead> contactleads_association_lead
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties.contactleads_association_lead) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ContactLead, global::LightSwitchApplication.ContactLead.DetailsClass, global::LightSwitchApplication.Lead>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ContactLead, global::LightSwitchApplication.ContactLead.DetailsClass, global::LightSwitchApplication.Contact> contactleads_association_contact
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties.contactleads_association_contact) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ContactLead, global::LightSwitchApplication.ContactLead.DetailsClass, global::LightSwitchApplication.Contact>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new global::System.Guid ContactLeadId { get; }
                new global::System.Nullable<long> VersionNumber { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation contactleads_association_lead { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation contactleads_association_contact { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ContactLead, global::LightSwitchApplication.ContactLead.DetailsClass, global::System.Guid>.Entry
                    ContactLeadId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ContactLead, global::LightSwitchApplication.ContactLead.DetailsClass, global::System.Guid>.Entry(
                        "ContactLeadId",
                        global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties._ContactLeadId_Stub,
                        global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties._ContactLeadId_ComputeIsReadOnly,
                        global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties._ContactLeadId_Validate,
                        global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties._ContactLeadId_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties._ContactLeadId_OnValueChanged);
                private static void _ContactLeadId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ContactLead.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ContactLead, global::LightSwitchApplication.ContactLead.DetailsClass, global::System.Guid>.Data> c, global::LightSwitchApplication.ContactLead.DetailsClass d, object sf)
                {
                    c(d, ref d._ContactLeadId, sf);
                }
                private static bool _ContactLeadId_ComputeIsReadOnly(global::LightSwitchApplication.ContactLead e)
                {
                    bool result = false;
                    e.ContactLeadId_IsReadOnly(ref result);
                    return result;
                }
                private static void _ContactLeadId_Validate(global::LightSwitchApplication.ContactLead e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ContactLeadId_Validate(r);
                }
                private static global::System.Guid _ContactLeadId_GetImplementationValue(global::LightSwitchApplication.ContactLead.DetailsClass d)
                {
                    return d.ImplementationEntity.ContactLeadId;
                }
                private static void _ContactLeadId_OnValueChanged(global::LightSwitchApplication.ContactLead e)
                {
                    e.ContactLeadId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ContactLead, global::LightSwitchApplication.ContactLead.DetailsClass, global::System.Nullable<long>>.Entry
                    VersionNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ContactLead, global::LightSwitchApplication.ContactLead.DetailsClass, global::System.Nullable<long>>.Entry(
                        "VersionNumber",
                        global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties._VersionNumber_Stub,
                        global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties._VersionNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties._VersionNumber_Validate,
                        global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties._VersionNumber_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties._VersionNumber_OnValueChanged);
                private static void _VersionNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ContactLead.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ContactLead, global::LightSwitchApplication.ContactLead.DetailsClass, global::System.Nullable<long>>.Data> c, global::LightSwitchApplication.ContactLead.DetailsClass d, object sf)
                {
                    c(d, ref d._VersionNumber, sf);
                }
                private static bool _VersionNumber_ComputeIsReadOnly(global::LightSwitchApplication.ContactLead e)
                {
                    bool result = false;
                    e.VersionNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _VersionNumber_Validate(global::LightSwitchApplication.ContactLead e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.VersionNumber_Validate(r);
                }
                private static global::System.Nullable<long> _VersionNumber_GetImplementationValue(global::LightSwitchApplication.ContactLead.DetailsClass d)
                {
                    return d.ImplementationEntity.VersionNumber;
                }
                private static void _VersionNumber_OnValueChanged(global::LightSwitchApplication.ContactLead e)
                {
                    e.VersionNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ContactLead, global::LightSwitchApplication.ContactLead.DetailsClass, global::LightSwitchApplication.Lead>.Entry
                    contactleads_association_lead = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ContactLead, global::LightSwitchApplication.ContactLead.DetailsClass, global::LightSwitchApplication.Lead>.Entry(
                        "contactleads_association_lead",
                        global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties._contactleads_association_lead_Stub,
                        global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties._contactleads_association_lead_ComputeIsReadOnly,
                        global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties._contactleads_association_lead_Validate,
                        global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties._contactleads_association_lead_GetCoreImplementationValue,
                        global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties._contactleads_association_lead_GetImplementationValue,
                        global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties._contactleads_association_lead_SetImplementationValue,
                        global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties._contactleads_association_lead_Refresh,
                        global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties._contactleads_association_lead_OnValueChanged);
                private static void _contactleads_association_lead_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ContactLead.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ContactLead, global::LightSwitchApplication.ContactLead.DetailsClass, global::LightSwitchApplication.Lead>.Data> c, global::LightSwitchApplication.ContactLead.DetailsClass d, object sf)
                {
                    c(d, ref d._contactleads_association_lead, sf);
                }
                private static bool _contactleads_association_lead_ComputeIsReadOnly(global::LightSwitchApplication.ContactLead e)
                {
                    bool result = false;
                    e.contactleads_association_lead_IsReadOnly(ref result);
                    return result;
                }
                private static void _contactleads_association_lead_Validate(global::LightSwitchApplication.ContactLead e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.contactleads_association_lead_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _contactleads_association_lead_GetCoreImplementationValue(global::LightSwitchApplication.ContactLead.DetailsClass d)
                {
                    return d.ImplementationEntity.contactleads_association_lead;
                }
                private static global::LightSwitchApplication.Lead _contactleads_association_lead_GetImplementationValue(global::LightSwitchApplication.ContactLead.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Lead, global::LightSwitchApplication.Lead.DetailsClass>(global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties.contactleads_association_lead, ref d._contactleads_association_lead);
                }
                private static void _contactleads_association_lead_SetImplementationValue(global::LightSwitchApplication.ContactLead.DetailsClass d, global::LightSwitchApplication.Lead v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties.contactleads_association_lead, ref d._contactleads_association_lead, (i, ev) => i.contactleads_association_lead = ev, v);
                }
                private static void _contactleads_association_lead_Refresh(global::LightSwitchApplication.ContactLead.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties.contactleads_association_lead, ref d._contactleads_association_lead);
                }
                private static void _contactleads_association_lead_OnValueChanged(global::LightSwitchApplication.ContactLead e)
                {
                    e.contactleads_association_lead_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ContactLead, global::LightSwitchApplication.ContactLead.DetailsClass, global::LightSwitchApplication.Contact>.Entry
                    contactleads_association_contact = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ContactLead, global::LightSwitchApplication.ContactLead.DetailsClass, global::LightSwitchApplication.Contact>.Entry(
                        "contactleads_association_contact",
                        global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties._contactleads_association_contact_Stub,
                        global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties._contactleads_association_contact_ComputeIsReadOnly,
                        global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties._contactleads_association_contact_Validate,
                        global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties._contactleads_association_contact_GetCoreImplementationValue,
                        global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties._contactleads_association_contact_GetImplementationValue,
                        global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties._contactleads_association_contact_SetImplementationValue,
                        global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties._contactleads_association_contact_Refresh,
                        global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties._contactleads_association_contact_OnValueChanged);
                private static void _contactleads_association_contact_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ContactLead.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ContactLead, global::LightSwitchApplication.ContactLead.DetailsClass, global::LightSwitchApplication.Contact>.Data> c, global::LightSwitchApplication.ContactLead.DetailsClass d, object sf)
                {
                    c(d, ref d._contactleads_association_contact, sf);
                }
                private static bool _contactleads_association_contact_ComputeIsReadOnly(global::LightSwitchApplication.ContactLead e)
                {
                    bool result = false;
                    e.contactleads_association_contact_IsReadOnly(ref result);
                    return result;
                }
                private static void _contactleads_association_contact_Validate(global::LightSwitchApplication.ContactLead e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.contactleads_association_contact_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _contactleads_association_contact_GetCoreImplementationValue(global::LightSwitchApplication.ContactLead.DetailsClass d)
                {
                    return d.ImplementationEntity.contactleads_association_contact;
                }
                private static global::LightSwitchApplication.Contact _contactleads_association_contact_GetImplementationValue(global::LightSwitchApplication.ContactLead.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass>(global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties.contactleads_association_contact, ref d._contactleads_association_contact);
                }
                private static void _contactleads_association_contact_SetImplementationValue(global::LightSwitchApplication.ContactLead.DetailsClass d, global::LightSwitchApplication.Contact v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties.contactleads_association_contact, ref d._contactleads_association_contact, (i, ev) => i.contactleads_association_contact = ev, v);
                }
                private static void _contactleads_association_contact_Refresh(global::LightSwitchApplication.ContactLead.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.ContactLead.DetailsClass.PropertySetProperties.contactleads_association_contact, ref d._contactleads_association_contact);
                }
                private static void _contactleads_association_contact_OnValueChanged(global::LightSwitchApplication.ContactLead e)
                {
                    e.contactleads_association_contact_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ContactLead, global::LightSwitchApplication.ContactLead.DetailsClass, global::System.Guid>.Data _ContactLeadId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ContactLead, global::LightSwitchApplication.ContactLead.DetailsClass, global::System.Nullable<long>>.Data _VersionNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ContactLead, global::LightSwitchApplication.ContactLead.DetailsClass, global::LightSwitchApplication.Lead>.Data _contactleads_association_lead;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ContactLead, global::LightSwitchApplication.ContactLead.DetailsClass, global::LightSwitchApplication.Contact>.Data _contactleads_association_contact;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
    public sealed partial class ContactOrder : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.ContactOrder, global::LightSwitchApplication.ContactOrder.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the ContactOrder entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ContactOrder()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ContactOrder(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ContactOrder> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.ContactOrder.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactOrder_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactOrder_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Guid ContactOrderId
        {
            get
            {
                return global::LightSwitchApplication.ContactOrder.DetailsClass.GetValue(this, global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties.ContactOrderId);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactOrderId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactOrderId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactOrderId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<long> VersionNumber
        {
            get
            {
                return global::LightSwitchApplication.ContactOrder.DetailsClass.GetValue(this, global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties.VersionNumber);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VersionNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.SalesOrder contactorders_association_salesorder
        {
            get
            {
                return global::LightSwitchApplication.ContactOrder.DetailsClass.GetValue(this, global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties.contactorders_association_salesorder);
            }
            set
            {
                global::LightSwitchApplication.ContactOrder.DetailsClass.SetValue(this, global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties.contactorders_association_salesorder, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void contactorders_association_salesorder_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void contactorders_association_salesorder_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void contactorders_association_salesorder_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Contact contactorders_association_contact
        {
            get
            {
                return global::LightSwitchApplication.ContactOrder.DetailsClass.GetValue(this, global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties.contactorders_association_contact);
            }
            set
            {
                global::LightSwitchApplication.ContactOrder.DetailsClass.SetValue(this, global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties.contactorders_association_contact, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void contactorders_association_contact_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void contactorders_association_contact_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void contactorders_association_contact_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.ContactOrder,
                global::LightSwitchApplication.ContactOrder.DetailsClass,
                global::LightSwitchApplication.ContactOrder.DetailsClass.IImplementation,
                global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ContactOrder, global::LightSwitchApplication.ContactOrder.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ContactOrder, global::LightSwitchApplication.ContactOrder.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties.ContactOrderId;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ContactOrder, global::LightSwitchApplication.ContactOrder.DetailsClass>.Entry
                __ContactOrderEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ContactOrder, global::LightSwitchApplication.ContactOrder.DetailsClass>.Entry(
                    global::LightSwitchApplication.ContactOrder.DetailsClass.__ContactOrder_CreateNew,
                    global::LightSwitchApplication.ContactOrder.DetailsClass.__ContactOrder_Created,
                    global::LightSwitchApplication.ContactOrder.DetailsClass.__ContactOrder_AllowSaveWithErrors);
            private static global::LightSwitchApplication.ContactOrder __ContactOrder_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ContactOrder> es)
            {
                return new global::LightSwitchApplication.ContactOrder(es);
            }
            private static void __ContactOrder_Created(global::LightSwitchApplication.ContactOrder e)
            {
                e.ContactOrder_Created();
            }
            private static bool __ContactOrder_AllowSaveWithErrors(global::LightSwitchApplication.ContactOrder e)
            {
                bool result = false;
                e.ContactOrder_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ContactOrder, global::LightSwitchApplication.ContactOrder.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ContactOrder, global::LightSwitchApplication.ContactOrder.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.ContactOrder, global::LightSwitchApplication.ContactOrder.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ContactOrder, global::LightSwitchApplication.ContactOrder.DetailsClass, global::System.Guid> ContactOrderId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties.ContactOrderId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ContactOrder, global::LightSwitchApplication.ContactOrder.DetailsClass, global::System.Guid>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ContactOrder, global::LightSwitchApplication.ContactOrder.DetailsClass, global::System.Nullable<long>> VersionNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties.VersionNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ContactOrder, global::LightSwitchApplication.ContactOrder.DetailsClass, global::System.Nullable<long>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ContactOrder, global::LightSwitchApplication.ContactOrder.DetailsClass, global::LightSwitchApplication.SalesOrder> contactorders_association_salesorder
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties.contactorders_association_salesorder) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ContactOrder, global::LightSwitchApplication.ContactOrder.DetailsClass, global::LightSwitchApplication.SalesOrder>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ContactOrder, global::LightSwitchApplication.ContactOrder.DetailsClass, global::LightSwitchApplication.Contact> contactorders_association_contact
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties.contactorders_association_contact) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ContactOrder, global::LightSwitchApplication.ContactOrder.DetailsClass, global::LightSwitchApplication.Contact>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new global::System.Guid ContactOrderId { get; }
                new global::System.Nullable<long> VersionNumber { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation contactorders_association_salesorder { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation contactorders_association_contact { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ContactOrder, global::LightSwitchApplication.ContactOrder.DetailsClass, global::System.Guid>.Entry
                    ContactOrderId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ContactOrder, global::LightSwitchApplication.ContactOrder.DetailsClass, global::System.Guid>.Entry(
                        "ContactOrderId",
                        global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties._ContactOrderId_Stub,
                        global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties._ContactOrderId_ComputeIsReadOnly,
                        global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties._ContactOrderId_Validate,
                        global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties._ContactOrderId_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties._ContactOrderId_OnValueChanged);
                private static void _ContactOrderId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ContactOrder.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ContactOrder, global::LightSwitchApplication.ContactOrder.DetailsClass, global::System.Guid>.Data> c, global::LightSwitchApplication.ContactOrder.DetailsClass d, object sf)
                {
                    c(d, ref d._ContactOrderId, sf);
                }
                private static bool _ContactOrderId_ComputeIsReadOnly(global::LightSwitchApplication.ContactOrder e)
                {
                    bool result = false;
                    e.ContactOrderId_IsReadOnly(ref result);
                    return result;
                }
                private static void _ContactOrderId_Validate(global::LightSwitchApplication.ContactOrder e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ContactOrderId_Validate(r);
                }
                private static global::System.Guid _ContactOrderId_GetImplementationValue(global::LightSwitchApplication.ContactOrder.DetailsClass d)
                {
                    return d.ImplementationEntity.ContactOrderId;
                }
                private static void _ContactOrderId_OnValueChanged(global::LightSwitchApplication.ContactOrder e)
                {
                    e.ContactOrderId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ContactOrder, global::LightSwitchApplication.ContactOrder.DetailsClass, global::System.Nullable<long>>.Entry
                    VersionNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ContactOrder, global::LightSwitchApplication.ContactOrder.DetailsClass, global::System.Nullable<long>>.Entry(
                        "VersionNumber",
                        global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties._VersionNumber_Stub,
                        global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties._VersionNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties._VersionNumber_Validate,
                        global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties._VersionNumber_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties._VersionNumber_OnValueChanged);
                private static void _VersionNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ContactOrder.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ContactOrder, global::LightSwitchApplication.ContactOrder.DetailsClass, global::System.Nullable<long>>.Data> c, global::LightSwitchApplication.ContactOrder.DetailsClass d, object sf)
                {
                    c(d, ref d._VersionNumber, sf);
                }
                private static bool _VersionNumber_ComputeIsReadOnly(global::LightSwitchApplication.ContactOrder e)
                {
                    bool result = false;
                    e.VersionNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _VersionNumber_Validate(global::LightSwitchApplication.ContactOrder e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.VersionNumber_Validate(r);
                }
                private static global::System.Nullable<long> _VersionNumber_GetImplementationValue(global::LightSwitchApplication.ContactOrder.DetailsClass d)
                {
                    return d.ImplementationEntity.VersionNumber;
                }
                private static void _VersionNumber_OnValueChanged(global::LightSwitchApplication.ContactOrder e)
                {
                    e.VersionNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ContactOrder, global::LightSwitchApplication.ContactOrder.DetailsClass, global::LightSwitchApplication.SalesOrder>.Entry
                    contactorders_association_salesorder = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ContactOrder, global::LightSwitchApplication.ContactOrder.DetailsClass, global::LightSwitchApplication.SalesOrder>.Entry(
                        "contactorders_association_salesorder",
                        global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties._contactorders_association_salesorder_Stub,
                        global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties._contactorders_association_salesorder_ComputeIsReadOnly,
                        global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties._contactorders_association_salesorder_Validate,
                        global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties._contactorders_association_salesorder_GetCoreImplementationValue,
                        global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties._contactorders_association_salesorder_GetImplementationValue,
                        global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties._contactorders_association_salesorder_SetImplementationValue,
                        global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties._contactorders_association_salesorder_Refresh,
                        global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties._contactorders_association_salesorder_OnValueChanged);
                private static void _contactorders_association_salesorder_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ContactOrder.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ContactOrder, global::LightSwitchApplication.ContactOrder.DetailsClass, global::LightSwitchApplication.SalesOrder>.Data> c, global::LightSwitchApplication.ContactOrder.DetailsClass d, object sf)
                {
                    c(d, ref d._contactorders_association_salesorder, sf);
                }
                private static bool _contactorders_association_salesorder_ComputeIsReadOnly(global::LightSwitchApplication.ContactOrder e)
                {
                    bool result = false;
                    e.contactorders_association_salesorder_IsReadOnly(ref result);
                    return result;
                }
                private static void _contactorders_association_salesorder_Validate(global::LightSwitchApplication.ContactOrder e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.contactorders_association_salesorder_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _contactorders_association_salesorder_GetCoreImplementationValue(global::LightSwitchApplication.ContactOrder.DetailsClass d)
                {
                    return d.ImplementationEntity.contactorders_association_salesorder;
                }
                private static global::LightSwitchApplication.SalesOrder _contactorders_association_salesorder_GetImplementationValue(global::LightSwitchApplication.ContactOrder.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.SalesOrder, global::LightSwitchApplication.SalesOrder.DetailsClass>(global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties.contactorders_association_salesorder, ref d._contactorders_association_salesorder);
                }
                private static void _contactorders_association_salesorder_SetImplementationValue(global::LightSwitchApplication.ContactOrder.DetailsClass d, global::LightSwitchApplication.SalesOrder v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties.contactorders_association_salesorder, ref d._contactorders_association_salesorder, (i, ev) => i.contactorders_association_salesorder = ev, v);
                }
                private static void _contactorders_association_salesorder_Refresh(global::LightSwitchApplication.ContactOrder.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties.contactorders_association_salesorder, ref d._contactorders_association_salesorder);
                }
                private static void _contactorders_association_salesorder_OnValueChanged(global::LightSwitchApplication.ContactOrder e)
                {
                    e.contactorders_association_salesorder_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ContactOrder, global::LightSwitchApplication.ContactOrder.DetailsClass, global::LightSwitchApplication.Contact>.Entry
                    contactorders_association_contact = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ContactOrder, global::LightSwitchApplication.ContactOrder.DetailsClass, global::LightSwitchApplication.Contact>.Entry(
                        "contactorders_association_contact",
                        global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties._contactorders_association_contact_Stub,
                        global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties._contactorders_association_contact_ComputeIsReadOnly,
                        global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties._contactorders_association_contact_Validate,
                        global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties._contactorders_association_contact_GetCoreImplementationValue,
                        global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties._contactorders_association_contact_GetImplementationValue,
                        global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties._contactorders_association_contact_SetImplementationValue,
                        global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties._contactorders_association_contact_Refresh,
                        global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties._contactorders_association_contact_OnValueChanged);
                private static void _contactorders_association_contact_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ContactOrder.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ContactOrder, global::LightSwitchApplication.ContactOrder.DetailsClass, global::LightSwitchApplication.Contact>.Data> c, global::LightSwitchApplication.ContactOrder.DetailsClass d, object sf)
                {
                    c(d, ref d._contactorders_association_contact, sf);
                }
                private static bool _contactorders_association_contact_ComputeIsReadOnly(global::LightSwitchApplication.ContactOrder e)
                {
                    bool result = false;
                    e.contactorders_association_contact_IsReadOnly(ref result);
                    return result;
                }
                private static void _contactorders_association_contact_Validate(global::LightSwitchApplication.ContactOrder e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.contactorders_association_contact_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _contactorders_association_contact_GetCoreImplementationValue(global::LightSwitchApplication.ContactOrder.DetailsClass d)
                {
                    return d.ImplementationEntity.contactorders_association_contact;
                }
                private static global::LightSwitchApplication.Contact _contactorders_association_contact_GetImplementationValue(global::LightSwitchApplication.ContactOrder.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass>(global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties.contactorders_association_contact, ref d._contactorders_association_contact);
                }
                private static void _contactorders_association_contact_SetImplementationValue(global::LightSwitchApplication.ContactOrder.DetailsClass d, global::LightSwitchApplication.Contact v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties.contactorders_association_contact, ref d._contactorders_association_contact, (i, ev) => i.contactorders_association_contact = ev, v);
                }
                private static void _contactorders_association_contact_Refresh(global::LightSwitchApplication.ContactOrder.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.ContactOrder.DetailsClass.PropertySetProperties.contactorders_association_contact, ref d._contactorders_association_contact);
                }
                private static void _contactorders_association_contact_OnValueChanged(global::LightSwitchApplication.ContactOrder e)
                {
                    e.contactorders_association_contact_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ContactOrder, global::LightSwitchApplication.ContactOrder.DetailsClass, global::System.Guid>.Data _ContactOrderId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ContactOrder, global::LightSwitchApplication.ContactOrder.DetailsClass, global::System.Nullable<long>>.Data _VersionNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ContactOrder, global::LightSwitchApplication.ContactOrder.DetailsClass, global::LightSwitchApplication.SalesOrder>.Data _contactorders_association_salesorder;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ContactOrder, global::LightSwitchApplication.ContactOrder.DetailsClass, global::LightSwitchApplication.Contact>.Data _contactorders_association_contact;
            
        }
    
        #endregion
    }
    
    #endregion
}
